{"mappings":"C,A,ewBkBI,E,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,S,E,C,E,O,G,E,U,C,E,O,C,C,C,IXKQ,E,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,E,E,O,C,W,W,O,C,E,S,C,E,O,E,C,GZrBZ,IAgBA,EAhBI,EAAU,IAAI,IAgBlB,EAfA,SAAkB,CAAO,CAAE,CAAQ,EACjC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAG,EAAG,GAAK,EAC5C,EAAQ,GAAG,CAAC,CAAQ,CAAC,EAAE,CAAE,CACvB,QAAS,EACT,KAAM,CAAQ,CAAC,EAAI,EAAE,AACvB,EAEJ,C,G,E,Q,S,C,C,C,E,E,E,O,C,e,W,O,C,E,S,C,E,O,E,C,GCRA,IAkCA,EAlCI,EAAY,CAAC,EAkCjB,EAjCA,SAA4B,CAAE,EAC5B,IAAI,EAAQ,CAAS,CAAC,EAAG,CAKzB,OAJK,IACH,EAAQ,AAKZ,WACE,GAAI,CACF,MAAM,AAAI,OACZ,CAAE,MAAO,EAAK,CACZ,IAAI,EAAW,AAAA,CAAA,GAAK,EAAI,KAAI,AAAJ,EAAO,KAAK,CAAC,oEACrC,GAAI,EAGF,MAMI,AAAA,CAAA,GANc,CAAO,CAAC,EAAE,AAMnB,EAAK,OAAO,CAAC,0EAA2E,MAAQ,GAJ7G,CACA,MAAO,GACT,IAhBI,CAAS,CAAC,EAAG,CAAG,GAEX,CACT,C,G,E,Q,S,C,C,C,E,I,E,E,S,E,E,S,E,E,S,E,E,S,E,E,QCIA,CAAA,EAAA,OAAA,CAAiB,SAAU,CAAQ,EACjC,SAAS,EAAuB,CAAG,CAAE,CAAK,CAAE,CAAQ,EAIpB,KAA1B,EAAA,OAAA,CAAiB,IACnB,CAAA,EAAM,S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K,YAAY,CAAC,OAAQ,GAE5B,EAAU,WAAW,CAAC,GACf,GAGI,EAAwB,KACnC,IAAM,EAAO,SAAS,aAAa,CAAC,WAEpC,OADA,EAAK,YAAY,CAAC,aAAc,eACzB,CACT,EAEa,EAA0B,IACrC,OAAO,WAAW,CAChB,OAAO,OAAO,CAAC,GAAU,GAAG,CAAC,CAAC,CAAC,EAAE,GAAK,CAAC,EAAG,KAAK,GG9E7C,EAAW,SAAS,aAAa,CAAC,WACxC,CAAA,EAAS,SAAS,CAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,CAAC,ALrFP,OAAM,UAAoB,Y,S,A,C,Q,A,C,Q,AACxB,QAAgB,eAAiB,cAAe,AAChD,QAAgB,gBAAkB,CAAA,EAAG,EAAY,cAAc,CAAC,KAAK,CAAC,AAAC,AACvE,QAAgB,wBAA0B,CAAA,EAAG,EAAY,cAAc,CAAC,aAAa,CAAC,AAAC,AACvF,QAAgB,kBAAoB,CAAA,EAAG,EAAY,cAAc,CAAC,OAAO,CAAC,AAAC,AAE3E,QAAO,cAAgB,CAAA,EAAG,EAAY,cAAc,CAAC,SAAS,CAAC,AAAC,AAChE,QAAO,WAAa,EAAG,AACvB,QAAO,iBAAmB,wBAAyB,AACnD,QAAO,eAAiB,CAAC,qBAAqB,EAAE,EAAY,UAAU,CAAA,CAAE,AAAC,AAEzE,QAAiB,WAAa,IAAI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D,CACF,CACF,C,I,E,C,E,E,A,W,G,C,Q,C,C,e,C,C,S,C,C,e,C,C,yB,C,C,C,O,C,O,C,C,K,C,C,O,C,C,C,O,C,M,C,C,U,C,C,C,A,a,O,S,Q,G,C,E,S,C,E,O,C,C,E,G,C,E,S,C,E,O,C,C,E,G,C,E,S,C,C,C,C,C,E,O,E,K,C,E,E,C,E,G,C,E,S,C,C,C,E,O,I,K,E,C,E,I,E,E,M,S,C,O,E,E,E,M,S,C,W,E,E,E,M,S,C,G,E,E,E,M,S,C,I,E,E,E,M,S,C,M,E,E,E,O,S,C,W,E,E,E,O,S,C,Q,E,E,E,O,S,C,K,E,E,E,O,S,C,O,E,E,E,O,S,C,O,E,E,E,O,S,C,I,E,E,E,O,S,C,c,E,E,E,O,S,C,I,E,G,E,U,W,I,I,E,U,M,C,E,A,M,G,E,E,E,E,I,C,C,E,C,S,C,E,C,O,E,E,E,G,S,E,C,E,O,S,C,E,I,I,E,U,M,C,E,A,M,E,E,E,E,G,E,E,E,E,I,C,C,E,E,C,S,C,E,C,O,E,E,E,E,C,C,S,E,C,C,C,E,I,E,U,M,C,G,A,K,I,S,C,E,C,S,C,E,C,E,G,E,E,M,I,E,E,M,C,K,K,C,I,E,C,C,E,C,G,A,U,O,E,C,I,E,E,G,I,I,E,I,C,C,C,E,C,C,E,E,E,C,C,C,E,C,C,C,C,O,C,C,S,E,C,E,I,E,E,M,I,G,C,E,E,G,E,G,E,E,K,M,O,C,G,C,C,E,C,A,S,C,E,I,I,E,E,E,E,M,C,I,E,E,I,C,C,C,E,C,I,E,O,C,E,G,G,A,U,O,G,E,W,G,O,C,C,E,C,E,G,C,C,E,C,G,O,C,C,S,E,C,C,C,E,K,A,O,G,C,I,E,E,E,G,G,E,C,G,E,G,C,O,E,E,G,E,G,A,Y,O,E,K,C,O,E,E,K,C,C,E,E,E,C,O,W,O,I,C,C,I,E,E,C,I,O,U,U,O,U,Q,Q,I,M,M,M,Q,a,O,K,S,S,U,S,O,O,M,W,U,O,W,K,Y,M,U,M,S,M,M,K,K,U,K,W,a,S,O,S,O,K,K,K,K,K,K,O,S,S,K,O,I,M,Q,M,M,Q,S,K,O,M,O,U,O,W,Q,M,O,K,W,S,S,I,U,M,W,I,K,K,O,I,O,U,S,S,Q,S,S,O,S,S,Q,M,U,M,Q,Q,K,W,W,Q,K,Q,O,K,Q,K,I,K,M,Q,M,E,E,E,C,M,I,W,c,e,e,gB,mB,S,W,O,O,U,S,O,I,Q,W,Q,Q,O,iB,S,O,W,Q,O,U,U,W,iB,O,O,Q,S,S,O,W,Q,O,Q,O,Q,E,E,E,C,U,gB,sB,c,mB,oB,oB,iB,e,U,U,U,U,U,iB,U,U,c,e,W,e,qB,c,S,e,E,E,E,C,U,gB,S,U,Y,mB,iB,gB,gB,gB,Q,Y,O,e,Y,U,gB,S,M,a,U,M,E,E,E,C,O,W,S,U,Q,S,K,a,gB,K,K,Q,U,W,Q,O,K,S,Q,S,O,O,U,S,M,Q,M,S,a,c,E,E,E,C,U,c,a,W,Y,U,U,S,S,Q,Y,a,iB,c,O,E,E,E,C,Q,E,E,E,C,S,S,Q,M,iB,e,uB,W,a,U,S,U,c,c,U,O,Q,Q,Q,O,U,W,e,S,c,W,W,U,M,W,0B,wB,W,Y,U,e,O,M,U,S,S,O,O,W,K,Y,Y,Q,O,Q,O,O,U,O,M,M,Y,Q,S,M,Y,W,Q,O,Q,U,a,S,O,U,U,c,c,U,gB,sB,S,U,U,a,W,M,W,M,W,O,O,U,a,Q,W,Q,O,Q,O,U,Q,M,S,O,Q,U,W,Q,Y,O,S,S,Q,Q,O,Q,O,E,E,E,C,gB,a,W,qB,Y,S,gB,gB,U,gB,iB,Q,O,K,Q,O,gB,Y,Y,Q,sB,8B,gB,kB,K,K,I,K,K,kB,Y,U,U,M,W,Y,M,W,O,e,Y,S,c,c,gB,c,Y,mB,e,a,e,c,K,K,K,K,a,W,gB,oB,S,O,K,kB,K,M,Y,I,K,K,K,K,U,Y,a,W,O,e,iB,e,mB,iB,Q,a,a,e,e,c,c,mB,Y,M,O,Q,S,O,M,O,a,S,W,U,Q,S,c,S,W,c,O,a,sB,mB,e,S,gB,sB,iB,I,K,K,S,O,O,c,Y,U,S,S,Q,O,kB,Q,mB,mB,e,c,e,c,a,e,mB,oB,iB,kB,oB,iB,S,e,Q,e,iB,W,c,U,U,Y,mB,c,kB,iB,a,O,K,K,U,S,U,a,U,a,gB,gB,Q,e,O,e,mB,mB,I,K,K,Q,I,K,K,I,a,E,E,E,C,S,c,Q,W,Q,e,c,a,a,Q,M,U,e,W,Q,Q,S,O,K,U,S,gB,S,S,iB,Y,W,c,U,U,gB,W,W,O,W,W,a,U,S,S,c,gB,uB,Y,Y,a,W,iB,iB,Y,U,Q,Q,E,E,E,C,a,S,c,Y,c,E,E,E,6B,E,E,yB,E,E,iB,E,E,gC,E,E,kB,E,E,6F,E,E,yB,E,E,+D,E,E,W,I,E,E,O,M,C,C,U,K,U,E,gB,E,e,E,4B,U,E,a,E,S,E,e,E,kB,E,c,E,Y,C,G,I,E,C,Q,E,K,E,uB,E,Q,E,S,C,E,E,S,C,C,C,E,G,A,U,O,G,A,Y,O,E,Y,C,O,K,I,E,K,E,wB,G,E,Y,C,I,C,E,E,Y,C,E,E,I,E,Y,C,E,I,E,E,E,G,C,O,E,Y,C,E,C,W,A,G,E,gB,A,G,C,E,C,M,E,C,O,Q,I,C,uB,E,0B,I,C,E,E,W,M,C,wB,E,C,sB,E,C,uB,E,C,yB,E,C,uB,E,C,wB,E,C,sB,E,C,oB,E,C,uB,E,A,C,E,O,A,S,I,I,E,E,U,M,C,G,A,K,I,S,C,E,C,S,C,E,C,A,a,O,O,K,O,E,A,G,E,G,G,E,O,C,Q,E,O,C,E,C,C,G,C,E,Q,E,E,Q,C,Q,G,E,Q,E,C,E,O,C,O,E,W,C,C,E,E,G,C,S,C,C,C,E,E,E,E,E,a,C,C,iB,C,C,oB,C,C,K,C,C,Q,C,C,W,C,C,a,E,E,Y,E,E,e,C,gB,C,C,U,C,C,a,C,C,C,E,E,E,S,C,G,E,E,a,G,E,E,U,G,E,E,e,G,E,E,c,G,E,E,c,G,A,Y,O,E,C,I,E,E,a,C,W,C,E,O,E,E,O,C,a,E,C,E,E,O,C,a,A,C,C,I,G,G,C,e,E,C,mB,E,C,uB,E,C,qB,E,C,C,E,C,W,E,C,C,E,G,G,C,E,W,C,A,Y,O,G,A,Y,O,I,I,A,K,I,G,kB,C,G,C,c,E,C,S,E,C,Y,E,C,U,E,C,U,E,C,kB,E,C,gB,E,C,e,E,C,C,E,C,e,E,C,C,E,G,K,G,E,C,E,I,K,K,K,K,E,E,G,K,G,E,C,E,I,K,K,K,E,E,G,O,I,C,E,K,C,a,C,S,C,E,a,C,E,W,C,E,M,I,E,mB,C,S,C,E,a,C,E,W,C,E,M,I,E,+B,C,S,C,E,a,C,E,W,C,E,M,C,C,C,I,G,K,G,K,G,C,E,G,C,E,G,C,E,G,C,E,G,C,E,G,C,E,G,C,E,G,C,E,G,C,E,G,C,E,G,C,E,G,C,E,G,C,E,G,C,E,G,C,E,G,C,E,G,C,E,G,K,G,E,C,E,C,iB,Q,W,O,gB,O,S,O,K,K,K,K,Q,U,W,W,Y,S,Q,M,W,Q,Q,Q,M,E,G,K,G,E,C,E,C,Q,Q,M,S,Q,Q,E,G,K,G,E,C,E,C,M,Q,M,K,Q,O,U,c,O,U,Q,Q,Q,Q,E,G,qC,G,6B,G,+B,G,G,G,C,E,G,K,G,E,C,E,C,G,G,G,C,G,G,E,C,E,C,K,K,K,K,Q,E,G,E,C,E,C,iB,E,G,E,C,E,C,Q,Q,O,I,S,E,G,K,G,C,wB,Y,C,G,K,G,K,G,E,a,C,Q,G,S,C,E,O,a,Q,a,Q,E,G,W,I,E,U,M,C,G,A,K,I,S,C,E,C,S,C,E,C,C,E,G,C,I,K,G,G,G,A,U,O,G,C,E,C,C,E,E,E,G,G,A,0B,C,G,A,K,G,O,C,E,iB,E,Y,E,iB,A,E,E,E,G,E,E,gB,E,C,E,E,Y,C,I,G,G,E,E,gB,E,C,E,E,Y,C,I,G,G,E,E,sB,E,C,E,E,kB,C,G,G,G,E,E,qB,E,E,I,E,iB,C,I,G,G,E,E,qB,E,E,I,E,iB,C,I,G,G,E,E,mB,E,C,E,E,e,C,I,G,G,E,E,e,E,C,E,E,W,C,I,C,E,G,E,E,e,E,C,E,E,W,C,I,C,E,G,E,E,E,iB,E,Y,C,G,A,C,I,E,e,C,G,A,C,I,E,e,C,G,E,uB,E,C,E,G,A,C,I,E,wB,C,G,E,kB,E,C,E,G,A,C,I,E,Y,C,G,E,c,E,C,E,G,E,U,E,C,E,G,E,mB,E,C,E,G,E,mB,E,C,E,G,E,U,E,C,E,G,A,C,I,E,Y,C,G,E,oB,E,C,E,G,A,C,I,E,Y,C,G,E,Q,E,C,E,G,E,kB,E,E,G,E,S,E,G,G,E,8B,E,G,G,E,uB,E,G,G,E,uB,E,C,E,E,uB,E,G,E,uB,C,Y,G,C,G,Y,C,E,uB,C,Y,A,E,E,uB,E,G,E,uB,C,kB,G,C,G,kB,C,E,uB,C,kB,A,E,E,uB,E,A,W,O,E,uB,C,8B,E,C,G,8B,C,E,uB,C,8B,A,E,I,C,G,C,C,E,I,C,G,C,C,E,K,G,E,C,E,G,G,E,C,C,I,G,I,G,E,G,G,E,G,I,C,I,G,G,G,E,G,G,E,G,G,E,G,I,C,I,G,U,G,E,G,G,E,G,G,E,G,I,C,I,G,M,G,E,G,G,E,G,G,E,G,K,E,Q,G,K,I,C,G,E,G,E,E,G,E,Q,C,K,E,Q,G,K,I,C,G,E,G,E,E,G,E,Q,C,K,E,iB,E,E,G,E,iB,C,I,E,e,G,K,I,C,G,E,G,E,E,G,E,e,C,K,I,C,E,C,Q,C,C,C,E,I,E,G,C,O,O,O,E,G,K,G,E,G,C,Q,E,O,G,K,E,E,oB,C,C,G,A,Y,O,E,oB,C,U,C,M,E,+E,G,A,Y,O,E,oB,C,e,C,M,E,oF,G,A,C,E,E,oB,A,E,U,C,G,M,K,I,G,C,E,E,E,E,E,O,G,A,U,O,I,C,G,E,U,C,G,E,G,E,G,G,E,E,G,E,C,E,I,K,K,E,E,G,E,C,E,I,K,E,E,G,S,C,E,I,E,G,G,G,E,O,E,C,E,C,a,G,Q,U,C,E,I,E,E,E,O,E,E,E,E,O,Q,E,E,C,E,Y,C,G,E,Y,G,G,A,E,Y,G,G,A,Q,E,E,Y,G,G,A,Q,G,C,A,mB,G,E,C,E,A,E,C,C,E,C,E,C,E,Y,G,G,A,E,Y,G,G,A,S,E,E,Y,G,G,A,S,G,E,C,E,C,C,C,E,C,E,C,E,Y,G,G,A,C,E,Y,G,M,E,C,E,A,G,C,E,Y,G,M,E,C,E,A,G,C,E,C,E,E,C,E,C,E,E,C,E,C,E,A,E,A,0B,M,E,C,E,Y,C,C,E,G,S,C,E,E,E,O,C,C,Q,C,G,G,C,G,G,W,C,E,C,M,E,C,G,E,C,E,G,S,C,C,C,E,G,C,E,E,O,C,C,U,E,gB,C,G,K,C,E,C,M,E,C,E,E,O,C,C,U,K,K,C,E,C,G,E,e,C,G,A,O,G,G,I,G,G,C,G,E,C,M,E,C,M,G,C,E,Y,C,E,G,C,M,E,C,E,E,G,S,C,E,I,E,K,E,K,G,G,E,oB,M,C,I,E,E,E,e,E,G,C,C,E,A,C,0B,I,K,I,C,E,iE,E,gB,E,I,E,E,E,U,C,G,E,G,K,G,G,C,E,I,I,e,C,E,G,C,M,E,C,C,G,C,G,C,E,e,C,C,E,G,c,C,G,W,M,G,C,E,e,C,S,C,G,G,C,C,M,E,C,C,C,I,E,E,I,E,E,e,O,C,G,G,E,Y,C,E,c,C,G,E,U,C,E,E,M,K,I,G,I,C,E,G,O,O,C,E,C,G,E,e,C,C,E,G,S,C,E,O,G,I,C,E,a,E,E,E,E,Y,C,E,Y,C,E,S,C,E,2B,C,E,kB,C,K,E,G,S,C,E,O,a,G,C,A,U,O,E,Q,E,A,U,O,E,W,E,A,Y,O,E,W,E,C,C,E,U,Y,C,G,A,Y,O,E,e,E,A,Y,O,E,Y,E,A,U,O,E,Y,E,A,Y,O,E,Y,E,A,Y,O,E,a,A,C,E,G,S,C,E,M,A,Y,O,G,a,C,E,S,G,C,C,C,C,C,E,E,E,A,I,E,I,C,E,E,E,G,E,C,I,G,S,C,E,I,E,K,G,G,G,sB,C,E,M,G,G,O,G,G,C,E,I,E,G,E,Q,E,G,G,G,mB,C,E,C,Q,E,Y,E,G,E,a,I,C,G,E,iB,G,E,U,E,S,G,E,U,E,W,G,E,Q,G,E,sB,E,I,E,Q,G,E,O,E,E,U,E,I,E,O,G,G,C,E,G,C,E,C,E,E,E,C,E,C,C,G,C,E,C,E,E,G,K,G,Y,Y,Q,E,G,Y,C,I,G,Y,Y,U,G,Y,C,I,M,C,E,G,I,C,E,C,E,C,C,I,E,G,I,E,U,C,E,G,I,E,U,C,G,G,E,C,I,E,E,M,C,I,I,E,E,E,G,E,E,E,C,I,E,G,C,C,E,C,C,E,C,E,c,C,A,C,E,c,E,C,E,E,E,Y,C,E,G,G,C,C,C,O,G,G,C,C,Q,A,a,G,C,G,I,A,C,A,a,G,A,Y,G,A,a,C,G,E,8B,E,S,G,G,G,C,I,I,E,Q,G,E,I,G,E,E,W,C,E,C,G,G,G,C,A,I,E,E,E,E,I,G,E,W,G,I,E,E,O,C,C,Q,E,S,E,G,E,W,C,I,G,G,qB,C,E,M,C,E,E,G,S,C,C,C,C,C,E,G,I,C,A,O,G,A,S,C,G,C,K,G,K,E,E,M,C,E,G,I,C,E,C,E,E,E,G,S,G,I,E,G,S,G,C,E,C,E,E,E,C,E,C,C,I,C,G,I,C,G,Y,Y,Q,E,G,Y,C,I,G,Y,Y,U,G,Y,C,E,G,C,G,kB,Y,Q,E,G,kB,C,I,G,kB,Y,U,G,kB,C,E,G,A,O,G,G,8B,E,C,G,Y,Y,Q,E,G,Y,C,I,G,Y,Y,U,G,Y,C,E,C,E,M,C,C,M,G,E,C,E,O,G,E,G,E,E,G,W,G,A,C,A,Q,G,A,e,G,A,S,C,G,A,W,G,A,I,E,E,U,E,C,E,O,G,I,C,E,G,E,E,G,W,G,E,M,C,E,M,C,C,E,G,S,C,E,M,A,mB,G,E,E,G,E,G,S,C,E,G,G,wB,C,E,M,G,C,W,C,C,C,E,G,C,G,G,G,O,I,E,C,S,G,U,G,S,C,E,kB,G,c,K,C,E,E,E,M,C,K,K,C,G,C,K,C,C,a,C,C,M,C,C,C,C,C,E,C,E,G,G,E,A,U,E,E,E,G,G,E,Q,C,E,E,S,C,E,E,Q,C,C,E,E,a,C,K,E,G,G,qB,C,E,G,E,E,S,C,I,C,A,O,G,A,S,C,I,G,E,G,E,A,gB,G,I,E,gC,G,C,G,E,G,Q,C,G,E,a,G,G,E,G,C,E,Q,E,S,G,C,I,E,O,G,C,G,E,G,Q,C,I,E,C,G,G,G,C,A,I,E,E,E,E,I,G,I,E,G,E,Q,E,G,G,E,E,I,G,G,A,U,O,G,A,Y,O,E,gB,E,G,Q,O,E,gB,C,E,I,I,c,E,E,U,C,G,K,K,mB,E,E,e,C,E,E,G,C,E,E,c,C,E,E,G,E,Y,C,E,G,G,G,G,G,E,E,O,C,C,M,E,C,E,C,G,G,uB,C,E,K,E,G,S,E,C,E,I,E,K,E,G,G,I,G,G,uB,C,E,M,E,E,Q,I,G,G,sB,C,E,M,G,G,G,G,E,O,Y,G,E,E,O,E,G,G,sB,C,E,K,E,O,E,Q,C,S,C,E,I,E,U,M,C,G,A,K,I,S,C,E,C,S,C,E,C,C,E,E,K,E,K,E,K,E,K,G,C,G,C,C,G,C,E,a,E,A,U,O,G,C,G,I,G,A,Y,O,E,Q,C,C,G,A,U,M,C,E,E,Q,E,E,M,E,kC,M,M,E,8B,G,C,E,W,C,O,E,G,I,G,G,E,O,C,E,C,U,O,G,C,G,C,C,E,G,C,G,E,Q,C,C,I,E,G,E,Q,E,G,C,E,C,E,E,E,C,E,C,M,E,0D,C,M,G,a,E,A,C,E,A,C,E,G,gB,E,a,C,U,C,E,C,E,E,Q,G,E,O,E,A,S,E,Q,C,E,E,A,S,E,Q,C,E,E,E,W,C,O,C,G,C,I,C,I,C,I,A,K,E,O,C,K,O,G,G,E,U,C,G,E,G,C,C,E,G,E,E,O,G,K,G,G,E,C,G,I,G,E,U,E,I,E,G,G,E,G,K,E,E,Q,I,G,G,G,G,E,O,Y,G,G,E,O,E,G,G,O,E,G,G,C,G,G,I,E,G,I,C,E,a,E,E,U,E,E,W,C,E,U,O,E,E,M,C,G,U,E,G,c,A,G,C,E,G,I,C,E,E,C,E,E,C,C,I,E,G,E,S,C,E,S,C,O,I,E,C,W,E,E,a,E,E,a,C,O,E,E,a,C,O,C,I,E,E,E,E,a,C,O,C,I,G,C,E,a,E,a,C,O,C,I,C,M,C,E,I,E,C,G,G,G,C,A,I,E,E,E,E,I,G,G,G,E,U,C,G,C,E,E,S,C,W,I,E,U,M,C,G,A,K,I,S,C,E,C,S,C,E,C,C,E,G,G,G,C,C,E,E,W,C,W,G,K,G,C,C,E,E,gB,C,S,C,C,C,C,C,E,O,I,G,C,G,G,G,G,G,G,E,E,E,O,C,S,C,C,C,E,Y,O,G,E,E,C,E,C,E,E,E,U,C,S,C,C,C,E,G,A,K,I,E,C,I,E,E,E,C,E,C,G,O,A,K,E,K,E,E,E,C,E,C,E,E,C,E,A,C,O,E,E,C,E,C,E,E,W,C,S,C,E,E,C,E,C,E,A,E,E,c,C,W,G,G,E,C,G,I,I,E,C,EIvCA,EAAiB,AAAA,EAAA,SAAiB,U,I,E,C,ECYlC,EAVA,SAA6B,CAAG,EAC9B,IAKgB,EALZ,EAAK,SAAS,aAAa,CAAC,OAEhC,OADA,EAAG,SAAS,CAAG,EAKR,MAAM,OAAO,CADJ,EAHD,EAAG,UAAU,EAIA,EAAM,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAHlD,E,I,E,C,EENA,EAAiB,KAAK,KAAK,CAAC,wJ,I,E,C,ECA5B,EAAiB,KAAK,KAAK,CAAC,qrBFmB5B,IAAM,EAA0B,AAAC,AAAA,EAAA,GAAiB,GAAG,CACnD,CAAC,CAAA,GAAE,CAAE,CAAA,SAAE,CAAQ,CAAA,OAAE,CAAM,CAAA,QAAE,CAAO,CAAE,GAAM,CAAA,CACtC,GAAA,EACA,SAAA,EACA,OAAQ,GAAU,AA6Bf,SACL,CAAgB,CAChB,EAAO,AZ0VM,EY1VM,UAAU,EAE7B,IAAM,EAAM,IAAI,IACd,8CAEI,EAAS,IAAI,gBAAgB,CACjC,KAAM,EACN,gBA7C0B,SA8C1B,KAAM,EAAK,QAAQ,EACrB,GAEA,OADA,EAAI,MAAM,CAAG,EAAO,QAAQ,GACrB,EAAI,QAAQ,EACrB,EA3CwC,GACpC,QAAS,CAAA,CAAQ,CAAA,GAAW,CAAC,GAAmB,CAAA,EAAiB,CAAA,CAAC,CACpE,CAAA,GAEI,EAAsC,EAAW,MAAM,CAC3D,CAAC,CAAA,QAAE,CAAO,CAAE,GAAK,IAChB,CAAC,EAAE,CAEO,EAA2B,AAIxC,SAAS,EAAiB,CAA6B,EACrD,OAAO,EAAc,GAAG,CACtB,CAAC,CAAA,GAAE,CAAE,CAAA,KAAE,CAAI,CAAA,UAAE,CAAS,CAAA,KAAE,CAAI,CAAA,MAAE,CAAK,CAAA,QAAE,CAAO,CAAA,QAAE,CAAO,CAAA,QAAE,CAAO,CAAE,GAAM,CAAA,CACpE,GAAA,EACA,KACE,EAAW,IAAI,CAAC,CAAC,CAAA,GAAE,CAAE,CAAE,GAAK,EAAG,QAAQ,KAAO,EAAK,QAAQ,KAC3D,IACF,UAAA,EACA,KAAA,EACA,MAAA,EACA,QAAS,EAAU,EAAiB,GAAW,KAAA,EAC/C,QAAS,GAAW,GAAc,GAAG,aAAe,OAAO,GAC3D,QAAA,CACF,CAAA,EAEJ,EAlBE,EAAA,IAkDK,SAAS,IACd,MAAO,CACL,GAQK,KAAK,GAAG,GAPb,SAAU,AZ2TC,EY3TW,gBAAgB,CACtC,OAAQ,AZ0TG,EY1TS,cAAc,CAClC,QAAS,CAAA,CACX,CACF,CLhFO,IAAM,EAA+B,oB,I,E,C,ESF7B,SAAA,EACb,CAA6B,CAC7B,EAAoB,SAAS,IAAI,CACjC,CAAkC,EAiClC,GA/BK,IACH,EAAO,AAAA,AAAA,EAAA,EAAI,CAAC;;;;;;;;;qBASK,EAAE,EAAA,GAAW;;;;MAI5B,EAAE,AAAA,AAAA,EAAA,GAAI,KAAK;;;qBAGI,EAAE,EAAA,GAAW;;;;WAIvB,CAAC,CAEP,AAAA,CAAA,GAAiB,CAAA,EAAmB,OAAO,CAAC,IAG1C,EAAK,mBAAmB,EAC3B,CAAA,EAAK,mBAAmB,CAAG,AAAC,GAC1B,AAAA,CAAA,ST5BJ,CAAgC,CAChC,CAA8B,EAE9B,EAAoB,cAAc,GAElC,IAAM,EAAiB,EAAoB,MAAM,CAC3C,EAAe,GAAgB,cAAc,YACnD,GAAI,EAAc,CAChB,IAAM,EAAc,EAAa,KAAK,CAAC,IAAI,EAC3C,CAAA,EAAa,KAAK,CAAG,GACrB,EAAa,aAAa,CAAC,IAAI,MAAM,UAErC,IAAM,EAAO,AAAA,WK6Cf,GAAM,CAAA,SACJ,EAAW,AZ0UA,EY1UY,gBAAgB,CAAA,OACvC,EAAS,AZyUE,EYzUU,cAAc,CACpC,CAAG,GAAgB,IACpB,MAAO,CACL,OAAQ,GAAc,GACtB,SAAA,EACA,OAAA,EACA,SAAU,AAAA,EAAiB,KAAK,GAAG,IACnC,QAAS,CAAA,CACX,CACF,ILvDU,EAAU,AAAA,SEnBlB,CACE,KAAM,CAAA,SAAE,CAAQ,CAAA,OAAE,CAAM,CAAA,SAAE,CAAQ,CAAA,QAAE,CAAO,CAAE,CAAA,KAC7C,CAAI,CAAA,MACJ,CAAK,CAAA,QACL,CAAO,CAAA,QACP,CAAO,CACK,CACd,CAAsB,EAEtB,GAAM,CAAE,UAAW,CAAa,CAAE,IAAK,CAAW,CAAE,CAClD,AAAmB,UAAnB,OAAO,EAAuB,CAAE,UAAW,CAAS,EAAI,EAEpD,EAAU,AAAA,AAAA,EAAA,EAAI,CAAC;IACnB,EAAE,EAAQ,CAAE,MAAA,CAAM,EAAI,CAAC,EAAE;IACzB,EAAE,EAAU,CAAE,QAAS,EAAG,EAAI,CAAC,EAAE;IACjC,EAAE,EAAU,CAAE,QAAS,EAAG,EAAI,CAAC,EAAE;IACjC,EAAE,EAAU,CAAE,kBAAmB,EAAG,EAAI,CAAC,EAAE;;0BAErB,EAAE,EAAc,CAAE,SAAU,CAAY,EAAI,CAAC,EAAE;MACnE,EAAE,EAAc;;;OAGf,EAAE,EAAS;;4BAEU,EAAE,EAAO,2BAA2B,EAAE,EAAS;wCACnC,EAAE,AAAA,AAAA,EAAA,GAAI,GAAM;iBACnC,CAAC,CAGhB,OAFA,EAAU,WAAW,CAAC,GAEf,CACT,EFVM,CACE,GAAI,KAAK,GAAG,GACZ,KAAA,EACA,KAAM,AAAA,AAAA,EAAA,GAAU,QAAQ,CAAC,EAAa,CACpC,aAAc,CACZ,IACA,IACA,IACA,IACA,QACA,OACA,aACA,MACD,CACD,aAAc,CAAC,MAAO,MAAM,CAC5B,YAAa,CAAC,UAAW,SAAS,AACpC,GACA,QAAS,AAAgB,KAAA,IAAhB,EAAK,MAAM,AACtB,EACA,GAEF,EAAe,aAAa,CAC1B,IAAI,YACF,EACA,CACE,QAAS,CAAA,EACT,SAAU,CAAA,EACV,OAAQ,CAAE,QAAA,CAAQ,CACpB,GAGN,CACF,CSlBM,EAA2B,EAAG,EAFlC,EAKI,CAAC,EAAK,QAAQ,CAAE,CAClB,IAAM,EAAS,EAAK,aAAa,CAC/B,6BAEF,CAAA,EAAK,QAAQ,CAAG,IAAM,AAAA,EAAmB,EAAQ,CAAA,EACnD,CAQA,OANA,EAAK,gBAAgB,CAAC,SAAU,EAAK,mBAAmB,EACxD,EAAK,gBAAgB,CAAC,QAAS,EAAK,QAAQ,EAC5C,EACG,aAAa,CAAC,aACb,iBAAiB,QAAS,GAEvB,CACT,CCzDA,EAAiB,AAAA,EAAA,SAAA,YAAA,CAA6C,SAAW,uCFYlE,IAAM,EAA0B,AAAC,GAEtC,QAAQ,GAAG,CAAC,sBAAuB,EAAE,MAAM,CAAC,KAAK,EAEtC,EAAc,AAAC,GAC1B,EAAK,cAAc,CAAC,CAClB,SAAU,SACV,MAAO,OACT,GhBKF,eAAe,MAAM,CAAC,ACuXP,EDvXmB,cAAc,CCuXjC,GDrXf,SAAS,gBAAgB,CAAC,mBAAoB,KAC5C,IAAM,EAAiB,SAAS,cAAc,CAAC,uBAC/C,GAAI,EAAgB,CAElB,IAAM,EAAiB,AAAA,EACrB,SAAS,cAAc,CAAC,oBACxB,GAEI,EAAc,GAAgB,cAClC,wBAEE,IACF,EAAY,MAAM,CAAG,CAAA,EACrB,EAAe,gBAAgB,CAAC,EAA0B,AAAC,IACzD,GAAM,CACJ,OAAQ,CAAA,OAAE,CAAM,CAAE,CACnB,CAAG,CACJ,CAAA,EAAY,MAAM,CAAG,CAAC,CACxB,GACA,EAAe,gBAAgB,CAC7B,QACA,IAAO,EAAY,MAAM,CAAG,CAAA,GAE9B,EAAe,gBAAgB,CAAC,EAA8B,AAAC,IAC7D,GAAM,CACJ,OAAQ,CAAA,QAAE,CAAO,CAAE,CACpB,CAAG,EACJ,AAAA,EAAY,EACd,IAGF,EAAe,gBAAgB,CAAC,ACsVrB,EDtViC,eAAe,CAAE,AAAC,GAC5D,AAAA,EAAwB,IAE1B,EAAe,gBAAgB,CAAC,ACmVrB,EDnViC,uBAAuB,CAAE,AAAC,GACpE,AAAA,CAAA,SmB1D0C,CAAA,OAC9C,CAAM,CAC8B,EACpC,GAAM,CAAA,QAAE,CAAO,CAAE,CAAG,EAEpB,QAAQ,GAAG,CAAC,6BAA8B,GAE1C,IAAI,EAAiB,EAAQ,aAAa,CAAC,oBACtC,IACH,EAAiB,AAAA,AAAA,EAAA,EAAI,CAAC;;;MAGpB,CAAC,CACH,EAAQ,WAAW,CAAC,IAGtB,IAAI,EAAiB,EAAQ,aAAa,CAAC,OAG3C,CAFA,CAAA,EAAiB,AAAA,EAAuB,EAAgB,EAAxD,EAEe,MAAM,CAAG,CAAA,EACnB,EAAe,iBAAiB,EACnC,CAAA,EAAe,SAAS,CAAG,IAAO,EAAe,MAAM,CAAG,CAAA,CAD5D,EAGA,EAAe,gBAAgB,CAAC,QAAS,EAAe,SAAS,EACjE,EAAe,gBAAgB,CAAC,SAAU,EAAe,SAAS,CACpE,CnBiCM,EAAwB,IAE1B,EAAe,gBAAgB,CAAC,ACgVrB,EDhViC,iBAAiB,CAAE,AAAC,GAC9D,AAAA,CAAA,SoB/D4C,CAAA,OAChD,CAAM,CACyB,EAC/B,GAAM,CAAA,QAAE,CAAO,CAAE,CAAG,EAEpB,QAAQ,GAAG,CAAC,kBAAmB,GAE/B,IAAM,EAAiB,EAAQ,aAAa,CAC1C,oCAEF,GAAgB,QAClB,CpBoDM,EAA0B,IAI5B,SACG,cAAc,CAAC,uBACd,iBAAiB,QAAS,AAAC,IAC3B,IAAI,EAAW,CAAA,EACf,AAAA,EAAc,OAAO,CAAC,AAAC,IACrB,IAAM,EAAU,IAAI,EAAY,GAChC,EAAe,MAAM,CAAC,GACjB,IACH,AAAA,EAAY,GACZ,EAAW,CAAA,EAEf,GAEA,AAAA,EAAmB,EAAE,MAAM,CAAuB,CAAA,EACpD,EACJ,CACF,E","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/nanohtml/lib/dom.js","node_modules/hyperx/index.js","node_modules/hyperscript-attribute-to-property/index.js","node_modules/nanohtml/lib/append-child.js","node_modules/nanohtml/lib/svg-tags.js","node_modules/nanohtml/lib/bool-props.js","node_modules/nanohtml/lib/direct-props.js","node_modules/@parcel/runtime-js/lib/runtime-e0e80b1de293f1dd.js","src/main.ts","src/components/PostComment/index.ts","src/components/PostComment/types.ts","src/components/PostComment/utils/index.ts","src/components/PostComment/utils/HTMLSanitizer.ts","src/components/PostComment/templates/index.ts","src/components/PostComment/templates/default.ts","src/helpers/event_handlers/inputComment.ts","src/helpers/event_handlers/publishComment.ts","node_modules/dompurify/dist/purify.js","src/helpers/builders/comment.ts","node_modules/nanohtml/lib/browser.js","node_modules/nanohtml/lib/raw-browser.js","src/helpers/mocks.ts","src/assets/dummy/users.json","src/assets/dummy/comments.json","src/helpers/index.ts","src/helpers/builders/commentAddingForm.ts","node_modules/@parcel/runtime-js/lib/runtime-daec43fa26d44235.js","src/helpers/event_handlers/intentReply.ts","src/helpers/event_handlers/deleteComment.ts"],"sourcesContent":["(function () {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"iE7OH\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", function () { return $0380ce8f1f064ccc$export$6503ec6e8aabbaf; }, function (v) { return $0380ce8f1f064ccc$export$6503ec6e8aabbaf = v; });\nvar $0380ce8f1f064ccc$export$6503ec6e8aabbaf;\nvar $0380ce8f1f064ccc$export$f7ad0328861e2f03;\n\"use strict\";\nvar $0380ce8f1f064ccc$var$mapping = new Map();\nfunction $0380ce8f1f064ccc$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$0380ce8f1f064ccc$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $0380ce8f1f064ccc$var$resolve(id) {\n    var resolved = $0380ce8f1f064ccc$var$mapping.get(id);\n    if (resolved == null) throw new Error('Could not resolve bundle with id ' + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$0380ce8f1f064ccc$export$6503ec6e8aabbaf = $0380ce8f1f064ccc$var$register;\n$0380ce8f1f064ccc$export$f7ad0328861e2f03 = $0380ce8f1f064ccc$var$resolve;\n\n});\n\nparcelRegister(\"aNJCr\", function(module, exports) {\n\n$parcel$export(module.exports, \"getBundleURL\", function () { return $7dd1ddf6834435ca$export$bdfd709ae4826697; }, function (v) { return $7dd1ddf6834435ca$export$bdfd709ae4826697 = v; });\nvar $7dd1ddf6834435ca$export$bdfd709ae4826697;\nvar $7dd1ddf6834435ca$export$c9e73fbda7da57b6;\nvar $7dd1ddf6834435ca$export$5a759dc7a1cfb72a;\n\"use strict\";\nvar $7dd1ddf6834435ca$var$bundleURL = {};\nfunction $7dd1ddf6834435ca$var$getBundleURLCached(id) {\n    var value = $7dd1ddf6834435ca$var$bundleURL[id];\n    if (!value) {\n        value = $7dd1ddf6834435ca$var$getBundleURL();\n        $7dd1ddf6834435ca$var$bundleURL[id] = value;\n    }\n    return value;\n}\nfunction $7dd1ddf6834435ca$var$getBundleURL() {\n    try {\n        throw new Error();\n    } catch (err) {\n        var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n        if (matches) // The first two stack frames will be this function and getBundleURLCached.\n        // Use the 3rd one, which will be a runtime in the original bundle.\n        return $7dd1ddf6834435ca$var$getBaseURL(matches[2]);\n    }\n    return '/';\n}\nfunction $7dd1ddf6834435ca$var$getBaseURL(url) {\n    return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n// TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\nfunction $7dd1ddf6834435ca$var$getOrigin(url) {\n    var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n    if (!matches) throw new Error('Origin not found');\n    return matches[0];\n}\n$7dd1ddf6834435ca$export$bdfd709ae4826697 = $7dd1ddf6834435ca$var$getBundleURLCached;\n$7dd1ddf6834435ca$export$c9e73fbda7da57b6 = $7dd1ddf6834435ca$var$getBaseURL;\n$7dd1ddf6834435ca$export$5a759dc7a1cfb72a = $7dd1ddf6834435ca$var$getOrigin;\n\n});\n\nparcelRegister(\"ly2oH\", function(module, exports) {\n'use strict';\n\nvar $bNZ83 = parcelRequire(\"bNZ83\");\n\nvar $fa4bq = parcelRequire(\"fa4bq\");\n\nvar $6P1MF = parcelRequire(\"6P1MF\");\n\nvar $bmjQA = parcelRequire(\"bmjQA\");\n\nvar $9sIMV = parcelRequire(\"9sIMV\");\nvar $fafea203cb4b2744$var$SVGNS = 'http://www.w3.org/2000/svg';\nvar $fafea203cb4b2744$var$XLINKNS = 'http://www.w3.org/1999/xlink';\nvar $fafea203cb4b2744$var$COMMENT_TAG = '!--';\nmodule.exports = function(document) {\n    function nanoHtmlCreateElement(tag, props, children) {\n        var el;\n        // If an svg tag, it needs a namespace\n        if ($6P1MF.indexOf(tag) !== -1) props.namespace = $fafea203cb4b2744$var$SVGNS;\n        // If we are using a namespace\n        var ns = false;\n        if (props.namespace) {\n            ns = props.namespace;\n            delete props.namespace;\n        }\n        // If we are extending a builtin element\n        var isCustomElement = false;\n        if (props.is) {\n            isCustomElement = props.is;\n            delete props.is;\n        }\n        // Create the element\n        if (ns) {\n            if (isCustomElement) el = document.createElementNS(ns, tag, {\n                is: isCustomElement\n            });\n            else el = document.createElementNS(ns, tag);\n        } else if (tag === $fafea203cb4b2744$var$COMMENT_TAG) return document.createComment(props.comment);\n        else if (isCustomElement) el = document.createElement(tag, {\n            is: isCustomElement\n        });\n        else el = document.createElement(tag);\n        // Create the properties\n        for(var p in props)if (props.hasOwnProperty(p)) {\n            var key = p.toLowerCase();\n            var val = props[p];\n            // Normalize className\n            if (key === 'classname') {\n                key = 'class';\n                p = 'class';\n            }\n            // The for attribute gets transformed to htmlFor, but we just set as for\n            if (p === 'htmlFor') p = 'for';\n            // If a property is boolean, set itself to the key\n            if ($bmjQA.indexOf(key) !== -1) {\n                if (String(val) === 'true') val = key;\n                else if (String(val) === 'false') continue;\n            }\n            // If a property prefers being set directly vs setAttribute\n            if (key.slice(0, 2) === 'on' || $9sIMV.indexOf(key) !== -1) el[p] = val;\n            else if (ns) {\n                if (p === 'xlink:href') el.setAttributeNS($fafea203cb4b2744$var$XLINKNS, p, val);\n                else if (/^xmlns($|:)/i.test(p)) ;\n                else el.setAttributeNS(null, p, val);\n            } else el.setAttribute(p, val);\n        }\n        $fa4bq(el, children);\n        return el;\n    }\n    function createFragment(nodes) {\n        var fragment = document.createDocumentFragment();\n        for(var i = 0; i < nodes.length; i++){\n            if (nodes[i] == null) continue;\n            if (Array.isArray(nodes[i])) fragment.appendChild(createFragment(nodes[i]));\n            else {\n                if (typeof nodes[i] === 'string') nodes[i] = document.createTextNode(nodes[i]);\n                fragment.appendChild(nodes[i]);\n            }\n        }\n        return fragment;\n    }\n    var exports = $bNZ83(nanoHtmlCreateElement, {\n        comments: true,\n        createFragment: createFragment\n    });\n    exports.default = exports;\n    exports.createComment = nanoHtmlCreateElement;\n    return exports;\n};\n\n});\nparcelRegister(\"bNZ83\", function(module, exports) {\n\nvar $cfQOB = parcelRequire(\"cfQOB\");\nvar $8983b03873d31767$var$VAR = 0, $8983b03873d31767$var$TEXT = 1, $8983b03873d31767$var$OPEN = 2, $8983b03873d31767$var$CLOSE = 3, $8983b03873d31767$var$ATTR = 4;\nvar $8983b03873d31767$var$ATTR_KEY = 5, $8983b03873d31767$var$ATTR_KEY_W = 6;\nvar $8983b03873d31767$var$ATTR_VALUE_W = 7, $8983b03873d31767$var$ATTR_VALUE = 8;\nvar $8983b03873d31767$var$ATTR_VALUE_SQ = 9, $8983b03873d31767$var$ATTR_VALUE_DQ = 10;\nvar $8983b03873d31767$var$ATTR_EQ = 11, $8983b03873d31767$var$ATTR_BREAK = 12;\nvar $8983b03873d31767$var$COMMENT = 13;\nmodule.exports = function(h, opts) {\n    if (!opts) opts = {};\n    var concat = opts.concat || function(a, b) {\n        return String(a) + String(b);\n    };\n    if (opts.attrToProp !== false) h = $cfQOB(h);\n    return function(strings) {\n        var state = $8983b03873d31767$var$TEXT, reg = '';\n        var arglen = arguments.length;\n        var parts = [];\n        for(var i = 0; i < strings.length; i++)if (i < arglen - 1) {\n            var arg = arguments[i + 1];\n            var p = parse(strings[i]);\n            var xstate = state;\n            if (xstate === $8983b03873d31767$var$ATTR_VALUE_DQ) xstate = $8983b03873d31767$var$ATTR_VALUE;\n            if (xstate === $8983b03873d31767$var$ATTR_VALUE_SQ) xstate = $8983b03873d31767$var$ATTR_VALUE;\n            if (xstate === $8983b03873d31767$var$ATTR_VALUE_W) xstate = $8983b03873d31767$var$ATTR_VALUE;\n            if (xstate === $8983b03873d31767$var$ATTR) xstate = $8983b03873d31767$var$ATTR_KEY;\n            if (xstate === $8983b03873d31767$var$OPEN) {\n                if (reg === '/') {\n                    p.push([\n                        $8983b03873d31767$var$OPEN,\n                        '/',\n                        arg\n                    ]);\n                    reg = '';\n                } else p.push([\n                    $8983b03873d31767$var$OPEN,\n                    arg\n                ]);\n            } else if (xstate === $8983b03873d31767$var$COMMENT && opts.comments) reg += String(arg);\n            else if (xstate !== $8983b03873d31767$var$COMMENT) p.push([\n                $8983b03873d31767$var$VAR,\n                xstate,\n                arg\n            ]);\n            parts.push.apply(parts, p);\n        } else parts.push.apply(parts, parse(strings[i]));\n        var tree = [\n            null,\n            {},\n            []\n        ];\n        var stack = [\n            [\n                tree,\n                -1\n            ]\n        ];\n        for(var i = 0; i < parts.length; i++){\n            var cur = stack[stack.length - 1][0];\n            var p = parts[i], s = p[0];\n            if (s === $8983b03873d31767$var$OPEN && /^\\//.test(p[1])) {\n                var ix = stack[stack.length - 1][1];\n                if (stack.length > 1) {\n                    stack.pop();\n                    stack[stack.length - 1][0][2][ix] = h(cur[0], cur[1], cur[2].length ? cur[2] : undefined);\n                }\n            } else if (s === $8983b03873d31767$var$OPEN) {\n                var c = [\n                    p[1],\n                    {},\n                    []\n                ];\n                cur[2].push(c);\n                stack.push([\n                    c,\n                    cur[2].length - 1\n                ]);\n            } else if (s === $8983b03873d31767$var$ATTR_KEY || s === $8983b03873d31767$var$VAR && p[1] === $8983b03873d31767$var$ATTR_KEY) {\n                var key = '';\n                var copyKey;\n                for(; i < parts.length; i++){\n                    if (parts[i][0] === $8983b03873d31767$var$ATTR_KEY) key = concat(key, parts[i][1]);\n                    else if (parts[i][0] === $8983b03873d31767$var$VAR && parts[i][1] === $8983b03873d31767$var$ATTR_KEY) {\n                        if (typeof parts[i][2] === 'object' && !key) {\n                            for(copyKey in parts[i][2])if (parts[i][2].hasOwnProperty(copyKey) && !cur[1][copyKey]) cur[1][copyKey] = parts[i][2][copyKey];\n                        } else key = concat(key, parts[i][2]);\n                    } else break;\n                }\n                if (parts[i][0] === $8983b03873d31767$var$ATTR_EQ) i++;\n                var j = i;\n                for(; i < parts.length; i++){\n                    if (parts[i][0] === $8983b03873d31767$var$ATTR_VALUE || parts[i][0] === $8983b03873d31767$var$ATTR_KEY) {\n                        if (!cur[1][key]) cur[1][key] = strfn(parts[i][1]);\n                        else parts[i][1] === \"\" || (cur[1][key] = concat(cur[1][key], parts[i][1]));\n                    } else if (parts[i][0] === $8983b03873d31767$var$VAR && (parts[i][1] === $8983b03873d31767$var$ATTR_VALUE || parts[i][1] === $8983b03873d31767$var$ATTR_KEY)) {\n                        if (!cur[1][key]) cur[1][key] = strfn(parts[i][2]);\n                        else parts[i][2] === \"\" || (cur[1][key] = concat(cur[1][key], parts[i][2]));\n                    } else {\n                        if (key.length && !cur[1][key] && i === j && (parts[i][0] === $8983b03873d31767$var$CLOSE || parts[i][0] === $8983b03873d31767$var$ATTR_BREAK)) // https://html.spec.whatwg.org/multipage/infrastructure.html#boolean-attributes\n                        // empty string is falsy, not well behaved value in browser\n                        cur[1][key] = key.toLowerCase();\n                        if (parts[i][0] === $8983b03873d31767$var$CLOSE) i--;\n                        break;\n                    }\n                }\n            } else if (s === $8983b03873d31767$var$ATTR_KEY) cur[1][p[1]] = true;\n            else if (s === $8983b03873d31767$var$VAR && p[1] === $8983b03873d31767$var$ATTR_KEY) cur[1][p[2]] = true;\n            else if (s === $8983b03873d31767$var$CLOSE) {\n                if ($8983b03873d31767$var$selfClosing(cur[0]) && stack.length) {\n                    var ix = stack[stack.length - 1][1];\n                    stack.pop();\n                    stack[stack.length - 1][0][2][ix] = h(cur[0], cur[1], cur[2].length ? cur[2] : undefined);\n                }\n            } else if (s === $8983b03873d31767$var$VAR && p[1] === $8983b03873d31767$var$TEXT) {\n                if (p[2] === undefined || p[2] === null) p[2] = '';\n                else if (!p[2]) p[2] = concat('', p[2]);\n                if (Array.isArray(p[2][0])) cur[2].push.apply(cur[2], p[2]);\n                else cur[2].push(p[2]);\n            } else if (s === $8983b03873d31767$var$TEXT) cur[2].push(p[1]);\n            else if (s === $8983b03873d31767$var$ATTR_EQ || s === $8983b03873d31767$var$ATTR_BREAK) ;\n            else throw new Error('unhandled: ' + s);\n        }\n        if (tree[2].length > 1 && /^\\s*$/.test(tree[2][0])) tree[2].shift();\n        if (tree[2].length > 2 || tree[2].length === 2 && /\\S/.test(tree[2][1])) {\n            if (opts.createFragment) return opts.createFragment(tree[2]);\n            throw new Error('multiple root elements must be wrapped in an enclosing tag');\n        }\n        if (Array.isArray(tree[2][0]) && typeof tree[2][0][0] === 'string' && Array.isArray(tree[2][0][2])) tree[2][0] = h(tree[2][0][0], tree[2][0][1], tree[2][0][2]);\n        return tree[2][0];\n        function parse(str) {\n            var res = [];\n            if (state === $8983b03873d31767$var$ATTR_VALUE_W) state = $8983b03873d31767$var$ATTR;\n            for(var i = 0; i < str.length; i++){\n                var c = str.charAt(i);\n                if (state === $8983b03873d31767$var$TEXT && c === '<') {\n                    if (reg.length) res.push([\n                        $8983b03873d31767$var$TEXT,\n                        reg\n                    ]);\n                    reg = '';\n                    state = $8983b03873d31767$var$OPEN;\n                } else if (c === '>' && !$8983b03873d31767$var$quot(state) && state !== $8983b03873d31767$var$COMMENT) {\n                    if (state === $8983b03873d31767$var$OPEN && reg.length) res.push([\n                        $8983b03873d31767$var$OPEN,\n                        reg\n                    ]);\n                    else if (state === $8983b03873d31767$var$ATTR_KEY) res.push([\n                        $8983b03873d31767$var$ATTR_KEY,\n                        reg\n                    ]);\n                    else if (state === $8983b03873d31767$var$ATTR_VALUE && reg.length) res.push([\n                        $8983b03873d31767$var$ATTR_VALUE,\n                        reg\n                    ]);\n                    res.push([\n                        $8983b03873d31767$var$CLOSE\n                    ]);\n                    reg = '';\n                    state = $8983b03873d31767$var$TEXT;\n                } else if (state === $8983b03873d31767$var$COMMENT && /-$/.test(reg) && c === '-') {\n                    if (opts.comments) res.push([\n                        $8983b03873d31767$var$ATTR_VALUE,\n                        reg.substr(0, reg.length - 1)\n                    ]);\n                    reg = '';\n                    state = $8983b03873d31767$var$TEXT;\n                } else if (state === $8983b03873d31767$var$OPEN && /^!--$/.test(reg)) {\n                    if (opts.comments) res.push([\n                        $8983b03873d31767$var$OPEN,\n                        reg\n                    ], [\n                        $8983b03873d31767$var$ATTR_KEY,\n                        'comment'\n                    ], [\n                        $8983b03873d31767$var$ATTR_EQ\n                    ]);\n                    reg = c;\n                    state = $8983b03873d31767$var$COMMENT;\n                } else if (state === $8983b03873d31767$var$TEXT || state === $8983b03873d31767$var$COMMENT) reg += c;\n                else if (state === $8983b03873d31767$var$OPEN && c === '/' && reg.length) ;\n                else if (state === $8983b03873d31767$var$OPEN && /\\s/.test(c)) {\n                    if (reg.length) res.push([\n                        $8983b03873d31767$var$OPEN,\n                        reg\n                    ]);\n                    reg = '';\n                    state = $8983b03873d31767$var$ATTR;\n                } else if (state === $8983b03873d31767$var$OPEN) reg += c;\n                else if (state === $8983b03873d31767$var$ATTR && /[^\\s\"'=/]/.test(c)) {\n                    state = $8983b03873d31767$var$ATTR_KEY;\n                    reg = c;\n                } else if (state === $8983b03873d31767$var$ATTR && /\\s/.test(c)) {\n                    if (reg.length) res.push([\n                        $8983b03873d31767$var$ATTR_KEY,\n                        reg\n                    ]);\n                    res.push([\n                        $8983b03873d31767$var$ATTR_BREAK\n                    ]);\n                } else if (state === $8983b03873d31767$var$ATTR_KEY && /\\s/.test(c)) {\n                    res.push([\n                        $8983b03873d31767$var$ATTR_KEY,\n                        reg\n                    ]);\n                    reg = '';\n                    state = $8983b03873d31767$var$ATTR_KEY_W;\n                } else if (state === $8983b03873d31767$var$ATTR_KEY && c === '=') {\n                    res.push([\n                        $8983b03873d31767$var$ATTR_KEY,\n                        reg\n                    ], [\n                        $8983b03873d31767$var$ATTR_EQ\n                    ]);\n                    reg = '';\n                    state = $8983b03873d31767$var$ATTR_VALUE_W;\n                } else if (state === $8983b03873d31767$var$ATTR_KEY) reg += c;\n                else if ((state === $8983b03873d31767$var$ATTR_KEY_W || state === $8983b03873d31767$var$ATTR) && c === '=') {\n                    res.push([\n                        $8983b03873d31767$var$ATTR_EQ\n                    ]);\n                    state = $8983b03873d31767$var$ATTR_VALUE_W;\n                } else if ((state === $8983b03873d31767$var$ATTR_KEY_W || state === $8983b03873d31767$var$ATTR) && !/\\s/.test(c)) {\n                    res.push([\n                        $8983b03873d31767$var$ATTR_BREAK\n                    ]);\n                    if (/[\\w-]/.test(c)) {\n                        reg += c;\n                        state = $8983b03873d31767$var$ATTR_KEY;\n                    } else state = $8983b03873d31767$var$ATTR;\n                } else if (state === $8983b03873d31767$var$ATTR_VALUE_W && c === '\"') state = $8983b03873d31767$var$ATTR_VALUE_DQ;\n                else if (state === $8983b03873d31767$var$ATTR_VALUE_W && c === \"'\") state = $8983b03873d31767$var$ATTR_VALUE_SQ;\n                else if (state === $8983b03873d31767$var$ATTR_VALUE_DQ && c === '\"') {\n                    res.push([\n                        $8983b03873d31767$var$ATTR_VALUE,\n                        reg\n                    ], [\n                        $8983b03873d31767$var$ATTR_BREAK\n                    ]);\n                    reg = '';\n                    state = $8983b03873d31767$var$ATTR;\n                } else if (state === $8983b03873d31767$var$ATTR_VALUE_SQ && c === \"'\") {\n                    res.push([\n                        $8983b03873d31767$var$ATTR_VALUE,\n                        reg\n                    ], [\n                        $8983b03873d31767$var$ATTR_BREAK\n                    ]);\n                    reg = '';\n                    state = $8983b03873d31767$var$ATTR;\n                } else if (state === $8983b03873d31767$var$ATTR_VALUE_W && !/\\s/.test(c)) {\n                    state = $8983b03873d31767$var$ATTR_VALUE;\n                    i--;\n                } else if (state === $8983b03873d31767$var$ATTR_VALUE && /\\s/.test(c)) {\n                    res.push([\n                        $8983b03873d31767$var$ATTR_VALUE,\n                        reg\n                    ], [\n                        $8983b03873d31767$var$ATTR_BREAK\n                    ]);\n                    reg = '';\n                    state = $8983b03873d31767$var$ATTR;\n                } else if (state === $8983b03873d31767$var$ATTR_VALUE || state === $8983b03873d31767$var$ATTR_VALUE_SQ || state === $8983b03873d31767$var$ATTR_VALUE_DQ) reg += c;\n            }\n            if (state === $8983b03873d31767$var$TEXT && reg.length) {\n                res.push([\n                    $8983b03873d31767$var$TEXT,\n                    reg\n                ]);\n                reg = '';\n            } else if (state === $8983b03873d31767$var$ATTR_VALUE && reg.length) {\n                res.push([\n                    $8983b03873d31767$var$ATTR_VALUE,\n                    reg\n                ]);\n                reg = '';\n            } else if (state === $8983b03873d31767$var$ATTR_VALUE_DQ && reg.length) {\n                res.push([\n                    $8983b03873d31767$var$ATTR_VALUE,\n                    reg\n                ]);\n                reg = '';\n            } else if (state === $8983b03873d31767$var$ATTR_VALUE_SQ && reg.length) {\n                res.push([\n                    $8983b03873d31767$var$ATTR_VALUE,\n                    reg\n                ]);\n                reg = '';\n            } else if (state === $8983b03873d31767$var$ATTR_KEY) {\n                res.push([\n                    $8983b03873d31767$var$ATTR_KEY,\n                    reg\n                ]);\n                reg = '';\n            }\n            return res;\n        }\n    };\n    function strfn(x) {\n        if (typeof x === 'function') return x;\n        else if (typeof x === 'string') return x;\n        else if (x && typeof x === 'object') return x;\n        else if (x === null || x === undefined) return x;\n        else return concat('', x);\n    }\n};\nfunction $8983b03873d31767$var$quot(state) {\n    return state === $8983b03873d31767$var$ATTR_VALUE_SQ || state === $8983b03873d31767$var$ATTR_VALUE_DQ;\n}\nvar $8983b03873d31767$var$closeRE = RegExp('^(' + [\n    'area',\n    'base',\n    'basefont',\n    'bgsound',\n    'br',\n    'col',\n    'command',\n    'embed',\n    'frame',\n    'hr',\n    'img',\n    'input',\n    'isindex',\n    'keygen',\n    'link',\n    'meta',\n    'param',\n    'source',\n    'track',\n    'wbr',\n    '!--',\n    // SVG TAGS\n    'animate',\n    'animateTransform',\n    'circle',\n    'cursor',\n    'desc',\n    'ellipse',\n    'feBlend',\n    'feColorMatrix',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'font-face-format',\n    'font-face-name',\n    'font-face-uri',\n    'glyph',\n    'glyphRef',\n    'hkern',\n    'image',\n    'line',\n    'missing-glyph',\n    'mpath',\n    'path',\n    'polygon',\n    'polyline',\n    'rect',\n    'set',\n    'stop',\n    'tref',\n    'use',\n    'view',\n    'vkern'\n].join('|') + ')(?:[\\.#][a-zA-Z0-9\\u007F-\\uFFFF_:-]+)*$');\nfunction $8983b03873d31767$var$selfClosing(tag) {\n    return $8983b03873d31767$var$closeRE.test(tag);\n}\n\n});\nparcelRegister(\"cfQOB\", function(module, exports) {\nmodule.exports = $8ebfdabf033804f1$var$attributeToProperty;\nvar $8ebfdabf033804f1$var$transform = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'http-equiv': 'httpEquiv'\n};\nfunction $8ebfdabf033804f1$var$attributeToProperty(h) {\n    return function(tagName, attrs, children) {\n        for(var attr in attrs)if (attr in $8ebfdabf033804f1$var$transform) {\n            attrs[$8ebfdabf033804f1$var$transform[attr]] = attrs[attr];\n            delete attrs[attr];\n        }\n        return h(tagName, attrs, children);\n    };\n}\n\n});\n\n\nparcelRegister(\"fa4bq\", function(module, exports) {\n'use strict';\nvar $b09b08eb07bf1b39$var$trailingNewlineRegex = /\\n[\\s]+$/;\nvar $b09b08eb07bf1b39$var$leadingNewlineRegex = /^\\n[\\s]+/;\nvar $b09b08eb07bf1b39$var$trailingSpaceRegex = /[\\s]+$/;\nvar $b09b08eb07bf1b39$var$leadingSpaceRegex = /^[\\s]+/;\nvar $b09b08eb07bf1b39$var$multiSpaceRegex = /[\\n\\s]+/g;\nvar $b09b08eb07bf1b39$var$TEXT_TAGS = [\n    'a',\n    'abbr',\n    'b',\n    'bdi',\n    'bdo',\n    'br',\n    'cite',\n    'data',\n    'dfn',\n    'em',\n    'i',\n    'kbd',\n    'mark',\n    'q',\n    'rp',\n    'rt',\n    'rtc',\n    'ruby',\n    's',\n    'amp',\n    'small',\n    'span',\n    'strong',\n    'sub',\n    'sup',\n    'time',\n    'u',\n    'var',\n    'wbr'\n];\nvar $b09b08eb07bf1b39$var$VERBATIM_TAGS = [\n    'code',\n    'pre',\n    'textarea'\n];\nmodule.exports = function appendChild(el, childs) {\n    if (!Array.isArray(childs)) return;\n    var nodeName = el.nodeName.toLowerCase();\n    var hadText = false;\n    var value, leader;\n    for(var i = 0, len = childs.length; i < len; i++){\n        var node = childs[i];\n        if (Array.isArray(node)) {\n            appendChild(el, node);\n            continue;\n        }\n        if (typeof node === 'number' || typeof node === 'boolean' || typeof node === 'function' || node instanceof Date || node instanceof RegExp) node = node.toString();\n        var lastChild = el.childNodes[el.childNodes.length - 1];\n        // Iterate over text nodes\n        if (typeof node === 'string') {\n            hadText = true;\n            // If we already had text, append to the existing text\n            if (lastChild && lastChild.nodeName === '#text') lastChild.nodeValue += node;\n            else {\n                node = el.ownerDocument.createTextNode(node);\n                el.appendChild(node);\n                lastChild = node;\n            }\n            // If this is the last of the child nodes, make sure we close it out\n            // right\n            if (i === len - 1) {\n                hadText = false;\n                // Trim the child text nodes if the current node isn't a\n                // node where whitespace matters.\n                if ($b09b08eb07bf1b39$var$TEXT_TAGS.indexOf(nodeName) === -1 && $b09b08eb07bf1b39$var$VERBATIM_TAGS.indexOf(nodeName) === -1) {\n                    value = lastChild.nodeValue.replace($b09b08eb07bf1b39$var$leadingNewlineRegex, '').replace($b09b08eb07bf1b39$var$trailingSpaceRegex, '').replace($b09b08eb07bf1b39$var$trailingNewlineRegex, '').replace($b09b08eb07bf1b39$var$multiSpaceRegex, ' ');\n                    if (value === '') el.removeChild(lastChild);\n                    else lastChild.nodeValue = value;\n                } else if ($b09b08eb07bf1b39$var$VERBATIM_TAGS.indexOf(nodeName) === -1) {\n                    // The very first node in the list should not have leading\n                    // whitespace. Sibling text nodes should have whitespace if there\n                    // was any.\n                    leader = i === 0 ? '' : ' ';\n                    value = lastChild.nodeValue.replace($b09b08eb07bf1b39$var$leadingNewlineRegex, leader).replace($b09b08eb07bf1b39$var$leadingSpaceRegex, ' ').replace($b09b08eb07bf1b39$var$trailingSpaceRegex, '').replace($b09b08eb07bf1b39$var$trailingNewlineRegex, '').replace($b09b08eb07bf1b39$var$multiSpaceRegex, ' ');\n                    lastChild.nodeValue = value;\n                }\n            }\n        // Iterate over DOM nodes\n        } else if (node && node.nodeType) {\n            // If the last node was a text node, make sure it is properly closed out\n            if (hadText) {\n                hadText = false;\n                // Trim the child text nodes if the current node isn't a\n                // text node or a code node\n                if ($b09b08eb07bf1b39$var$TEXT_TAGS.indexOf(nodeName) === -1 && $b09b08eb07bf1b39$var$VERBATIM_TAGS.indexOf(nodeName) === -1) {\n                    value = lastChild.nodeValue.replace($b09b08eb07bf1b39$var$leadingNewlineRegex, '').replace($b09b08eb07bf1b39$var$trailingNewlineRegex, ' ').replace($b09b08eb07bf1b39$var$multiSpaceRegex, ' ');\n                    // Remove empty text nodes, append otherwise\n                    if (value === '') el.removeChild(lastChild);\n                    else lastChild.nodeValue = value;\n                // Trim the child nodes but preserve the appropriate whitespace\n                } else if ($b09b08eb07bf1b39$var$VERBATIM_TAGS.indexOf(nodeName) === -1) {\n                    value = lastChild.nodeValue.replace($b09b08eb07bf1b39$var$leadingSpaceRegex, ' ').replace($b09b08eb07bf1b39$var$leadingNewlineRegex, '').replace($b09b08eb07bf1b39$var$trailingNewlineRegex, ' ').replace($b09b08eb07bf1b39$var$multiSpaceRegex, ' ');\n                    lastChild.nodeValue = value;\n                }\n            }\n            // Store the last nodename\n            var _nodeName = node.nodeName;\n            if (_nodeName) nodeName = _nodeName.toLowerCase();\n            // Append the node to the DOM\n            el.appendChild(node);\n        }\n    }\n};\n\n});\n\nparcelRegister(\"6P1MF\", function(module, exports) {\n'use strict';\nmodule.exports = [\n    'svg',\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animate',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'circle',\n    'clipPath',\n    'color-profile',\n    'cursor',\n    'defs',\n    'desc',\n    'ellipse',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'filter',\n    'font',\n    'font-face',\n    'font-face-format',\n    'font-face-name',\n    'font-face-src',\n    'font-face-uri',\n    'foreignObject',\n    'g',\n    'glyph',\n    'glyphRef',\n    'hkern',\n    'image',\n    'line',\n    'linearGradient',\n    'marker',\n    'mask',\n    'metadata',\n    'missing-glyph',\n    'mpath',\n    'path',\n    'pattern',\n    'polygon',\n    'polyline',\n    'radialGradient',\n    'rect',\n    'set',\n    'stop',\n    'switch',\n    'symbol',\n    'text',\n    'textPath',\n    'title',\n    'tref',\n    'tspan',\n    'use',\n    'view',\n    'vkern'\n];\n\n});\n\nparcelRegister(\"bmjQA\", function(module, exports) {\n'use strict';\nmodule.exports = [\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defaultchecked',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n\n});\n\nparcelRegister(\"9sIMV\", function(module, exports) {\n'use strict';\nmodule.exports = [\n    'indeterminate'\n];\n\n});\n\n\nvar $3dc507d218933909$exports = {};\n\n\n(parcelRequire(\"iE7OH\")).register((parcelRequire(\"aNJCr\")).getBundleURL('7o1Gz'), JSON.parse(\"[\\\"7o1Gz\\\",\\\"index.91434d53.js\\\",\\\"gLaMk\\\",\\\"sprite.f5ef0385.svg\\\",\\\"jm0TH\\\",\\\"index.949ca88e.css\\\"]\"));\n\nvar $7a9522764e05cda2$export$114e10060e7457c = /*#__PURE__*/ function(SlotName) {\n    SlotName[\"nickname\"] = \"nickname\";\n    SlotName[\"datetime\"] = \"datetime\";\n    SlotName[\"avatar\"] = \"avatar\";\n    SlotName[\"replies\"] = \"replies\";\n    SlotName[\"default\"] = \"default\";\n    return SlotName;\n}({});\n\n\n\nclass $7e0f747abf4b0146$export$2e2bcd8739ae039 {\n    allowedTags;\n    constructor(allowedTags = [\n        'b',\n        'i',\n        'u',\n        's',\n        'small',\n        'mark',\n        'blockquote'\n    ]){\n        this.allowedTags = new Set(allowedTags);\n    }\n    clean(input) {\n        if (!/<[a-z][\\s\\S]*>/i.test(input)) return input;\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(`<div>${input}</div>`, 'text/html');\n        if (!doc.body) return input;\n        const wrapped = doc.body.firstElementChild;\n        if (!wrapped) return input;\n        this._clean(wrapped, [\n            'div'\n        ]);\n        return wrapped.innerHTML;\n    }\n    _clean(node, _extraAllowedTags) {\n        if (node.nodeType === Node.ELEMENT_NODE) {\n            const element = node;\n            const tag = element.tagName.toLowerCase();\n            if (!this.allowedTags.has(tag) && (!_extraAllowedTags || !_extraAllowedTags.includes(tag))) {\n                const parent = element.parentNode;\n                while(element.firstChild)parent.insertBefore(element.firstChild, element);\n                parent.removeChild(element);\n            } else Array.from(element.childNodes).forEach((child)=>this._clean(child));\n        }\n    }\n}\n\n\nconst $5e5fa34344a1714f$export$5b5aedec9076f4c6 = (value)=>{\n    const datetime = new Date(value);\n    return {\n        iso: datetime.toISOString(),\n        humanized: $5e5fa34344a1714f$export$6bc7a21efe788521(datetime)\n    };\n};\nconst $5e5fa34344a1714f$export$6bc7a21efe788521 = (date = new Date())=>{\n    const formattedDate = date.toLocaleDateString('ru-RU', {\n        day: 'numeric',\n        month: 'long',\n        year: date.getFullYear() !== new Date().getFullYear() ? 'numeric' : undefined\n    });\n    const formattedTime = date.toLocaleTimeString('ru-RU', {\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n    });\n    return `${formattedTime}, ${formattedDate}`;\n};\nconst $5e5fa34344a1714f$export$c3d29b5df8a250da = (elem, flag)=>{\n    if (elem) elem.hidden = flag;\n};\nconst $5e5fa34344a1714f$export$22bd32654b194b3f = (elem, flag)=>{\n    if (elem) elem.disabled = flag;\n};\nconst $5e5fa34344a1714f$export$3647eb90f6c46771 = (elem, attrName)=>elem.getAttribute(attrName) !== null;\nconst $5e5fa34344a1714f$export$e64d42a353cd7a44 = (elem, attrName, val)=>val ? elem.setAttribute(attrName, '') : elem.removeAttribute(attrName);\nconst $5e5fa34344a1714f$export$e8e56581baf7cf43 = (elem, name)=>elem.querySelector(name && (0, $7a9522764e05cda2$export$114e10060e7457c).default !== name ? `slot[name=\"${name}\"]` : 'slot:not([name])') ?? null;\nconst $5e5fa34344a1714f$export$de7b072049c48af5 = (component, elem, name = (0, $7a9522764e05cda2$export$114e10060e7457c).default)=>{\n    if (elem instanceof HTMLElement && name != (0, $7a9522764e05cda2$export$114e10060e7457c).default) elem.setAttribute('slot', name);\n    component.appendChild(elem);\n    return elem;\n};\nconst $5e5fa34344a1714f$export$139e6f4077062a47 = ()=>{\n    const elem = document.createElement('article');\n    elem.setAttribute('aria-label', \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\");\n    return elem;\n};\nconst $5e5fa34344a1714f$export$60a7c802e3339d7d = ()=>Object.fromEntries(Object.entries((0, $7a9522764e05cda2$export$114e10060e7457c)).map(([a])=>[\n            a,\n            null\n        ]));\n\n\nconst $f5b370cd49675592$var$template = document.createElement('template');\n$f5b370cd49675592$var$template.innerHTML = `\n<style>\n  :host {}\n\n  .post-comment {}\n\n  .post-comment__wrapper {}\n\n  .post-comment__meta {\n    font-size: 0.8rem;\n    color: gray;\n    display: flex;\n    gap: 1rem;\n  }\n\n  .post-comment__avatar {\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n    overflow: hidden;\n    flex: none;\n  }\n\n  .post-comment__avatar img {\n    object-fit: cover;\n    width: 100%;\n  }\n\n  .post-comment__nickname :not(small) {\n    font-weight: bold;\n  }\n\n  .post-comment__nickname+small {\n    display: none;\n  }\n\n  .post-comment__nickname_current+small {\n    display: initial;\n  }\n\n  .post-comment__content {\n    width: 100%;\n  }\n\n  .post-comment__actions {\n    margin-top: 0.5rem;\n  }\n\n  .post-comment__replies {\n    margin-top: 1.5rem;\n    margin-left: 2rem;\n  }\n</style>\n<div class=\"post-comment\">\n  <div class=\"post-comment__wrapper\">\n    <div class=\"post-comment__meta\">\n      <div class=\"post-comment__avatar\">\n        <slot name=\"avatar\">\n          <img name=\"avatar\" src=\"https://placehold.co/50\" alt=\"\\u{410}\\u{432}\\u{430}\\u{442}\\u{430}\\u{440} \\u{43F}\\u{43E}\\u{43B}\\u{44C}\\u{437}\\u{43E}\\u{432}\\u{430}\\u{442}\\u{435}\\u{43B}\\u{44F} \\u{43D}\\u{435} \\u{437}\\u{430}\\u{434}\\u{430}\\u{43D}\" />\n        </slot>\n      </div>\n      <div>\n        <div>\n          <span class=\"post-comment__nickname\">\n            <slot name=\"nickname\">\n              <strong aria-label=\"\\u{41D}\\u{438}\\u{43A}\\u{43D}\\u{435}\\u{439}\\u{43C} \\u{43F}\\u{43E}\\u{43B}\\u{44C}\\u{437}\\u{43E}\\u{432}\\u{430}\\u{442}\\u{435}\\u{43B}\\u{44F}\">\\u{410}\\u{43D}\\u{43E}\\u{43D}\\u{438}\\u{43C}\\u{43D}\\u{44B}\\u{439} \\u{43F}\\u{43E}\\u{43B}\\u{44C}\\u{437}\\u{43E}\\u{432}\\u{430}\\u{442}\\u{435}\\u{43B}\\u{44C}</strong>\n            </slot>\n          </span>\n          <small>(\\u{44D}\\u{442}\\u{43E} \\u{432}\\u{44B})</small>\n        </div>\n        <div class=\"post-comment__datetime\">\n          <slot name=\"datetime\">\n            <time slot=\"datetime\">\\u{43D}\\u{435}\\u{438}\\u{437}\\u{432}\\u{435}\\u{441}\\u{442}\\u{43D}\\u{43E}\\u{435} \\u{432}\\u{440}\\u{435}\\u{43C}\\u{44F}</time>\n          </slot>\n        </div>\n      </div>\n    </div>\n    <div class=\"post-comment__content\">\n      <slot>\n        <div aria-label=\"\\u{422}\\u{435}\\u{43A}\\u{441}\\u{442} \\u{43A}\\u{43E}\\u{43C}\\u{43C}\\u{435}\\u{43D}\\u{442}\\u{430}\\u{440}\\u{438}\\u{44F}\"></div>\n      </slot>\n    </div>\n  </div>\n  <div class=\"post-comment__actions\">\n    <button class=\"post-comment__like-btn\" aria-label=\"\\u{41F}\\u{43E}\\u{441}\\u{442}\\u{430}\\u{432}\\u{438}\\u{442}\\u{44C} \\u{43B}\\u{430}\\u{439}\\u{43A}\">\n      \\u{2764}\\u{FE0F} <span class=\"post-comment__likes\">0</span>\n    </button>\n    <button class=\"post-comment__reply-btn\" aria-label=\"\\u{41E}\\u{442}\\u{432}\\u{435}\\u{442}\\u{438}\\u{442}\\u{44C} \\u{43D}\\u{430} \\u{43A}\\u{43E}\\u{43C}\\u{43C}\\u{435}\\u{43D}\\u{442}\\u{430}\\u{440}\\u{438}\\u{439}\">\n      \\u{41E}\\u{442}\\u{432}\\u{435}\\u{442}\\u{438}\\u{442}\\u{44C}\n    </button>\n    <button class=\"post-comment__delete-btn\" aria-label=\"\\u{423}\\u{434}\\u{430}\\u{43B}\\u{438}\\u{442}\\u{44C} \\u{43A}\\u{43E}\\u{43C}\\u{43C}\\u{435}\\u{43D}\\u{442}\\u{430}\\u{440}\\u{438}\\u{439}\">\n      \\u{423}\\u{434}\\u{430}\\u{43B}\\u{438}\\u{442}\\u{44C}\n    </button>\n  </div>\n  <div class=\"post-comment__replies\">\n    <slot name=\"replies\">\n      <section aria-label=\"\\u{41E}\\u{442}\\u{432}\\u{435}\\u{442}\\u{44B} \\u{43D}\\u{430} \\u{43A}\\u{43E}\\u{43C}\\u{43C}\\u{435}\\u{43D}\\u{442}\\u{430}\\u{440}\\u{438}\\u{439}\"></section>\n    </slot>\n  </div>\n</div>`;\nvar $f5b370cd49675592$export$2e2bcd8739ae039 = $f5b370cd49675592$var$template;\n\n\n\n\nclass $8144c85a2570f11c$var$PostComment extends HTMLElement {\n    _initData;\n    template;\n    _wrapper;\n    static COMPONENT_NAME = 'post-comment';\n    static LIKE_EVENT_NAME = `${$8144c85a2570f11c$var$PostComment.COMPONENT_NAME}-like`;\n    static INTENT_REPLY_EVENT_NAME = `${$8144c85a2570f11c$var$PostComment.COMPONENT_NAME}-intent-reply`;\n    static DELETE_EVENT_NAME = `${$8144c85a2570f11c$var$PostComment.COMPONENT_NAME}-delete`;\n    static extTemplateId = `${$8144c85a2570f11c$var$PostComment.COMPONENT_NAME}-template`;\n    static avatarSize = 50;\n    static anonimusNickname = \"\\u0410\\u043D\\u043E\\u043D\\u0438\\u043C\\u043D\\u044B\\u0439 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\";\n    static anonimusAvatar = `https://placehold.co/${$8144c85a2570f11c$var$PostComment.avatarSize}`;\n    static _sanitizer = new $7e0f747abf4b0146$export$2e2bcd8739ae039();\n    _shadow;\n    _liked;\n    _deleted;\n    _slotElemsWrappers;\n    constructor(_initData, template = $8144c85a2570f11c$var$PostComment._obtainTemplate(), _wrapper = $5e5fa34344a1714f$export$139e6f4077062a47()){\n        super(), this._initData = _initData, this.template = template, this._wrapper = _wrapper, this._shadow = null, this._liked = false, this._deleted = false, this._slotElemsWrappers = $5e5fa34344a1714f$export$60a7c802e3339d7d();\n        if (this._initData) {\n            this.template ??= (0, $f5b370cd49675592$export$2e2bcd8739ae039);\n            this._prepareSlotElemsWrappers();\n            const { id: id, user: { id: userId, nickname: nickname = $8144c85a2570f11c$var$PostComment.anonimusNickname, avatar: avatar = $8144c85a2570f11c$var$PostComment.anonimusAvatar, current: current = false }, timestamp: timestamp = Date.now(), text: text, likes: likes = 0, replies: replies = [], granted: granted = false, deleted: deleted = false } = this._initData;\n            if (!deleted) {\n                this._buildNicknameElement(nickname);\n                this._buildAvatarElement(avatar);\n                this._buildDatetimeElement(timestamp);\n                this._buildCommentTextElement(text);\n                this.likes = likes;\n                this.replies = replies.map((reply)=>{\n                    const wrapper = this._wrapper?.cloneNode(false);\n                    return new $8144c85a2570f11c$var$PostComment(reply, this.template, wrapper);\n                });\n                $5e5fa34344a1714f$export$e64d42a353cd7a44(this, 'granted', granted);\n                $5e5fa34344a1714f$export$e64d42a353cd7a44(this, 'by-current-user', current);\n                this.dataset.id = id.toString();\n                this.dataset.userId = userId.toString();\n            } else this.delete();\n        }\n    }\n    static get observedAttributes() {\n        return [\n            'likes',\n            'deleted'\n        ];\n    }\n    static get allowedTextTags() {\n        return Array.from($8144c85a2570f11c$var$PostComment._sanitizer.allowedTags);\n    }\n    static set allowedTextTags(allowedTags) {\n        $8144c85a2570f11c$var$PostComment._sanitizer.allowedTags = new Set(allowedTags);\n    }\n    get likes() {\n        return Number(this.getAttribute('likes') ?? 0);\n    }\n    set likes(count) {\n        this.setAttribute('likes', (count > 0 ? count : 0).toString());\n    }\n    get replies() {\n        const slotElements = this._getSlotElements((0, $7a9522764e05cda2$export$114e10060e7457c).replies);\n        return [\n            ...slotElements?.filter((elem)=>elem instanceof $8144c85a2570f11c$var$PostComment) ?? [],\n            ...slotElements?.filter((elem)=>!(elem instanceof $8144c85a2570f11c$var$PostComment))?.flatMap((elem)=>Array.from(elem.querySelectorAll($8144c85a2570f11c$var$PostComment.COMPONENT_NAME) ?? [])) ?? []\n        ];\n    }\n    set replies(comments) {\n        if (!comments.length) {\n            this._deleteSlotElements((0, $7a9522764e05cda2$export$114e10060e7457c).replies);\n            return;\n        }\n        const tmp = document.createElement('template');\n        tmp.content.append(...comments);\n        this._wrapElemAndInsert2slot(tmp.content, (0, $7a9522764e05cda2$export$114e10060e7457c).replies);\n    }\n    get deleted() {\n        return this._deleted;\n    }\n    get initData() {\n        return this._initData;\n    }\n    connectedCallback() {\n        this.template ??= (0, $f5b370cd49675592$export$2e2bcd8739ae039);\n        if (this._wrapper && this.parentNode && this.parentNode !== this._wrapper) {\n            this.parentNode.insertBefore(this._wrapper, this);\n            this._wrapper.appendChild(this);\n        }\n        if (!this._shadow) {\n            this._shadow = this.attachShadow({\n                mode: 'open'\n            });\n            this._shadow.appendChild(this.template.content.cloneNode(true));\n            this._attachEventListeners();\n        }\n        this._render();\n    }\n    attributeChangedCallback() {\n        if (this._deleted) return;\n        this._render();\n    }\n    addReply(comment) {\n        if (!this.replies.length) this.replies = [\n            comment\n        ];\n        else if (this._slotElemsWrappers[(0, $7a9522764e05cda2$export$114e10060e7457c).replies]) this._slotElemsWrappers[(0, $7a9522764e05cda2$export$114e10060e7457c).replies].appendChild(comment);\n        else $5e5fa34344a1714f$export$de7b072049c48af5(this, comment, (0, $7a9522764e05cda2$export$114e10060e7457c).replies);\n    }\n    delete() {\n        $5e5fa34344a1714f$export$e64d42a353cd7a44(this, 'deleted', true);\n    }\n    _render() {\n        if (!this._shadow) return;\n        if ($5e5fa34344a1714f$export$3647eb90f6c46771(this, 'deleted')) {\n            this._delete();\n            return;\n        }\n        $5e5fa34344a1714f$export$c3d29b5df8a250da(this._getElement('delete-btn'), !$5e5fa34344a1714f$export$3647eb90f6c46771(this, 'granted'));\n        this._getElement('likes')?.replaceChildren(document.createTextNode(this.getAttribute('likes') ?? '0'));\n        const likeBtn = this._getElement('like-btn');\n        this._getElement('nickname')?.classList.toggle($8144c85a2570f11c$var$PostComment._getElemModifCssCls('nickname', 'current'), $5e5fa34344a1714f$export$3647eb90f6c46771(this, 'by-current-user'));\n        const byCurrentUser = $5e5fa34344a1714f$export$3647eb90f6c46771(this, 'by-current-user');\n        if (byCurrentUser) $5e5fa34344a1714f$export$22bd32654b194b3f(likeBtn, true);\n    }\n    _attachEventListeners() {\n        this._getElement('like-btn')?.addEventListener('click', ()=>this._handleLike());\n        this._getElement('reply-btn')?.addEventListener('click', ()=>this._handleReply());\n        this._getElement('delete-btn')?.addEventListener('click', ()=>this._handleDelete());\n    }\n    _handleLike() {\n        // const likeBtn = e.target as HTMLButtonElement | null;\n        const likeBtn = this._getElement('like-btn');\n        if (!this._liked) {\n            const likes = Number(this.getAttribute('likes') ?? 0) + 1;\n            this.setAttribute('likes', String(likes));\n            this._getElement('likes')?.replaceChildren(document.createTextNode(String(likes)));\n            this.dispatchEvent(new CustomEvent($8144c85a2570f11c$var$PostComment.LIKE_EVENT_NAME, {\n                bubbles: true,\n                composed: true,\n                detail: {\n                    likes: likes\n                }\n            }));\n            $5e5fa34344a1714f$export$22bd32654b194b3f(likeBtn, true);\n        }\n    }\n    _handleReply() {\n        this.dispatchEvent(new CustomEvent($8144c85a2570f11c$var$PostComment.INTENT_REPLY_EVENT_NAME, {\n            bubbles: true,\n            composed: true,\n            detail: {\n                comment: this\n            }\n        }));\n    }\n    _handleDelete() {\n        this.delete();\n        this.dispatchEvent(new CustomEvent($8144c85a2570f11c$var$PostComment.DELETE_EVENT_NAME, {\n            bubbles: true,\n            composed: true,\n            detail: {\n                comment: this\n            }\n        }));\n    }\n    _delete() {\n        Object.entries((0, $7a9522764e05cda2$export$114e10060e7457c)).forEach(([_, name])=>{\n            const slot = this._getSlot(name);\n            if (name === (0, $7a9522764e05cda2$export$114e10060e7457c).default) {\n                slot?.replaceWith(\"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439 \\u0443\\u0434\\u0430\\u043B\\u0435\\u043D\");\n                this._deleteSlotElements(name);\n            } else if (name !== (0, $7a9522764e05cda2$export$114e10060e7457c).replies) {\n                slot?.remove();\n                this._deleteSlotElements(name);\n            }\n        });\n        this._getElement('meta')?.remove();\n        this._getElement('actions')?.remove();\n        Array.from(this.attributes).forEach(({ name: name })=>{\n            if (name !== 'deleted') this.removeAttribute(name);\n        });\n        this._deleted = true;\n    }\n    static _obtainTemplate() {\n        return document.querySelector(`template#${$8144c85a2570f11c$var$PostComment.extTemplateId}`);\n    }\n    _buildNicknameElement(value) {\n        this._wrapElemAndInsert2slot(value, (0, $7a9522764e05cda2$export$114e10060e7457c).nickname);\n    }\n    _buildAvatarElement(src) {\n        let avatar;\n        let wrapped = this._getSlotElemWrapper((0, $7a9522764e05cda2$export$114e10060e7457c).avatar);\n        if (wrapped instanceof HTMLImageElement) avatar = wrapped;\n        else {\n            avatar = document.createElement('img');\n            if (wrapped) wrapped.replaceChildren(avatar);\n            else wrapped = avatar;\n        }\n        avatar.src = src;\n        $5e5fa34344a1714f$export$de7b072049c48af5(this, wrapped, (0, $7a9522764e05cda2$export$114e10060e7457c).avatar);\n    }\n    _buildDatetimeElement(timestamp) {\n        const { iso: iso, humanized: humanized } = $5e5fa34344a1714f$export$5b5aedec9076f4c6(timestamp);\n        const elem = this._wrapElemAndInsert2slot(humanized, (0, $7a9522764e05cda2$export$114e10060e7457c).datetime);\n        if (elem instanceof HTMLTimeElement) elem.setAttribute('datetime', iso);\n    }\n    _buildCommentTextElement(text) {\n        const tmp = document.createElement('template');\n        tmp.innerHTML = $8144c85a2570f11c$var$PostComment._sanitizer.clean(text);\n        this._wrapElemAndInsert2slot(tmp.content);\n    }\n    _wrapElemAndInsert2slot(elem, name = (0, $7a9522764e05cda2$export$114e10060e7457c).default) {\n        const wrapped = this._wrapSlotElement(elem, name);\n        return $5e5fa34344a1714f$export$de7b072049c48af5(this, wrapped, name);\n    }\n    _wrapSlotElement(elem, name = (0, $7a9522764e05cda2$export$114e10060e7457c).default) {\n        let wrapper = this._getSlotElemWrapper(name);\n        if (wrapper) wrapper.replaceChildren(elem);\n        else if (elem instanceof HTMLElement || elem instanceof DocumentFragment) return elem;\n        else {\n            wrapper = document.createElement('div');\n            wrapper.append(elem);\n            this._slotElemsWrappers[name] = wrapper;\n        }\n        return wrapper;\n    }\n    _getSlotElemWrapper(name) {\n        // return (this._wrappers[name]?.cloneNode() ?? null) as HTMLElement | null;\n        return this._slotElemsWrappers[name];\n    }\n    _prepareSlotElemsWrappers() {\n        if (!this.template) return;\n        let name;\n        for(name in this._slotElemsWrappers){\n            const slot = this._getSlotTemplate(name);\n            if (slot) this._slotElemsWrappers[name] = slot.children.item(0)?.cloneNode(false);\n        }\n    }\n    _getSlot(name) {\n        return this._shadow ? $5e5fa34344a1714f$export$e8e56581baf7cf43(this._shadow, name) : null;\n    }\n    _getSlotElements(name, flatten = false) {\n        return this._getSlot(name)?.assignedElements({\n            flatten: flatten\n        }) ?? null;\n    }\n    _deleteSlotElements(name) {\n        return this._getSlotElements(name)?.forEach((elem)=>elem.remove());\n    }\n    _getSlotTemplate(name) {\n        return this.template ? $5e5fa34344a1714f$export$e8e56581baf7cf43(this.template.content, name) : null;\n    }\n    _getElement(name) {\n        return this._shadow?.querySelector(`.${$8144c85a2570f11c$var$PostComment._getElemCssCls(name)}`) ?? null;\n    }\n    static _getElemCssCls(elemName) {\n        return `${$8144c85a2570f11c$var$PostComment.COMPONENT_NAME}__${elemName}`;\n    }\n    static _getElemModifCssCls(elemName, modificator) {\n        return `${$8144c85a2570f11c$var$PostComment._getElemCssCls(elemName)}_${modificator}`;\n    }\n}\nvar $8144c85a2570f11c$export$2e2bcd8739ae039 = $8144c85a2570f11c$var$PostComment;\n\n\n\n\nconst $2ab559d76dc5c458$export$6bcf52c5616b02ac = 'comment-input';\nfunction $2ab559d76dc5c458$export$2e2bcd8739ae039(inputCommentEvent) {\n    const inputCommentElement = inputCommentEvent.target;\n    const addCommentForm = inputCommentElement.closest('form');\n    if (addCommentForm) {\n        const commentButton = addCommentForm.querySelector('button:not([type=\"reset\"])');\n        if (inputCommentElement) {\n            const comment = inputCommentElement.value.trim();\n            const minLength = Number(inputCommentElement.getAttribute('minlength') ?? 0);\n            const maxLength = Number(inputCommentElement.getAttribute('maxlength') ?? Infinity);\n            addCommentForm.dispatchEvent(new CustomEvent($2ab559d76dc5c458$export$6bcf52c5616b02ac, {\n                detail: {\n                    filled: comment.length > 0\n                }\n            }));\n            (0, $5e5fa34344a1714f$export$22bd32654b194b3f)(commentButton, comment.length < minLength || comment.length > maxLength);\n        }\n    }\n}\n\n\nvar $a891510b26e6e0ec$exports = {};\n/*! @license DOMPurify 3.2.4 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.4/LICENSE */ (function(global, factory) {\n    $a891510b26e6e0ec$exports = factory();\n})($a891510b26e6e0ec$exports, function() {\n    'use strict';\n    const { entries: entries, setPrototypeOf: setPrototypeOf, isFrozen: isFrozen, getPrototypeOf: getPrototypeOf, getOwnPropertyDescriptor: getOwnPropertyDescriptor } = Object;\n    let { freeze: freeze, seal: seal, create: create } = Object; // eslint-disable-line import/no-mutable-exports\n    let { apply: apply, construct: construct } = typeof Reflect !== 'undefined' && Reflect;\n    if (!freeze) freeze = function freeze(x) {\n        return x;\n    };\n    if (!seal) seal = function seal(x) {\n        return x;\n    };\n    if (!apply) apply = function apply(fun, thisValue, args) {\n        return fun.apply(thisValue, args);\n    };\n    if (!construct) construct = function construct(Func, args) {\n        return new Func(...args);\n    };\n    const arrayForEach = unapply(Array.prototype.forEach);\n    const arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\n    const arrayPop = unapply(Array.prototype.pop);\n    const arrayPush = unapply(Array.prototype.push);\n    const arraySplice = unapply(Array.prototype.splice);\n    const stringToLowerCase = unapply(String.prototype.toLowerCase);\n    const stringToString = unapply(String.prototype.toString);\n    const stringMatch = unapply(String.prototype.match);\n    const stringReplace = unapply(String.prototype.replace);\n    const stringIndexOf = unapply(String.prototype.indexOf);\n    const stringTrim = unapply(String.prototype.trim);\n    const objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\n    const regExpTest = unapply(RegExp.prototype.test);\n    const typeErrorCreate = unconstruct(TypeError);\n    /**\n   * Creates a new function that calls the given function with a specified thisArg and arguments.\n   *\n   * @param func - The function to be wrapped and called.\n   * @returns A new function that calls the given function with a specified thisArg and arguments.\n   */ function unapply(func) {\n        return function(thisArg) {\n            for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];\n            return apply(func, thisArg, args);\n        };\n    }\n    /**\n   * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n   *\n   * @param func - The constructor function to be wrapped and called.\n   * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n   */ function unconstruct(func) {\n        return function() {\n            for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)args[_key2] = arguments[_key2];\n            return construct(func, args);\n        };\n    }\n    /**\n   * Add properties to a lookup table\n   *\n   * @param set - The set to which elements will be added.\n   * @param array - The array containing elements to be added to the set.\n   * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n   * @returns The modified set with added elements.\n   */ function addToSet(set, array) {\n        let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n        if (setPrototypeOf) // Make 'in' and truthy checks like Boolean(set.constructor)\n        // independent of any properties defined on Object.prototype.\n        // Prevent prototype setters from intercepting set as a this value.\n        setPrototypeOf(set, null);\n        let l = array.length;\n        while(l--){\n            let element = array[l];\n            if (typeof element === 'string') {\n                const lcElement = transformCaseFunc(element);\n                if (lcElement !== element) {\n                    // Config presets (e.g. tags.js, attrs.js) are immutable.\n                    if (!isFrozen(array)) array[l] = lcElement;\n                    element = lcElement;\n                }\n            }\n            set[element] = true;\n        }\n        return set;\n    }\n    /**\n   * Clean up an array to harden against CSPP\n   *\n   * @param array - The array to be cleaned.\n   * @returns The cleaned version of the array\n   */ function cleanArray(array) {\n        for(let index = 0; index < array.length; index++){\n            const isPropertyExist = objectHasOwnProperty(array, index);\n            if (!isPropertyExist) array[index] = null;\n        }\n        return array;\n    }\n    /**\n   * Shallow clone an object\n   *\n   * @param object - The object to be cloned.\n   * @returns A new object that copies the original.\n   */ function clone(object) {\n        const newObject = create(null);\n        for (const [property, value] of entries(object)){\n            const isPropertyExist = objectHasOwnProperty(object, property);\n            if (isPropertyExist) {\n                if (Array.isArray(value)) newObject[property] = cleanArray(value);\n                else if (value && typeof value === 'object' && value.constructor === Object) newObject[property] = clone(value);\n                else newObject[property] = value;\n            }\n        }\n        return newObject;\n    }\n    /**\n   * This method automatically checks if the prop is function or getter and behaves accordingly.\n   *\n   * @param object - The object to look up the getter function in its prototype chain.\n   * @param prop - The property name for which to find the getter function.\n   * @returns The getter function found in the prototype chain or a fallback function.\n   */ function lookupGetter(object, prop) {\n        while(object !== null){\n            const desc = getOwnPropertyDescriptor(object, prop);\n            if (desc) {\n                if (desc.get) return unapply(desc.get);\n                if (typeof desc.value === 'function') return unapply(desc.value);\n            }\n            object = getPrototypeOf(object);\n        }\n        function fallbackValue() {\n            return null;\n        }\n        return fallbackValue;\n    }\n    const html$1 = freeze([\n        'a',\n        'abbr',\n        'acronym',\n        'address',\n        'area',\n        'article',\n        'aside',\n        'audio',\n        'b',\n        'bdi',\n        'bdo',\n        'big',\n        'blink',\n        'blockquote',\n        'body',\n        'br',\n        'button',\n        'canvas',\n        'caption',\n        'center',\n        'cite',\n        'code',\n        'col',\n        'colgroup',\n        'content',\n        'data',\n        'datalist',\n        'dd',\n        'decorator',\n        'del',\n        'details',\n        'dfn',\n        'dialog',\n        'dir',\n        'div',\n        'dl',\n        'dt',\n        'element',\n        'em',\n        'fieldset',\n        'figcaption',\n        'figure',\n        'font',\n        'footer',\n        'form',\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6',\n        'head',\n        'header',\n        'hgroup',\n        'hr',\n        'html',\n        'i',\n        'img',\n        'input',\n        'ins',\n        'kbd',\n        'label',\n        'legend',\n        'li',\n        'main',\n        'map',\n        'mark',\n        'marquee',\n        'menu',\n        'menuitem',\n        'meter',\n        'nav',\n        'nobr',\n        'ol',\n        'optgroup',\n        'option',\n        'output',\n        'p',\n        'picture',\n        'pre',\n        'progress',\n        'q',\n        'rp',\n        'rt',\n        'ruby',\n        's',\n        'samp',\n        'section',\n        'select',\n        'shadow',\n        'small',\n        'source',\n        'spacer',\n        'span',\n        'strike',\n        'strong',\n        'style',\n        'sub',\n        'summary',\n        'sup',\n        'table',\n        'tbody',\n        'td',\n        'template',\n        'textarea',\n        'tfoot',\n        'th',\n        'thead',\n        'time',\n        'tr',\n        'track',\n        'tt',\n        'u',\n        'ul',\n        'var',\n        'video',\n        'wbr'\n    ]);\n    const svg$1 = freeze([\n        'svg',\n        'a',\n        'altglyph',\n        'altglyphdef',\n        'altglyphitem',\n        'animatecolor',\n        'animatemotion',\n        'animatetransform',\n        'circle',\n        'clippath',\n        'defs',\n        'desc',\n        'ellipse',\n        'filter',\n        'font',\n        'g',\n        'glyph',\n        'glyphref',\n        'hkern',\n        'image',\n        'line',\n        'lineargradient',\n        'marker',\n        'mask',\n        'metadata',\n        'mpath',\n        'path',\n        'pattern',\n        'polygon',\n        'polyline',\n        'radialgradient',\n        'rect',\n        'stop',\n        'style',\n        'switch',\n        'symbol',\n        'text',\n        'textpath',\n        'title',\n        'tref',\n        'tspan',\n        'view',\n        'vkern'\n    ]);\n    const svgFilters = freeze([\n        'feBlend',\n        'feColorMatrix',\n        'feComponentTransfer',\n        'feComposite',\n        'feConvolveMatrix',\n        'feDiffuseLighting',\n        'feDisplacementMap',\n        'feDistantLight',\n        'feDropShadow',\n        'feFlood',\n        'feFuncA',\n        'feFuncB',\n        'feFuncG',\n        'feFuncR',\n        'feGaussianBlur',\n        'feImage',\n        'feMerge',\n        'feMergeNode',\n        'feMorphology',\n        'feOffset',\n        'fePointLight',\n        'feSpecularLighting',\n        'feSpotLight',\n        'feTile',\n        'feTurbulence'\n    ]);\n    // List of SVG elements that are disallowed by default.\n    // We still need to know them so that we can do namespace\n    // checks properly in case one wants to add them to\n    // allow-list.\n    const svgDisallowed = freeze([\n        'animate',\n        'color-profile',\n        'cursor',\n        'discard',\n        'font-face',\n        'font-face-format',\n        'font-face-name',\n        'font-face-src',\n        'font-face-uri',\n        'foreignobject',\n        'hatch',\n        'hatchpath',\n        'mesh',\n        'meshgradient',\n        'meshpatch',\n        'meshrow',\n        'missing-glyph',\n        'script',\n        'set',\n        'solidcolor',\n        'unknown',\n        'use'\n    ]);\n    const mathMl$1 = freeze([\n        'math',\n        'menclose',\n        'merror',\n        'mfenced',\n        'mfrac',\n        'mglyph',\n        'mi',\n        'mlabeledtr',\n        'mmultiscripts',\n        'mn',\n        'mo',\n        'mover',\n        'mpadded',\n        'mphantom',\n        'mroot',\n        'mrow',\n        'ms',\n        'mspace',\n        'msqrt',\n        'mstyle',\n        'msub',\n        'msup',\n        'msubsup',\n        'mtable',\n        'mtd',\n        'mtext',\n        'mtr',\n        'munder',\n        'munderover',\n        'mprescripts'\n    ]);\n    // Similarly to SVG, we want to know all MathML elements,\n    // even those that we disallow by default.\n    const mathMlDisallowed = freeze([\n        'maction',\n        'maligngroup',\n        'malignmark',\n        'mlongdiv',\n        'mscarries',\n        'mscarry',\n        'msgroup',\n        'mstack',\n        'msline',\n        'msrow',\n        'semantics',\n        'annotation',\n        'annotation-xml',\n        'mprescripts',\n        'none'\n    ]);\n    const text = freeze([\n        '#text'\n    ]);\n    const html = freeze([\n        'accept',\n        'action',\n        'align',\n        'alt',\n        'autocapitalize',\n        'autocomplete',\n        'autopictureinpicture',\n        'autoplay',\n        'background',\n        'bgcolor',\n        'border',\n        'capture',\n        'cellpadding',\n        'cellspacing',\n        'checked',\n        'cite',\n        'class',\n        'clear',\n        'color',\n        'cols',\n        'colspan',\n        'controls',\n        'controlslist',\n        'coords',\n        'crossorigin',\n        'datetime',\n        'decoding',\n        'default',\n        'dir',\n        'disabled',\n        'disablepictureinpicture',\n        'disableremoteplayback',\n        'download',\n        'draggable',\n        'enctype',\n        'enterkeyhint',\n        'face',\n        'for',\n        'headers',\n        'height',\n        'hidden',\n        'high',\n        'href',\n        'hreflang',\n        'id',\n        'inputmode',\n        'integrity',\n        'ismap',\n        'kind',\n        'label',\n        'lang',\n        'list',\n        'loading',\n        'loop',\n        'low',\n        'max',\n        'maxlength',\n        'media',\n        'method',\n        'min',\n        'minlength',\n        'multiple',\n        'muted',\n        'name',\n        'nonce',\n        'noshade',\n        'novalidate',\n        'nowrap',\n        'open',\n        'optimum',\n        'pattern',\n        'placeholder',\n        'playsinline',\n        'popover',\n        'popovertarget',\n        'popovertargetaction',\n        'poster',\n        'preload',\n        'pubdate',\n        'radiogroup',\n        'readonly',\n        'rel',\n        'required',\n        'rev',\n        'reversed',\n        'role',\n        'rows',\n        'rowspan',\n        'spellcheck',\n        'scope',\n        'selected',\n        'shape',\n        'size',\n        'sizes',\n        'span',\n        'srclang',\n        'start',\n        'src',\n        'srcset',\n        'step',\n        'style',\n        'summary',\n        'tabindex',\n        'title',\n        'translate',\n        'type',\n        'usemap',\n        'valign',\n        'value',\n        'width',\n        'wrap',\n        'xmlns',\n        'slot'\n    ]);\n    const svg = freeze([\n        'accent-height',\n        'accumulate',\n        'additive',\n        'alignment-baseline',\n        'amplitude',\n        'ascent',\n        'attributename',\n        'attributetype',\n        'azimuth',\n        'basefrequency',\n        'baseline-shift',\n        'begin',\n        'bias',\n        'by',\n        'class',\n        'clip',\n        'clippathunits',\n        'clip-path',\n        'clip-rule',\n        'color',\n        'color-interpolation',\n        'color-interpolation-filters',\n        'color-profile',\n        'color-rendering',\n        'cx',\n        'cy',\n        'd',\n        'dx',\n        'dy',\n        'diffuseconstant',\n        'direction',\n        'display',\n        'divisor',\n        'dur',\n        'edgemode',\n        'elevation',\n        'end',\n        'exponent',\n        'fill',\n        'fill-opacity',\n        'fill-rule',\n        'filter',\n        'filterunits',\n        'flood-color',\n        'flood-opacity',\n        'font-family',\n        'font-size',\n        'font-size-adjust',\n        'font-stretch',\n        'font-style',\n        'font-variant',\n        'font-weight',\n        'fx',\n        'fy',\n        'g1',\n        'g2',\n        'glyph-name',\n        'glyphref',\n        'gradientunits',\n        'gradienttransform',\n        'height',\n        'href',\n        'id',\n        'image-rendering',\n        'in',\n        'in2',\n        'intercept',\n        'k',\n        'k1',\n        'k2',\n        'k3',\n        'k4',\n        'kerning',\n        'keypoints',\n        'keysplines',\n        'keytimes',\n        'lang',\n        'lengthadjust',\n        'letter-spacing',\n        'kernelmatrix',\n        'kernelunitlength',\n        'lighting-color',\n        'local',\n        'marker-end',\n        'marker-mid',\n        'marker-start',\n        'markerheight',\n        'markerunits',\n        'markerwidth',\n        'maskcontentunits',\n        'maskunits',\n        'max',\n        'mask',\n        'media',\n        'method',\n        'mode',\n        'min',\n        'name',\n        'numoctaves',\n        'offset',\n        'operator',\n        'opacity',\n        'order',\n        'orient',\n        'orientation',\n        'origin',\n        'overflow',\n        'paint-order',\n        'path',\n        'pathlength',\n        'patterncontentunits',\n        'patterntransform',\n        'patternunits',\n        'points',\n        'preservealpha',\n        'preserveaspectratio',\n        'primitiveunits',\n        'r',\n        'rx',\n        'ry',\n        'radius',\n        'refx',\n        'refy',\n        'repeatcount',\n        'repeatdur',\n        'restart',\n        'result',\n        'rotate',\n        'scale',\n        'seed',\n        'shape-rendering',\n        'slope',\n        'specularconstant',\n        'specularexponent',\n        'spreadmethod',\n        'startoffset',\n        'stddeviation',\n        'stitchtiles',\n        'stop-color',\n        'stop-opacity',\n        'stroke-dasharray',\n        'stroke-dashoffset',\n        'stroke-linecap',\n        'stroke-linejoin',\n        'stroke-miterlimit',\n        'stroke-opacity',\n        'stroke',\n        'stroke-width',\n        'style',\n        'surfacescale',\n        'systemlanguage',\n        'tabindex',\n        'tablevalues',\n        'targetx',\n        'targety',\n        'transform',\n        'transform-origin',\n        'text-anchor',\n        'text-decoration',\n        'text-rendering',\n        'textlength',\n        'type',\n        'u1',\n        'u2',\n        'unicode',\n        'values',\n        'viewbox',\n        'visibility',\n        'version',\n        'vert-adv-y',\n        'vert-origin-x',\n        'vert-origin-y',\n        'width',\n        'word-spacing',\n        'wrap',\n        'writing-mode',\n        'xchannelselector',\n        'ychannelselector',\n        'x',\n        'x1',\n        'x2',\n        'xmlns',\n        'y',\n        'y1',\n        'y2',\n        'z',\n        'zoomandpan'\n    ]);\n    const mathMl = freeze([\n        'accent',\n        'accentunder',\n        'align',\n        'bevelled',\n        'close',\n        'columnsalign',\n        'columnlines',\n        'columnspan',\n        'denomalign',\n        'depth',\n        'dir',\n        'display',\n        'displaystyle',\n        'encoding',\n        'fence',\n        'frame',\n        'height',\n        'href',\n        'id',\n        'largeop',\n        'length',\n        'linethickness',\n        'lspace',\n        'lquote',\n        'mathbackground',\n        'mathcolor',\n        'mathsize',\n        'mathvariant',\n        'maxsize',\n        'minsize',\n        'movablelimits',\n        'notation',\n        'numalign',\n        'open',\n        'rowalign',\n        'rowlines',\n        'rowspacing',\n        'rowspan',\n        'rspace',\n        'rquote',\n        'scriptlevel',\n        'scriptminsize',\n        'scriptsizemultiplier',\n        'selection',\n        'separator',\n        'separators',\n        'stretchy',\n        'subscriptshift',\n        'supscriptshift',\n        'symmetric',\n        'voffset',\n        'width',\n        'xmlns'\n    ]);\n    const xml = freeze([\n        'xlink:href',\n        'xml:id',\n        'xlink:title',\n        'xml:space',\n        'xmlns:xlink'\n    ]);\n    // eslint-disable-next-line unicorn/better-regex\n    const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n    const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\n    const TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\n    const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\n    const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n    const IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n    );\n    const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n    const ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n    );\n    const DOCTYPE_NAME = seal(/^html$/i);\n    const CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n    var EXPRESSIONS = /*#__PURE__*/ Object.freeze({\n        __proto__: null,\n        ARIA_ATTR: ARIA_ATTR,\n        ATTR_WHITESPACE: ATTR_WHITESPACE,\n        CUSTOM_ELEMENT: CUSTOM_ELEMENT,\n        DATA_ATTR: DATA_ATTR,\n        DOCTYPE_NAME: DOCTYPE_NAME,\n        ERB_EXPR: ERB_EXPR,\n        IS_ALLOWED_URI: IS_ALLOWED_URI,\n        IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n        MUSTACHE_EXPR: MUSTACHE_EXPR,\n        TMPLIT_EXPR: TMPLIT_EXPR\n    });\n    /* eslint-disable @typescript-eslint/indent */ // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n    const NODE_TYPE = {\n        element: 1,\n        attribute: 2,\n        text: 3,\n        cdataSection: 4,\n        entityReference: 5,\n        // Deprecated\n        entityNode: 6,\n        // Deprecated\n        progressingInstruction: 7,\n        comment: 8,\n        document: 9,\n        documentType: 10,\n        documentFragment: 11,\n        notation: 12 // Deprecated\n    };\n    const getGlobal = function getGlobal() {\n        return typeof window === 'undefined' ? null : window;\n    };\n    /**\n   * Creates a no-op policy for internal use only.\n   * Don't export this function outside this module!\n   * @param trustedTypes The policy factory.\n   * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n   * @return The policy created (or null, if Trusted Types\n   * are not supported or creating the policy failed).\n   */ const _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n        if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') return null;\n        // Allow the callers to control the unique policy name\n        // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n        // Policy creation with duplicate names throws in Trusted Types.\n        let suffix = null;\n        const ATTR_NAME = 'data-tt-policy-suffix';\n        if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) suffix = purifyHostElement.getAttribute(ATTR_NAME);\n        const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n        try {\n            return trustedTypes.createPolicy(policyName, {\n                createHTML (html) {\n                    return html;\n                },\n                createScriptURL (scriptUrl) {\n                    return scriptUrl;\n                }\n            });\n        } catch (_) {\n            // Policy creation failed (most likely another DOMPurify script has\n            // already run). Skip creating the policy, as this will only cause errors\n            // if TT are enforced.\n            console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n            return null;\n        }\n    };\n    const _createHooksMap = function _createHooksMap() {\n        return {\n            afterSanitizeAttributes: [],\n            afterSanitizeElements: [],\n            afterSanitizeShadowDOM: [],\n            beforeSanitizeAttributes: [],\n            beforeSanitizeElements: [],\n            beforeSanitizeShadowDOM: [],\n            uponSanitizeAttribute: [],\n            uponSanitizeElement: [],\n            uponSanitizeShadowNode: []\n        };\n    };\n    function createDOMPurify() {\n        let window1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n        const DOMPurify = (root)=>createDOMPurify(root);\n        DOMPurify.version = '3.2.4';\n        DOMPurify.removed = [];\n        if (!window1 || !window1.document || window1.document.nodeType !== NODE_TYPE.document || !window1.Element) {\n            // Not running in a browser, provide a factory function\n            // so that you can pass your own Window\n            DOMPurify.isSupported = false;\n            return DOMPurify;\n        }\n        let { document: document } = window1;\n        const originalDocument = document;\n        const currentScript = originalDocument.currentScript;\n        const { DocumentFragment: DocumentFragment, HTMLTemplateElement: HTMLTemplateElement, Node: Node, Element: Element, NodeFilter: NodeFilter, NamedNodeMap: NamedNodeMap = window1.NamedNodeMap || window1.MozNamedAttrMap, HTMLFormElement: HTMLFormElement, DOMParser: DOMParser, trustedTypes: trustedTypes } = window1;\n        const ElementPrototype = Element.prototype;\n        const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n        const remove = lookupGetter(ElementPrototype, 'remove');\n        const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n        const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n        const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n        // As per issue #47, the web-components registry is inherited by a\n        // new document created via createHTMLDocument. As per the spec\n        // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n        // a new empty registry is used when creating a template contents owner\n        // document, so we use that as our parent document to ensure nothing\n        // is inherited.\n        if (typeof HTMLTemplateElement === 'function') {\n            const template = document.createElement('template');\n            if (template.content && template.content.ownerDocument) document = template.content.ownerDocument;\n        }\n        let trustedTypesPolicy;\n        let emptyHTML = '';\n        const { implementation: implementation, createNodeIterator: createNodeIterator, createDocumentFragment: createDocumentFragment, getElementsByTagName: getElementsByTagName } = document;\n        const { importNode: importNode } = originalDocument;\n        let hooks = _createHooksMap();\n        /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */ DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n        const { MUSTACHE_EXPR: MUSTACHE_EXPR, ERB_EXPR: ERB_EXPR, TMPLIT_EXPR: TMPLIT_EXPR, DATA_ATTR: DATA_ATTR, ARIA_ATTR: ARIA_ATTR, IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA, ATTR_WHITESPACE: ATTR_WHITESPACE, CUSTOM_ELEMENT: CUSTOM_ELEMENT } = EXPRESSIONS;\n        let { IS_ALLOWED_URI: IS_ALLOWED_URI$1 } = EXPRESSIONS;\n        /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */ /* allowed element names */ let ALLOWED_TAGS = null;\n        const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n            ...html$1,\n            ...svg$1,\n            ...svgFilters,\n            ...mathMl$1,\n            ...text\n        ]);\n        /* Allowed attribute names */ let ALLOWED_ATTR = null;\n        const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n            ...html,\n            ...svg,\n            ...mathMl,\n            ...xml\n        ]);\n        /*\n     * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n     * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n     * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n     * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n     */ let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n            tagNameCheck: {\n                writable: true,\n                configurable: false,\n                enumerable: true,\n                value: null\n            },\n            attributeNameCheck: {\n                writable: true,\n                configurable: false,\n                enumerable: true,\n                value: null\n            },\n            allowCustomizedBuiltInElements: {\n                writable: true,\n                configurable: false,\n                enumerable: true,\n                value: false\n            }\n        }));\n        /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */ let FORBID_TAGS = null;\n        /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */ let FORBID_ATTR = null;\n        /* Decide if ARIA attributes are okay */ let ALLOW_ARIA_ATTR = true;\n        /* Decide if custom data attributes are okay */ let ALLOW_DATA_ATTR = true;\n        /* Decide if unknown protocols are okay */ let ALLOW_UNKNOWN_PROTOCOLS = false;\n        /* Decide if self-closing tags in attributes are allowed.\n     * Usually removed due to a mXSS issue in jQuery 3.0 */ let ALLOW_SELF_CLOSE_IN_ATTR = true;\n        /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */ let SAFE_FOR_TEMPLATES = false;\n        /* Output should be safe even for XML used within HTML and alike.\n     * This means, DOMPurify removes comments when containing risky content.\n     */ let SAFE_FOR_XML = true;\n        /* Decide if document with <html>... should be returned */ let WHOLE_DOCUMENT = false;\n        /* Track whether config is already set on this instance of DOMPurify. */ let SET_CONFIG = false;\n        /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */ let FORCE_BODY = false;\n        /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n     * string (or a TrustedHTML object if Trusted Types are supported).\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */ let RETURN_DOM = false;\n        /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n     * string  (or a TrustedHTML object if Trusted Types are supported) */ let RETURN_DOM_FRAGMENT = false;\n        /* Try to return a Trusted Type object instead of a string, return a string in\n     * case Trusted Types are not supported  */ let RETURN_TRUSTED_TYPE = false;\n        /* Output should be free from DOM clobbering attacks?\n     * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n     */ let SANITIZE_DOM = true;\n        /* Achieve full DOM Clobbering protection by isolating the namespace of named\n     * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n     *\n     * HTML/DOM spec rules that enable DOM Clobbering:\n     *   - Named Access on Window (§7.3.3)\n     *   - DOM Tree Accessors (§3.1.5)\n     *   - Form Element Parent-Child Relations (§4.10.3)\n     *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n     *   - HTMLCollection (§4.2.10.2)\n     *\n     * Namespace isolation is implemented by prefixing `id` and `name` attributes\n     * with a constant string, i.e., `user-content-`\n     */ let SANITIZE_NAMED_PROPS = false;\n        const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n        /* Keep element content when removing element? */ let KEEP_CONTENT = true;\n        /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n     * of importing it into a new Document and returning a sanitized copy */ let IN_PLACE = false;\n        /* Allow usage of profiles like html, svg and mathMl */ let USE_PROFILES = {};\n        /* Tags to ignore content of when KEEP_CONTENT is true */ let FORBID_CONTENTS = null;\n        const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n            'annotation-xml',\n            'audio',\n            'colgroup',\n            'desc',\n            'foreignobject',\n            'head',\n            'iframe',\n            'math',\n            'mi',\n            'mn',\n            'mo',\n            'ms',\n            'mtext',\n            'noembed',\n            'noframes',\n            'noscript',\n            'plaintext',\n            'script',\n            'style',\n            'svg',\n            'template',\n            'thead',\n            'title',\n            'video',\n            'xmp'\n        ]);\n        /* Tags that are safe for data: URIs */ let DATA_URI_TAGS = null;\n        const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n            'audio',\n            'video',\n            'img',\n            'source',\n            'image',\n            'track'\n        ]);\n        /* Attributes safe for values like \"javascript:\" */ let URI_SAFE_ATTRIBUTES = null;\n        const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n            'alt',\n            'class',\n            'for',\n            'id',\n            'label',\n            'name',\n            'pattern',\n            'placeholder',\n            'role',\n            'summary',\n            'title',\n            'value',\n            'style',\n            'xmlns'\n        ]);\n        const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n        const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n        const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n        /* Document namespace */ let NAMESPACE = HTML_NAMESPACE;\n        let IS_EMPTY_INPUT = false;\n        /* Allowed XHTML+XML namespaces */ let ALLOWED_NAMESPACES = null;\n        const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [\n            MATHML_NAMESPACE,\n            SVG_NAMESPACE,\n            HTML_NAMESPACE\n        ], stringToString);\n        let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n            'mi',\n            'mo',\n            'mn',\n            'ms',\n            'mtext'\n        ]);\n        let HTML_INTEGRATION_POINTS = addToSet({}, [\n            'annotation-xml'\n        ]);\n        // Certain elements are allowed in both SVG and HTML\n        // namespace. We need to specify them explicitly\n        // so that they don't get erroneously deleted from\n        // HTML namespace.\n        const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, [\n            'title',\n            'style',\n            'font',\n            'a',\n            'script'\n        ]);\n        /* Parsing of strict XHTML documents */ let PARSER_MEDIA_TYPE = null;\n        const SUPPORTED_PARSER_MEDIA_TYPES = [\n            'application/xhtml+xml',\n            'text/html'\n        ];\n        const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n        let transformCaseFunc = null;\n        /* Keep a reference to config to pass to hooks */ let CONFIG = null;\n        /* Ideally, do not touch anything below this line */ /* ______________________________________________ */ const formElement = document.createElement('form');\n        const isRegexOrFunction = function isRegexOrFunction(testValue) {\n            return testValue instanceof RegExp || testValue instanceof Function;\n        };\n        /**\n     * _parseConfig\n     *\n     * @param cfg optional config literal\n     */ // eslint-disable-next-line complexity\n        const _parseConfig = function _parseConfig() {\n            let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            if (CONFIG && CONFIG === cfg) return;\n            /* Shield configuration object from tampering */ if (!cfg || typeof cfg !== 'object') cfg = {};\n            /* Shield configuration object from prototype pollution */ cfg = clone(cfg);\n            PARSER_MEDIA_TYPE = // eslint-disable-next-line unicorn/prefer-includes\n            SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n            // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n            transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n            /* Set configuration parameters */ ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n            ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n            ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n            URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;\n            DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;\n            FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n            FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n            FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n            USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n            ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n            ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n            ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n            ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n            SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n            SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n            WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n            RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n            RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n            RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n            FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n            SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n            SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n            KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n            IN_PLACE = cfg.IN_PLACE || false; // Default false\n            IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n            NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n            MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n            HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n            CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n            if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n            if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n            if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n            if (SAFE_FOR_TEMPLATES) ALLOW_DATA_ATTR = false;\n            if (RETURN_DOM_FRAGMENT) RETURN_DOM = true;\n            /* Parse profile info */ if (USE_PROFILES) {\n                ALLOWED_TAGS = addToSet({}, text);\n                ALLOWED_ATTR = [];\n                if (USE_PROFILES.html === true) {\n                    addToSet(ALLOWED_TAGS, html$1);\n                    addToSet(ALLOWED_ATTR, html);\n                }\n                if (USE_PROFILES.svg === true) {\n                    addToSet(ALLOWED_TAGS, svg$1);\n                    addToSet(ALLOWED_ATTR, svg);\n                    addToSet(ALLOWED_ATTR, xml);\n                }\n                if (USE_PROFILES.svgFilters === true) {\n                    addToSet(ALLOWED_TAGS, svgFilters);\n                    addToSet(ALLOWED_ATTR, svg);\n                    addToSet(ALLOWED_ATTR, xml);\n                }\n                if (USE_PROFILES.mathMl === true) {\n                    addToSet(ALLOWED_TAGS, mathMl$1);\n                    addToSet(ALLOWED_ATTR, mathMl);\n                    addToSet(ALLOWED_ATTR, xml);\n                }\n            }\n            /* Merge configuration parameters */ if (cfg.ADD_TAGS) {\n                if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) ALLOWED_TAGS = clone(ALLOWED_TAGS);\n                addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n            }\n            if (cfg.ADD_ATTR) {\n                if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) ALLOWED_ATTR = clone(ALLOWED_ATTR);\n                addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n            }\n            if (cfg.ADD_URI_SAFE_ATTR) addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n            if (cfg.FORBID_CONTENTS) {\n                if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) FORBID_CONTENTS = clone(FORBID_CONTENTS);\n                addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n            }\n            /* Add #text in case KEEP_CONTENT is set to true */ if (KEEP_CONTENT) ALLOWED_TAGS['#text'] = true;\n            /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */ if (WHOLE_DOCUMENT) addToSet(ALLOWED_TAGS, [\n                'html',\n                'head',\n                'body'\n            ]);\n            /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */ if (ALLOWED_TAGS.table) {\n                addToSet(ALLOWED_TAGS, [\n                    'tbody'\n                ]);\n                delete FORBID_TAGS.tbody;\n            }\n            if (cfg.TRUSTED_TYPES_POLICY) {\n                if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n                if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n                // Overwrite existing TrustedTypes policy.\n                trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n                // Sign local variables required by `sanitize`.\n                emptyHTML = trustedTypesPolicy.createHTML('');\n            } else {\n                // Uninitialized policy, attempt to initialize the internal dompurify policy.\n                if (trustedTypesPolicy === undefined) trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n                // If creating the internal policy succeeded sign internal variables.\n                if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') emptyHTML = trustedTypesPolicy.createHTML('');\n            }\n            // Prevent further manipulation of configuration.\n            // Not available in IE8, Safari 5, etc.\n            if (freeze) freeze(cfg);\n            CONFIG = cfg;\n        };\n        /* Keep track of all possible SVG and MathML tags\n     * so that we can perform the namespace checks\n     * correctly. */ const ALL_SVG_TAGS = addToSet({}, [\n            ...svg$1,\n            ...svgFilters,\n            ...svgDisallowed\n        ]);\n        const ALL_MATHML_TAGS = addToSet({}, [\n            ...mathMl$1,\n            ...mathMlDisallowed\n        ]);\n        /**\n     * @param element a DOM element whose namespace is being checked\n     * @returns Return false if the element has a\n     *  namespace that a spec-compliant parser would never\n     *  return. Return true otherwise.\n     */ const _checkValidNamespace = function _checkValidNamespace(element) {\n            let parent = getParentNode(element);\n            // In JSDOM, if we're inside shadow DOM, then parentNode\n            // can be null. We just simulate parent in this case.\n            if (!parent || !parent.tagName) parent = {\n                namespaceURI: NAMESPACE,\n                tagName: 'template'\n            };\n            const tagName = stringToLowerCase(element.tagName);\n            const parentTagName = stringToLowerCase(parent.tagName);\n            if (!ALLOWED_NAMESPACES[element.namespaceURI]) return false;\n            if (element.namespaceURI === SVG_NAMESPACE) {\n                // The only way to switch from HTML namespace to SVG\n                // is via <svg>. If it happens via any other tag, then\n                // it should be killed.\n                if (parent.namespaceURI === HTML_NAMESPACE) return tagName === 'svg';\n                // The only way to switch from MathML to SVG is via`\n                // svg if parent is either <annotation-xml> or MathML\n                // text integration points.\n                if (parent.namespaceURI === MATHML_NAMESPACE) return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n                // We only allow elements that are defined in SVG\n                // spec. All others are disallowed in SVG namespace.\n                return Boolean(ALL_SVG_TAGS[tagName]);\n            }\n            if (element.namespaceURI === MATHML_NAMESPACE) {\n                // The only way to switch from HTML namespace to MathML\n                // is via <math>. If it happens via any other tag, then\n                // it should be killed.\n                if (parent.namespaceURI === HTML_NAMESPACE) return tagName === 'math';\n                // The only way to switch from SVG to MathML is via\n                // <math> and HTML integration points\n                if (parent.namespaceURI === SVG_NAMESPACE) return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n                // We only allow elements that are defined in MathML\n                // spec. All others are disallowed in MathML namespace.\n                return Boolean(ALL_MATHML_TAGS[tagName]);\n            }\n            if (element.namespaceURI === HTML_NAMESPACE) {\n                // The only way to switch from SVG to HTML is via\n                // HTML integration points, and from MathML to HTML\n                // is via MathML text integration points\n                if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) return false;\n                if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) return false;\n                // We disallow tags that are specific for MathML\n                // or SVG and should never appear in HTML namespace\n                return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n            }\n            // For XHTML and XML documents that support custom namespaces\n            if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) return true;\n            // The code should never reach this place (this means\n            // that the element somehow got namespace that is not\n            // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n            // Return false just in case.\n            return false;\n        };\n        /**\n     * _forceRemove\n     *\n     * @param node a DOM node\n     */ const _forceRemove = function _forceRemove(node) {\n            arrayPush(DOMPurify.removed, {\n                element: node\n            });\n            try {\n                // eslint-disable-next-line unicorn/prefer-dom-node-remove\n                getParentNode(node).removeChild(node);\n            } catch (_) {\n                remove(node);\n            }\n        };\n        /**\n     * _removeAttribute\n     *\n     * @param name an Attribute name\n     * @param element a DOM node\n     */ const _removeAttribute = function _removeAttribute(name, element) {\n            try {\n                arrayPush(DOMPurify.removed, {\n                    attribute: element.getAttributeNode(name),\n                    from: element\n                });\n            } catch (_) {\n                arrayPush(DOMPurify.removed, {\n                    attribute: null,\n                    from: element\n                });\n            }\n            element.removeAttribute(name);\n            // We void attribute values for unremovable \"is\" attributes\n            if (name === 'is') {\n                if (RETURN_DOM || RETURN_DOM_FRAGMENT) try {\n                    _forceRemove(element);\n                } catch (_) {}\n                else try {\n                    element.setAttribute(name, '');\n                } catch (_) {}\n            }\n        };\n        /**\n     * _initDocument\n     *\n     * @param dirty - a string of dirty markup\n     * @return a DOM, filled with the dirty markup\n     */ const _initDocument = function _initDocument(dirty) {\n            /* Create a HTML document */ let doc = null;\n            let leadingWhitespace = null;\n            if (FORCE_BODY) dirty = '<remove></remove>' + dirty;\n            else {\n                /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */ const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n                leadingWhitespace = matches && matches[0];\n            }\n            if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n            dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n            const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n            /*\n       * Use the DOMParser API by default, fallback later if needs be\n       * DOMParser not work for svg when has multiple root element.\n       */ if (NAMESPACE === HTML_NAMESPACE) try {\n                doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n            } catch (_) {}\n            /* Use createHTMLDocument in case DOMParser is not available */ if (!doc || !doc.documentElement) {\n                doc = implementation.createDocument(NAMESPACE, 'template', null);\n                try {\n                    doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n                } catch (_) {\n                // Syntax error if dirtyPayload is invalid xml\n                }\n            }\n            const body = doc.body || doc.documentElement;\n            if (dirty && leadingWhitespace) body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n            /* Work on whole document or just its body */ if (NAMESPACE === HTML_NAMESPACE) return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n            return WHOLE_DOCUMENT ? doc.documentElement : body;\n        };\n        /**\n     * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n     *\n     * @param root The root element or node to start traversing on.\n     * @return The created NodeIterator\n     */ const _createNodeIterator = function _createNodeIterator(root) {\n            return createNodeIterator.call(root.ownerDocument || root, root, // eslint-disable-next-line no-bitwise\n            NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n        };\n        /**\n     * _isClobbered\n     *\n     * @param element element to check for clobbering attacks\n     * @return true if clobbered, false if safe\n     */ const _isClobbered = function _isClobbered(element) {\n            return element instanceof HTMLFormElement && (typeof element.nodeName !== 'string' || typeof element.textContent !== 'string' || typeof element.removeChild !== 'function' || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== 'function' || typeof element.setAttribute !== 'function' || typeof element.namespaceURI !== 'string' || typeof element.insertBefore !== 'function' || typeof element.hasChildNodes !== 'function');\n        };\n        /**\n     * Checks whether the given object is a DOM node.\n     *\n     * @param value object to check whether it's a DOM node\n     * @return true is object is a DOM node\n     */ const _isNode = function _isNode(value) {\n            return typeof Node === 'function' && value instanceof Node;\n        };\n        function _executeHooks(hooks, currentNode, data) {\n            arrayForEach(hooks, (hook)=>{\n                hook.call(DOMPurify, currentNode, data, CONFIG);\n            });\n        }\n        /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     * @param currentNode to check for permission to exist\n     * @return true if node was killed, false if left alive\n     */ const _sanitizeElements = function _sanitizeElements(currentNode) {\n            let content = null;\n            /* Execute a hook if present */ _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n            /* Check if element is clobbered or can clobber */ if (_isClobbered(currentNode)) {\n                _forceRemove(currentNode);\n                return true;\n            }\n            /* Now let's check the element's type and name */ const tagName = transformCaseFunc(currentNode.nodeName);\n            /* Execute a hook if present */ _executeHooks(hooks.uponSanitizeElement, currentNode, {\n                tagName: tagName,\n                allowedTags: ALLOWED_TAGS\n            });\n            /* Detect mXSS attempts abusing namespace confusion */ if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n                _forceRemove(currentNode);\n                return true;\n            }\n            /* Remove any occurrence of processing instructions */ if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n                _forceRemove(currentNode);\n                return true;\n            }\n            /* Remove any kind of possibly harmful comments */ if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n                _forceRemove(currentNode);\n                return true;\n            }\n            /* Remove element if anything forbids its presence */ if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n                /* Check if we have a custom element to handle */ if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n                    if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) return false;\n                    if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) return false;\n                }\n                /* Keep content except for bad-listed elements */ if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n                    const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n                    const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n                    if (childNodes && parentNode) {\n                        const childCount = childNodes.length;\n                        for(let i = childCount - 1; i >= 0; --i){\n                            const childClone = cloneNode(childNodes[i], true);\n                            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n                            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n                        }\n                    }\n                }\n                _forceRemove(currentNode);\n                return true;\n            }\n            /* Check whether element has a valid namespace */ if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n                _forceRemove(currentNode);\n                return true;\n            }\n            /* Make sure that older browsers don't get fallback-tag mXSS */ if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n                _forceRemove(currentNode);\n                return true;\n            }\n            /* Sanitize element content to be template-safe */ if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n                /* Get the element's text content */ content = currentNode.textContent;\n                arrayForEach([\n                    MUSTACHE_EXPR,\n                    ERB_EXPR,\n                    TMPLIT_EXPR\n                ], (expr)=>{\n                    content = stringReplace(content, expr, ' ');\n                });\n                if (currentNode.textContent !== content) {\n                    arrayPush(DOMPurify.removed, {\n                        element: currentNode.cloneNode()\n                    });\n                    currentNode.textContent = content;\n                }\n            }\n            /* Execute a hook if present */ _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n            return false;\n        };\n        /**\n     * _isValidAttribute\n     *\n     * @param lcTag Lowercase tag name of containing element.\n     * @param lcName Lowercase attribute name.\n     * @param value Attribute value.\n     * @return Returns true if `value` is valid, otherwise false.\n     */ // eslint-disable-next-line complexity\n        const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n            /* Make sure attribute cannot clobber */ if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) return false;\n            /* Allow valid data-* attributes: At least one character after \"-\"\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n          We don't need to check the value; it's always URI safe. */ if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ;\n            else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ;\n            else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n                if (// First condition does a very basic check if a) it's basically a valid custom element tagname AND\n                // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n                // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n                _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) || // Alternative, second condition checks if it's an `is`-attribute, AND\n                // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n                lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ;\n                else return false;\n            /* Check value is safe. First, is attr inert? If so, is safe */ } else if (URI_SAFE_ATTRIBUTES[lcName]) ;\n            else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ;\n            else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ;\n            else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ;\n            else if (value) return false;\n            return true;\n        };\n        /**\n     * _isBasicCustomElement\n     * checks if at least one dash is included in tagName, and it's not the first char\n     * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n     *\n     * @param tagName name of the tag of the node to sanitize\n     * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n     */ const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n            return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n        };\n        /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param currentNode to sanitize\n     */ const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n            /* Execute a hook if present */ _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n            const { attributes: attributes } = currentNode;\n            /* Check if we have attributes; if not we might have a text node */ if (!attributes || _isClobbered(currentNode)) return;\n            const hookEvent = {\n                attrName: '',\n                attrValue: '',\n                keepAttr: true,\n                allowedAttributes: ALLOWED_ATTR,\n                forceKeepAttr: undefined\n            };\n            let l = attributes.length;\n            /* Go backwards over all attributes; safely remove bad ones */ while(l--){\n                const attr = attributes[l];\n                const { name: name, namespaceURI: namespaceURI, value: attrValue } = attr;\n                const lcName = transformCaseFunc(name);\n                let value = name === 'value' ? attrValue : stringTrim(attrValue);\n                /* Execute a hook if present */ hookEvent.attrName = lcName;\n                hookEvent.attrValue = value;\n                hookEvent.keepAttr = true;\n                hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n                _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n                value = hookEvent.attrValue;\n                /* Full DOM Clobbering protection via namespace isolation,\n         * Prefix id and name attributes with `user-content-`\n         */ if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n                    // Remove the attribute with this value\n                    _removeAttribute(name, currentNode);\n                    // Prefix the value and later re-create the attribute with the sanitized value\n                    value = SANITIZE_NAMED_PROPS_PREFIX + value;\n                }\n                /* Work around a security issue with comments inside attributes */ if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n                    _removeAttribute(name, currentNode);\n                    continue;\n                }\n                /* Did the hooks approve of the attribute? */ if (hookEvent.forceKeepAttr) continue;\n                /* Remove attribute */ _removeAttribute(name, currentNode);\n                /* Did the hooks approve of the attribute? */ if (!hookEvent.keepAttr) continue;\n                /* Work around a security issue in jQuery 3.0 */ if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n                    _removeAttribute(name, currentNode);\n                    continue;\n                }\n                /* Sanitize attribute content to be template-safe */ if (SAFE_FOR_TEMPLATES) arrayForEach([\n                    MUSTACHE_EXPR,\n                    ERB_EXPR,\n                    TMPLIT_EXPR\n                ], (expr)=>{\n                    value = stringReplace(value, expr, ' ');\n                });\n                /* Is `value` valid for this attribute? */ const lcTag = transformCaseFunc(currentNode.nodeName);\n                if (!_isValidAttribute(lcTag, lcName, value)) continue;\n                /* Handle attributes that require Trusted Types */ if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n                    if (namespaceURI) ;\n                    else switch(trustedTypes.getAttributeType(lcTag, lcName)){\n                        case 'TrustedHTML':\n                            value = trustedTypesPolicy.createHTML(value);\n                            break;\n                        case 'TrustedScriptURL':\n                            value = trustedTypesPolicy.createScriptURL(value);\n                            break;\n                    }\n                }\n                /* Handle invalid data-* attribute set by try-catching it */ try {\n                    if (namespaceURI) currentNode.setAttributeNS(namespaceURI, name, value);\n                    else /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */ currentNode.setAttribute(name, value);\n                    if (_isClobbered(currentNode)) _forceRemove(currentNode);\n                    else arrayPop(DOMPurify.removed);\n                } catch (_) {}\n            }\n            /* Execute a hook if present */ _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n        };\n        /**\n     * _sanitizeShadowDOM\n     *\n     * @param fragment to iterate over recursively\n     */ const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n            let shadowNode = null;\n            const shadowIterator = _createNodeIterator(fragment);\n            /* Execute a hook if present */ _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n            while(shadowNode = shadowIterator.nextNode()){\n                /* Execute a hook if present */ _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n                /* Sanitize tags and elements */ _sanitizeElements(shadowNode);\n                /* Check attributes next */ _sanitizeAttributes(shadowNode);\n                /* Deep shadow DOM detected */ if (shadowNode.content instanceof DocumentFragment) _sanitizeShadowDOM(shadowNode.content);\n            }\n            /* Execute a hook if present */ _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n        };\n        // eslint-disable-next-line complexity\n        DOMPurify.sanitize = function(dirty) {\n            let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n            let body = null;\n            let importedNode = null;\n            let currentNode = null;\n            let returnNode = null;\n            /* Make sure we have a string to sanitize.\n        DO NOT return early, as this will return the wrong type if\n        the user has requested a DOM object rather than a string */ IS_EMPTY_INPUT = !dirty;\n            if (IS_EMPTY_INPUT) dirty = '<!-->';\n            /* Stringify, in case dirty is an object */ if (typeof dirty !== 'string' && !_isNode(dirty)) {\n                if (typeof dirty.toString === 'function') {\n                    dirty = dirty.toString();\n                    if (typeof dirty !== 'string') throw typeErrorCreate('dirty is not a string, aborting');\n                } else throw typeErrorCreate('toString is not a function');\n            }\n            /* Return dirty HTML if DOMPurify cannot run */ if (!DOMPurify.isSupported) return dirty;\n            /* Assign config vars */ if (!SET_CONFIG) _parseConfig(cfg);\n            /* Clean up removed elements */ DOMPurify.removed = [];\n            /* Check if dirty is correctly typed for IN_PLACE */ if (typeof dirty === 'string') IN_PLACE = false;\n            if (IN_PLACE) /* Do some early pre-sanitization to avoid unsafe root nodes */ {\n                if (dirty.nodeName) {\n                    const tagName = transformCaseFunc(dirty.nodeName);\n                    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n                }\n            } else if (dirty instanceof Node) {\n                /* If dirty is a DOM element, append to an empty document to avoid\n           elements being stripped by the parser */ body = _initDocument('<!---->');\n                importedNode = body.ownerDocument.importNode(dirty, true);\n                if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') /* Node is already a body, use as is */ body = importedNode;\n                else if (importedNode.nodeName === 'HTML') body = importedNode;\n                else // eslint-disable-next-line unicorn/prefer-dom-node-append\n                body.appendChild(importedNode);\n            } else {\n                /* Exit directly if we have nothing to do */ if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && // eslint-disable-next-line unicorn/prefer-includes\n                dirty.indexOf('<') === -1) return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n                /* Initialize the document to work on */ body = _initDocument(dirty);\n                /* Check we have a DOM node from the data */ if (!body) return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n            }\n            /* Remove first element node (ours) if FORCE_BODY is set */ if (body && FORCE_BODY) _forceRemove(body.firstChild);\n            /* Get node iterator */ const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n            /* Now start iterating over the created document */ while(currentNode = nodeIterator.nextNode()){\n                /* Sanitize tags and elements */ _sanitizeElements(currentNode);\n                /* Check attributes next */ _sanitizeAttributes(currentNode);\n                /* Shadow DOM detected, sanitize it */ if (currentNode.content instanceof DocumentFragment) _sanitizeShadowDOM(currentNode.content);\n            }\n            /* If we sanitized `dirty` in-place, return it. */ if (IN_PLACE) return dirty;\n            /* Return sanitized string or DOM */ if (RETURN_DOM) {\n                if (RETURN_DOM_FRAGMENT) {\n                    returnNode = createDocumentFragment.call(body.ownerDocument);\n                    while(body.firstChild)// eslint-disable-next-line unicorn/prefer-dom-node-append\n                    returnNode.appendChild(body.firstChild);\n                } else returnNode = body;\n                if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) /*\n            AdoptNode() is not used because internal state is not reset\n            (e.g. the past names map of a HTMLFormElement), this is safe\n            in theory but we would rather not risk another attack vector.\n            The state that is cloned by importNode() is explicitly defined\n            by the specs.\n          */ returnNode = importNode.call(originalDocument, returnNode, true);\n                return returnNode;\n            }\n            let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n            /* Serialize doctype if allowed */ if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n            /* Sanitize final string template-safe */ if (SAFE_FOR_TEMPLATES) arrayForEach([\n                MUSTACHE_EXPR,\n                ERB_EXPR,\n                TMPLIT_EXPR\n            ], (expr)=>{\n                serializedHTML = stringReplace(serializedHTML, expr, ' ');\n            });\n            return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n        };\n        DOMPurify.setConfig = function() {\n            let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            _parseConfig(cfg);\n            SET_CONFIG = true;\n        };\n        DOMPurify.clearConfig = function() {\n            CONFIG = null;\n            SET_CONFIG = false;\n        };\n        DOMPurify.isValidAttribute = function(tag, attr, value) {\n            /* Initialize shared config vars if necessary. */ if (!CONFIG) _parseConfig({});\n            const lcTag = transformCaseFunc(tag);\n            const lcName = transformCaseFunc(attr);\n            return _isValidAttribute(lcTag, lcName, value);\n        };\n        DOMPurify.addHook = function(entryPoint, hookFunction) {\n            if (typeof hookFunction !== 'function') return;\n            arrayPush(hooks[entryPoint], hookFunction);\n        };\n        DOMPurify.removeHook = function(entryPoint, hookFunction) {\n            if (hookFunction !== undefined) {\n                const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n                return index === -1 ? undefined : arraySplice(hooks[entryPoint], index, 1)[0];\n            }\n            return arrayPop(hooks[entryPoint]);\n        };\n        DOMPurify.removeHooks = function(entryPoint) {\n            hooks[entryPoint] = [];\n        };\n        DOMPurify.removeAllHooks = function() {\n            hooks = _createHooksMap();\n        };\n        return DOMPurify;\n    }\n    var purify = createDOMPurify();\n    return purify;\n});\n\n\nvar $2fe77e3211220ea2$exports = {};\n\n$2fe77e3211220ea2$exports = (parcelRequire(\"ly2oH\"))(document);\n\n\nvar $af68d26e6254a194$exports = {};\n'use strict';\nfunction $af68d26e6254a194$var$nanohtmlRawBrowser(tag) {\n    var el = document.createElement('div');\n    el.innerHTML = tag;\n    return $af68d26e6254a194$var$toArray(el.childNodes);\n}\nfunction $af68d26e6254a194$var$toArray(arr) {\n    return Array.isArray(arr) ? arr : [].slice.call(arr);\n}\n$af68d26e6254a194$exports = $af68d26e6254a194$var$nanohtmlRawBrowser;\n\n\nfunction $c5c494ce1f0795bf$export$2e2bcd8739ae039({ meta: { nickname: nickname, avatar: avatar, datetime: datetime, current: current }, text: text, likes: likes, granted: granted, deleted: deleted }, container) {\n    const { humanized: humanDatetime, iso: isoDatetime } = typeof datetime == 'string' ? {\n        humanized: datetime\n    } : datetime;\n    const comment = (0, (/*@__PURE__*/$parcel$interopDefault($2fe77e3211220ea2$exports)))` <post-comment\n    ${likes ? {\n        likes: likes\n    } : {}}\n    ${granted ? {\n        granted: ''\n    } : {}}\n    ${deleted ? {\n        deleted: ''\n    } : {}}\n    ${current ? {\n        'by-current-user': ''\n    } : {}}\n  >\n    <time slot=\"datetime\" ${isoDatetime ? {\n        datetime: isoDatetime\n    } : {}}>\n      ${humanDatetime}\n    </time>\n    <strong slot=\"nickname\" aria-label=\"Никнейм пользователя\"\n      >${nickname}</strong\n    >\n    <img slot=\"avatar\" src=\"${avatar}\" alt=\"Аватар пользователя ${nickname}\" />\n    <div aria-label=\"Текст комментария\">${(0, (/*@__PURE__*/$parcel$interopDefault($af68d26e6254a194$exports)))(text)}</div>\n  </post-comment>`;\n    container.appendChild(comment);\n    return comment;\n}\n\n\n\n\nvar $0c2ae4ee50ae19c7$exports = {};\n$0c2ae4ee50ae19c7$exports = JSON.parse('[{\"id\":101,\"nickname\":\"BluePill\",\"current\":true},{\"id\":102,\"nickname\":\"~\\u044E\\u043D\\u044B\\u0439~\\u0441\\u043A\\u0443\\u0444~\"},{\"id\":103,\"nickname\":\"P0w3r\"},{\"id\":104,\"nickname\":\"\\u0421\\u0438\\u043C\\u0443\\u043B\\u044F\\u043A\\u0440\"}]');\n\n\nvar $9e2c3a2fa881e26e$exports = {};\n$9e2c3a2fa881e26e$exports = JSON.parse('[{\"id\":1001,\"user\":101,\"timestamp\":1740563333000,\"text\":\"\\u0422\\u0435\\u0442\\u0440\\u0438\\u0441?\",\"likes\":0,\"replies\":[{\"id\":1002,\"user\":102,\"timestamp\":1740563550000,\"text\":\"\\u041D\\u0435\\u0435\\u0435\\u0435\",\"likes\":0,\"replies\":[]},{\"id\":1003,\"user\":104,\"timestamp\":1740563598000,\"text\":\"\\u0425\\u043C, \\u043D\\u0443 \\u043D\\u0435\\u0442... <small>(\\u0430 \\u043F\\u043E\\u0445\\u043E\\u0436\\u0435)</small>\",\"likes\":1,\"replies\":[]},{\"id\":1004,\"user\":101,\"timestamp\":1740563625000,\"text\":\"\\u0423\\u0434\\u0430\\u043B\\u0435\\u043D\\u043D\\u044B\\u0439 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\"deleted\":true}]},{\"id\":1005,\"user\":101,\"timestamp\":1740563672000,\"text\":\"A Quiet Place: The Road Ahead?\",\"likes\":4,\"replies\":[{\"id\":1006,\"user\":102,\"timestamp\":1740563714000,\"text\":\"\\u0414\\u0430!\",\"likes\":2,\"replies\":[{\"id\":1007,\"user\":103,\"timestamp\":1740563823000,\"text\":\"\\u0411\\u044B\\u043B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D \\u0447\\u0442\\u043E <u>The Quarry</u>(\",\"likes\":1}]}]}]');\n\n\nconst $65de6e4b920662fb$var$DUMMY_AVATAR_BASE_URL = 'https://api.dicebear.com/9.x';\nconst $65de6e4b920662fb$var$DUMMY_AVATAR_STYLE = 'avataaars';\nconst $65de6e4b920662fb$var$DUMMY_AVATAR_FORMAT = 'png';\nconst $65de6e4b920662fb$var$DUMMY_AVATAR_BG_COLOR = '0172ad';\nlet $65de6e4b920662fb$var$curDummuUserId;\nconst $65de6e4b920662fb$var$dummyUsers = (0, (/*@__PURE__*/$parcel$interopDefault($0c2ae4ee50ae19c7$exports))).map(({ id: id, nickname: nickname, avatar: avatar, current: current })=>({\n        id: id,\n        nickname: nickname,\n        avatar: avatar ?? $65de6e4b920662fb$export$6b4d17951d525800(nickname),\n        current: Boolean(current && !$65de6e4b920662fb$var$curDummuUserId && ($65de6e4b920662fb$var$curDummuUserId = id))\n    }));\nconst $65de6e4b920662fb$var$curDummyUser = $65de6e4b920662fb$var$dummyUsers.filter(({ current: current })=>current)?.[0];\nconst $65de6e4b920662fb$export$eb9786ca839077d7 = $65de6e4b920662fb$var$getDummyComments((0, (/*@__PURE__*/$parcel$interopDefault($9e2c3a2fa881e26e$exports))));\nfunction $65de6e4b920662fb$var$getDummyComments(dummyComments) {\n    return dummyComments.map(({ id: id, user: user, timestamp: timestamp, text: text, likes: likes, replies: replies, granted: granted, deleted: deleted })=>({\n            id: id,\n            user: $65de6e4b920662fb$var$dummyUsers.find(({ id: id })=>id.toString() === user.toString()) ?? $65de6e4b920662fb$export$436db612211f10c0(),\n            timestamp: timestamp,\n            text: text,\n            likes: likes,\n            replies: replies ? $65de6e4b920662fb$var$getDummyComments(replies) : undefined,\n            granted: granted || $65de6e4b920662fb$var$curDummyUser?.id.toString() === String(user),\n            deleted: deleted\n        }));\n}\nfunction $65de6e4b920662fb$export$6b4d17951d525800(nickname, size = (0, $8144c85a2570f11c$export$2e2bcd8739ae039).avatarSize) {\n    const url = new URL(`${$65de6e4b920662fb$var$DUMMY_AVATAR_BASE_URL}/${$65de6e4b920662fb$var$DUMMY_AVATAR_STYLE}/${$65de6e4b920662fb$var$DUMMY_AVATAR_FORMAT}`);\n    const params = new URLSearchParams({\n        seed: nickname,\n        backgroundColor: $65de6e4b920662fb$var$DUMMY_AVATAR_BG_COLOR,\n        size: size.toString()\n    });\n    url.search = params.toString();\n    return url.toString();\n}\nfunction $65de6e4b920662fb$export$cb8dae35ec587e89() {\n    const { nickname: nickname = (0, $8144c85a2570f11c$export$2e2bcd8739ae039).anonimusNickname, avatar: avatar = (0, $8144c85a2570f11c$export$2e2bcd8739ae039).anonimusAvatar } = $65de6e4b920662fb$var$curDummyUser || $65de6e4b920662fb$export$436db612211f10c0();\n    return {\n        userId: $65de6e4b920662fb$var$curDummyUser?.id,\n        nickname: nickname,\n        avatar: avatar,\n        datetime: (0, $5e5fa34344a1714f$export$5b5aedec9076f4c6)(Date.now()),\n        current: true\n    };\n}\nfunction $65de6e4b920662fb$export$436db612211f10c0() {\n    return {\n        id: $65de6e4b920662fb$export$87d45d9755ebb726(),\n        nickname: (0, $8144c85a2570f11c$export$2e2bcd8739ae039).anonimusNickname,\n        avatar: (0, $8144c85a2570f11c$export$2e2bcd8739ae039).anonimusAvatar,\n        current: false\n    };\n}\nfunction $65de6e4b920662fb$export$87d45d9755ebb726() {\n    return Date.now();\n}\n\n\nconst $cf1346a02618cd5c$export$3ef38108298ac5d2 = 'comment-published';\nfunction $cf1346a02618cd5c$export$2e2bcd8739ae039(publishCommentEvent, commentsContainer) {\n    publishCommentEvent.preventDefault();\n    const addCommentForm = publishCommentEvent.target;\n    const commentInput = addCommentForm?.querySelector('textarea');\n    if (commentInput) {\n        const commentText = commentInput.value.trim();\n        commentInput.value = '';\n        commentInput.dispatchEvent(new Event('input'));\n        const meta = (0, $65de6e4b920662fb$export$cb8dae35ec587e89)();\n        const comment = (0, $c5c494ce1f0795bf$export$2e2bcd8739ae039)({\n            id: Date.now(),\n            meta: meta,\n            text: (0, (/*@__PURE__*/$parcel$interopDefault($a891510b26e6e0ec$exports))).sanitize(commentText, {\n                ALLOWED_TAGS: [\n                    'b',\n                    'i',\n                    'u',\n                    's',\n                    'small',\n                    'mark',\n                    'blockquote',\n                    'img'\n                ],\n                ALLOWED_ATTR: [\n                    'src',\n                    'alt'\n                ],\n                FORBID_ATTR: [\n                    'onerror',\n                    'onload'\n                ]\n            }),\n            granted: meta.userId !== undefined\n        }, commentsContainer);\n        addCommentForm.dispatchEvent(new CustomEvent($cf1346a02618cd5c$export$3ef38108298ac5d2, {\n            bubbles: true,\n            composed: true,\n            detail: {\n                comment: comment\n            }\n        }));\n    }\n}\n\n\n\n\n\n\n\nvar $6bae9757046c9c20$exports = {};\n\n$6bae9757046c9c20$exports = (parcelRequire(\"aNJCr\")).getBundleURL('7o1Gz') + \"sprite.f5ef0385.svg\";\n\n\nfunction $217b24953a9b81c8$export$2e2bcd8739ae039(form, commentsContainer = document.body, formContainer) {\n    if (!form) {\n        form = (0, (/*@__PURE__*/$parcel$interopDefault($2fe77e3211220ea2$exports)))` <form>\n      <textarea\n        placeholder=\"Написать комментарий...\"\n        required\n        minlength=\"1\"\n        maxlength=\"1024\"\n      ></textarea>\n      <button disabled>\n        <svg>\n          <use href=\"${0, (/*@__PURE__*/$parcel$interopDefault($6bae9757046c9c20$exports))}#airplane\" />\n        </svg>\n        <span>Отправить</span>\n      </button>\n      ${(0, (/*@__PURE__*/$parcel$interopDefault($af68d26e6254a194$exports)))(' ')}\n      <button type=\"reset\">\n        <svg>\n          <use href=\"${0, (/*@__PURE__*/$parcel$interopDefault($6bae9757046c9c20$exports))}#cross\" />\n        </svg>\n        <span>Отменить</span>\n      </button>\n    </form>`;\n        (formContainer ?? commentsContainer).prepend(form);\n    }\n    if (!form._addCommentOnSubmit) form._addCommentOnSubmit = (e)=>(0, $cf1346a02618cd5c$export$2e2bcd8739ae039)(e, commentsContainer);\n    if (!form._onReset) {\n        const button = form.querySelector('button:not([type=\"reset\"])');\n        form._onReset = ()=>(0, $5e5fa34344a1714f$export$22bd32654b194b3f)(button, true);\n    }\n    form.addEventListener('submit', form._addCommentOnSubmit);\n    form.addEventListener('reset', form._onReset);\n    form.querySelector('textarea')?.addEventListener('input', (0, $2ab559d76dc5c458$export$2e2bcd8739ae039));\n    return form;\n}\n\n\n\n\nfunction $3485cea7652ab7cd$export$2e2bcd8739ae039({ detail: detail }) {\n    const { comment: comment } = detail;\n    // eslint-disable-next-line no-console\n    console.log('intent to reply on comment', comment);\n    let commentReplyes = comment.querySelector('[slot=\"replies\"]');\n    if (!commentReplyes) {\n        commentReplyes = (0, (/*@__PURE__*/$parcel$interopDefault($2fe77e3211220ea2$exports)))`<section\n      slot=\"replies\"\n      aria-label=\"Ответы на комментарий\"\n    />`;\n        comment.appendChild(commentReplyes);\n    }\n    let addCommentForm = comment.querySelector('form');\n    addCommentForm = (0, $217b24953a9b81c8$export$2e2bcd8739ae039)(addCommentForm, commentReplyes);\n    addCommentForm.hidden = false;\n    if (!addCommentForm._resetFormHandler) addCommentForm._hideForm = ()=>addCommentForm.hidden = true;\n    addCommentForm.addEventListener('reset', addCommentForm._hideForm);\n    addCommentForm.addEventListener('submit', addCommentForm._hideForm);\n}\n\n\nfunction $f4c3c8d113dea446$export$2e2bcd8739ae039({ detail: detail }) {\n    const { comment: comment } = detail;\n    // eslint-disable-next-line no-console\n    console.log('deleted comment', comment);\n    const addCommentForm = comment.querySelector(':scope > [slot=\"replies\"] > form');\n    addCommentForm?.remove();\n}\n\n\nconst $be0190612a7a6fe4$export$85951da1d4c8a506 = (e)=>// eslint-disable-next-line no-console\n    console.log('comment likes count', e.detail.likes);\nconst $be0190612a7a6fe4$export$23f86e05da2c496 = (elem)=>elem.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n    });\n\n\n\n\n\ncustomElements.define((0, $8144c85a2570f11c$export$2e2bcd8739ae039).COMPONENT_NAME, (0, $8144c85a2570f11c$export$2e2bcd8739ae039));\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    const commentsThread = document.getElementById('post-comments-tread');\n    if (commentsThread) {\n        // build adding thread comment form UI\n        const addCommentForm = (0, $217b24953a9b81c8$export$2e2bcd8739ae039)(document.getElementById('add-comment-form'), commentsThread);\n        const resetButton = addCommentForm?.querySelector('button[type=\"reset\"]');\n        if (resetButton) {\n            resetButton.hidden = true;\n            addCommentForm.addEventListener((0, $2ab559d76dc5c458$export$6bcf52c5616b02ac), (e)=>{\n                const { detail: { filled: filled } } = e;\n                resetButton.hidden = !filled;\n            });\n            addCommentForm.addEventListener('reset', ()=>resetButton.hidden = true);\n            addCommentForm.addEventListener((0, $cf1346a02618cd5c$export$3ef38108298ac5d2), (e)=>{\n                const { detail: { comment: comment } } = e;\n                (0, $be0190612a7a6fe4$export$23f86e05da2c496)(comment);\n            });\n        }\n        commentsThread.addEventListener((0, $8144c85a2570f11c$export$2e2bcd8739ae039).LIKE_EVENT_NAME, (e)=>(0, $be0190612a7a6fe4$export$85951da1d4c8a506)(e));\n        commentsThread.addEventListener((0, $8144c85a2570f11c$export$2e2bcd8739ae039).INTENT_REPLY_EVENT_NAME, (e)=>(0, $3485cea7652ab7cd$export$2e2bcd8739ae039)(e));\n        commentsThread.addEventListener((0, $8144c85a2570f11c$export$2e2bcd8739ae039).DELETE_EVENT_NAME, (e)=>(0, $f4c3c8d113dea446$export$2e2bcd8739ae039)(e));\n        // build adding comments by component API UI\n        document.getElementById('add-comment-by-api')?.addEventListener('click', (e)=>{\n            let scrolled = false;\n            (0, $65de6e4b920662fb$export$eb9786ca839077d7).forEach((data)=>{\n                const comment = new (0, $8144c85a2570f11c$export$2e2bcd8739ae039)(data);\n                commentsThread.append(comment);\n                if (!scrolled) {\n                    (0, $be0190612a7a6fe4$export$23f86e05da2c496)(comment);\n                    scrolled = true;\n                }\n            });\n            (0, $5e5fa34344a1714f$export$22bd32654b194b3f)(e.target, true);\n        });\n    }\n});\n\n})();\n//# sourceMappingURL=index.91434d53.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\"use strict\";\n\nvar bundleURL = {};\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n  return value;\n}\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n  return '/';\n}\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\n// TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n  return matches[0];\n}\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","'use strict'\n\nvar hyperx = require('hyperx')\nvar appendChild = require('./append-child')\nvar SVG_TAGS = require('./svg-tags')\nvar BOOL_PROPS = require('./bool-props')\n// Props that need to be set directly rather than with el.setAttribute()\nvar DIRECT_PROPS = require('./direct-props')\n\nvar SVGNS = 'http://www.w3.org/2000/svg'\nvar XLINKNS = 'http://www.w3.org/1999/xlink'\n\nvar COMMENT_TAG = '!--'\n\nmodule.exports = function (document) {\n  function nanoHtmlCreateElement (tag, props, children) {\n    var el\n\n    // If an svg tag, it needs a namespace\n    if (SVG_TAGS.indexOf(tag) !== -1) {\n      props.namespace = SVGNS\n    }\n\n    // If we are using a namespace\n    var ns = false\n    if (props.namespace) {\n      ns = props.namespace\n      delete props.namespace\n    }\n\n    // If we are extending a builtin element\n    var isCustomElement = false\n    if (props.is) {\n      isCustomElement = props.is\n      delete props.is\n    }\n\n    // Create the element\n    if (ns) {\n      if (isCustomElement) {\n        el = document.createElementNS(ns, tag, { is: isCustomElement })\n      } else {\n        el = document.createElementNS(ns, tag)\n      }\n    } else if (tag === COMMENT_TAG) {\n      return document.createComment(props.comment)\n    } else if (isCustomElement) {\n      el = document.createElement(tag, { is: isCustomElement })\n    } else {\n      el = document.createElement(tag)\n    }\n\n    // Create the properties\n    for (var p in props) {\n      if (props.hasOwnProperty(p)) {\n        var key = p.toLowerCase()\n        var val = props[p]\n        // Normalize className\n        if (key === 'classname') {\n          key = 'class'\n          p = 'class'\n        }\n        // The for attribute gets transformed to htmlFor, but we just set as for\n        if (p === 'htmlFor') {\n          p = 'for'\n        }\n        // If a property is boolean, set itself to the key\n        if (BOOL_PROPS.indexOf(key) !== -1) {\n          if (String(val) === 'true') val = key\n          else if (String(val) === 'false') continue\n        }\n        // If a property prefers being set directly vs setAttribute\n        if (key.slice(0, 2) === 'on' || DIRECT_PROPS.indexOf(key) !== -1) {\n          el[p] = val\n        } else {\n          if (ns) {\n            if (p === 'xlink:href') {\n              el.setAttributeNS(XLINKNS, p, val)\n            } else if (/^xmlns($|:)/i.test(p)) {\n              // skip xmlns definitions\n            } else {\n              el.setAttributeNS(null, p, val)\n            }\n          } else {\n            el.setAttribute(p, val)\n          }\n        }\n      }\n    }\n\n    appendChild(el, children)\n    return el\n  }\n\n  function createFragment (nodes) {\n    var fragment = document.createDocumentFragment()\n    for (var i = 0; i < nodes.length; i++) {\n      if (nodes[i] == null) continue\n      if (Array.isArray(nodes[i])) {\n        fragment.appendChild(createFragment(nodes[i]))\n      } else {\n        if (typeof nodes[i] === 'string') nodes[i] = document.createTextNode(nodes[i])\n        fragment.appendChild(nodes[i])\n      }\n    }\n    return fragment\n  }\n\n  var exports = hyperx(nanoHtmlCreateElement, {\n    comments: true,\n    createFragment: createFragment\n  })\n  exports.default = exports\n  exports.createComment = nanoHtmlCreateElement\n  return exports\n}\n","var attrToProp = require('hyperscript-attribute-to-property')\n\nvar VAR = 0, TEXT = 1, OPEN = 2, CLOSE = 3, ATTR = 4\nvar ATTR_KEY = 5, ATTR_KEY_W = 6\nvar ATTR_VALUE_W = 7, ATTR_VALUE = 8\nvar ATTR_VALUE_SQ = 9, ATTR_VALUE_DQ = 10\nvar ATTR_EQ = 11, ATTR_BREAK = 12\nvar COMMENT = 13\n\nmodule.exports = function (h, opts) {\n  if (!opts) opts = {}\n  var concat = opts.concat || function (a, b) {\n    return String(a) + String(b)\n  }\n  if (opts.attrToProp !== false) {\n    h = attrToProp(h)\n  }\n\n  return function (strings) {\n    var state = TEXT, reg = ''\n    var arglen = arguments.length\n    var parts = []\n\n    for (var i = 0; i < strings.length; i++) {\n      if (i < arglen - 1) {\n        var arg = arguments[i+1]\n        var p = parse(strings[i])\n        var xstate = state\n        if (xstate === ATTR_VALUE_DQ) xstate = ATTR_VALUE\n        if (xstate === ATTR_VALUE_SQ) xstate = ATTR_VALUE\n        if (xstate === ATTR_VALUE_W) xstate = ATTR_VALUE\n        if (xstate === ATTR) xstate = ATTR_KEY\n        if (xstate === OPEN) {\n          if (reg === '/') {\n            p.push([ OPEN, '/', arg ])\n            reg = ''\n          } else {\n            p.push([ OPEN, arg ])\n          }\n        } else if (xstate === COMMENT && opts.comments) {\n          reg += String(arg)\n        } else if (xstate !== COMMENT) {\n          p.push([ VAR, xstate, arg ])\n        }\n        parts.push.apply(parts, p)\n      } else parts.push.apply(parts, parse(strings[i]))\n    }\n\n    var tree = [null,{},[]]\n    var stack = [[tree,-1]]\n    for (var i = 0; i < parts.length; i++) {\n      var cur = stack[stack.length-1][0]\n      var p = parts[i], s = p[0]\n      if (s === OPEN && /^\\//.test(p[1])) {\n        var ix = stack[stack.length-1][1]\n        if (stack.length > 1) {\n          stack.pop()\n          stack[stack.length-1][0][2][ix] = h(\n            cur[0], cur[1], cur[2].length ? cur[2] : undefined\n          )\n        }\n      } else if (s === OPEN) {\n        var c = [p[1],{},[]]\n        cur[2].push(c)\n        stack.push([c,cur[2].length-1])\n      } else if (s === ATTR_KEY || (s === VAR && p[1] === ATTR_KEY)) {\n        var key = ''\n        var copyKey\n        for (; i < parts.length; i++) {\n          if (parts[i][0] === ATTR_KEY) {\n            key = concat(key, parts[i][1])\n          } else if (parts[i][0] === VAR && parts[i][1] === ATTR_KEY) {\n            if (typeof parts[i][2] === 'object' && !key) {\n              for (copyKey in parts[i][2]) {\n                if (parts[i][2].hasOwnProperty(copyKey) && !cur[1][copyKey]) {\n                  cur[1][copyKey] = parts[i][2][copyKey]\n                }\n              }\n            } else {\n              key = concat(key, parts[i][2])\n            }\n          } else break\n        }\n        if (parts[i][0] === ATTR_EQ) i++\n        var j = i\n        for (; i < parts.length; i++) {\n          if (parts[i][0] === ATTR_VALUE || parts[i][0] === ATTR_KEY) {\n            if (!cur[1][key]) cur[1][key] = strfn(parts[i][1])\n            else parts[i][1]===\"\" || (cur[1][key] = concat(cur[1][key], parts[i][1]));\n          } else if (parts[i][0] === VAR\n          && (parts[i][1] === ATTR_VALUE || parts[i][1] === ATTR_KEY)) {\n            if (!cur[1][key]) cur[1][key] = strfn(parts[i][2])\n            else parts[i][2]===\"\" || (cur[1][key] = concat(cur[1][key], parts[i][2]));\n          } else {\n            if (key.length && !cur[1][key] && i === j\n            && (parts[i][0] === CLOSE || parts[i][0] === ATTR_BREAK)) {\n              // https://html.spec.whatwg.org/multipage/infrastructure.html#boolean-attributes\n              // empty string is falsy, not well behaved value in browser\n              cur[1][key] = key.toLowerCase()\n            }\n            if (parts[i][0] === CLOSE) {\n              i--\n            }\n            break\n          }\n        }\n      } else if (s === ATTR_KEY) {\n        cur[1][p[1]] = true\n      } else if (s === VAR && p[1] === ATTR_KEY) {\n        cur[1][p[2]] = true\n      } else if (s === CLOSE) {\n        if (selfClosing(cur[0]) && stack.length) {\n          var ix = stack[stack.length-1][1]\n          stack.pop()\n          stack[stack.length-1][0][2][ix] = h(\n            cur[0], cur[1], cur[2].length ? cur[2] : undefined\n          )\n        }\n      } else if (s === VAR && p[1] === TEXT) {\n        if (p[2] === undefined || p[2] === null) p[2] = ''\n        else if (!p[2]) p[2] = concat('', p[2])\n        if (Array.isArray(p[2][0])) {\n          cur[2].push.apply(cur[2], p[2])\n        } else {\n          cur[2].push(p[2])\n        }\n      } else if (s === TEXT) {\n        cur[2].push(p[1])\n      } else if (s === ATTR_EQ || s === ATTR_BREAK) {\n        // no-op\n      } else {\n        throw new Error('unhandled: ' + s)\n      }\n    }\n\n    if (tree[2].length > 1 && /^\\s*$/.test(tree[2][0])) {\n      tree[2].shift()\n    }\n\n    if (tree[2].length > 2\n    || (tree[2].length === 2 && /\\S/.test(tree[2][1]))) {\n      if (opts.createFragment) return opts.createFragment(tree[2])\n      throw new Error(\n        'multiple root elements must be wrapped in an enclosing tag'\n      )\n    }\n    if (Array.isArray(tree[2][0]) && typeof tree[2][0][0] === 'string'\n    && Array.isArray(tree[2][0][2])) {\n      tree[2][0] = h(tree[2][0][0], tree[2][0][1], tree[2][0][2])\n    }\n    return tree[2][0]\n\n    function parse (str) {\n      var res = []\n      if (state === ATTR_VALUE_W) state = ATTR\n      for (var i = 0; i < str.length; i++) {\n        var c = str.charAt(i)\n        if (state === TEXT && c === '<') {\n          if (reg.length) res.push([TEXT, reg])\n          reg = ''\n          state = OPEN\n        } else if (c === '>' && !quot(state) && state !== COMMENT) {\n          if (state === OPEN && reg.length) {\n            res.push([OPEN,reg])\n          } else if (state === ATTR_KEY) {\n            res.push([ATTR_KEY,reg])\n          } else if (state === ATTR_VALUE && reg.length) {\n            res.push([ATTR_VALUE,reg])\n          }\n          res.push([CLOSE])\n          reg = ''\n          state = TEXT\n        } else if (state === COMMENT && /-$/.test(reg) && c === '-') {\n          if (opts.comments) {\n            res.push([ATTR_VALUE,reg.substr(0, reg.length - 1)])\n          }\n          reg = ''\n          state = TEXT\n        } else if (state === OPEN && /^!--$/.test(reg)) {\n          if (opts.comments) {\n            res.push([OPEN, reg],[ATTR_KEY,'comment'],[ATTR_EQ])\n          }\n          reg = c\n          state = COMMENT\n        } else if (state === TEXT || state === COMMENT) {\n          reg += c\n        } else if (state === OPEN && c === '/' && reg.length) {\n          // no-op, self closing tag without a space <br/>\n        } else if (state === OPEN && /\\s/.test(c)) {\n          if (reg.length) {\n            res.push([OPEN, reg])\n          }\n          reg = ''\n          state = ATTR\n        } else if (state === OPEN) {\n          reg += c\n        } else if (state === ATTR && /[^\\s\"'=/]/.test(c)) {\n          state = ATTR_KEY\n          reg = c\n        } else if (state === ATTR && /\\s/.test(c)) {\n          if (reg.length) res.push([ATTR_KEY,reg])\n          res.push([ATTR_BREAK])\n        } else if (state === ATTR_KEY && /\\s/.test(c)) {\n          res.push([ATTR_KEY,reg])\n          reg = ''\n          state = ATTR_KEY_W\n        } else if (state === ATTR_KEY && c === '=') {\n          res.push([ATTR_KEY,reg],[ATTR_EQ])\n          reg = ''\n          state = ATTR_VALUE_W\n        } else if (state === ATTR_KEY) {\n          reg += c\n        } else if ((state === ATTR_KEY_W || state === ATTR) && c === '=') {\n          res.push([ATTR_EQ])\n          state = ATTR_VALUE_W\n        } else if ((state === ATTR_KEY_W || state === ATTR) && !/\\s/.test(c)) {\n          res.push([ATTR_BREAK])\n          if (/[\\w-]/.test(c)) {\n            reg += c\n            state = ATTR_KEY\n          } else state = ATTR\n        } else if (state === ATTR_VALUE_W && c === '\"') {\n          state = ATTR_VALUE_DQ\n        } else if (state === ATTR_VALUE_W && c === \"'\") {\n          state = ATTR_VALUE_SQ\n        } else if (state === ATTR_VALUE_DQ && c === '\"') {\n          res.push([ATTR_VALUE,reg],[ATTR_BREAK])\n          reg = ''\n          state = ATTR\n        } else if (state === ATTR_VALUE_SQ && c === \"'\") {\n          res.push([ATTR_VALUE,reg],[ATTR_BREAK])\n          reg = ''\n          state = ATTR\n        } else if (state === ATTR_VALUE_W && !/\\s/.test(c)) {\n          state = ATTR_VALUE\n          i--\n        } else if (state === ATTR_VALUE && /\\s/.test(c)) {\n          res.push([ATTR_VALUE,reg],[ATTR_BREAK])\n          reg = ''\n          state = ATTR\n        } else if (state === ATTR_VALUE || state === ATTR_VALUE_SQ\n        || state === ATTR_VALUE_DQ) {\n          reg += c\n        }\n      }\n      if (state === TEXT && reg.length) {\n        res.push([TEXT,reg])\n        reg = ''\n      } else if (state === ATTR_VALUE && reg.length) {\n        res.push([ATTR_VALUE,reg])\n        reg = ''\n      } else if (state === ATTR_VALUE_DQ && reg.length) {\n        res.push([ATTR_VALUE,reg])\n        reg = ''\n      } else if (state === ATTR_VALUE_SQ && reg.length) {\n        res.push([ATTR_VALUE,reg])\n        reg = ''\n      } else if (state === ATTR_KEY) {\n        res.push([ATTR_KEY,reg])\n        reg = ''\n      }\n      return res\n    }\n  }\n\n  function strfn (x) {\n    if (typeof x === 'function') return x\n    else if (typeof x === 'string') return x\n    else if (x && typeof x === 'object') return x\n    else if (x === null || x === undefined) return x\n    else return concat('', x)\n  }\n}\n\nfunction quot (state) {\n  return state === ATTR_VALUE_SQ || state === ATTR_VALUE_DQ\n}\n\nvar closeRE = RegExp('^(' + [\n  'area', 'base', 'basefont', 'bgsound', 'br', 'col', 'command', 'embed',\n  'frame', 'hr', 'img', 'input', 'isindex', 'keygen', 'link', 'meta', 'param',\n  'source', 'track', 'wbr', '!--',\n  // SVG TAGS\n  'animate', 'animateTransform', 'circle', 'cursor', 'desc', 'ellipse',\n  'feBlend', 'feColorMatrix', 'feComposite',\n  'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap',\n  'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR',\n  'feGaussianBlur', 'feImage', 'feMergeNode', 'feMorphology',\n  'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile',\n  'feTurbulence', 'font-face-format', 'font-face-name', 'font-face-uri',\n  'glyph', 'glyphRef', 'hkern', 'image', 'line', 'missing-glyph', 'mpath',\n  'path', 'polygon', 'polyline', 'rect', 'set', 'stop', 'tref', 'use', 'view',\n  'vkern'\n].join('|') + ')(?:[\\.#][a-zA-Z0-9\\u007F-\\uFFFF_:-]+)*$')\nfunction selfClosing (tag) { return closeRE.test(tag) }\n","module.exports = attributeToProperty\n\nvar transform = {\n  'class': 'className',\n  'for': 'htmlFor',\n  'http-equiv': 'httpEquiv'\n}\n\nfunction attributeToProperty (h) {\n  return function (tagName, attrs, children) {\n    for (var attr in attrs) {\n      if (attr in transform) {\n        attrs[transform[attr]] = attrs[attr]\n        delete attrs[attr]\n      }\n    }\n    return h(tagName, attrs, children)\n  }\n}\n","'use strict'\n\nvar trailingNewlineRegex = /\\n[\\s]+$/\nvar leadingNewlineRegex = /^\\n[\\s]+/\nvar trailingSpaceRegex = /[\\s]+$/\nvar leadingSpaceRegex = /^[\\s]+/\nvar multiSpaceRegex = /[\\n\\s]+/g\n\nvar TEXT_TAGS = [\n  'a', 'abbr', 'b', 'bdi', 'bdo', 'br', 'cite', 'data', 'dfn', 'em', 'i',\n  'kbd', 'mark', 'q', 'rp', 'rt', 'rtc', 'ruby', 's', 'amp', 'small', 'span',\n  'strong', 'sub', 'sup', 'time', 'u', 'var', 'wbr'\n]\n\nvar VERBATIM_TAGS = [\n  'code', 'pre', 'textarea'\n]\n\nmodule.exports = function appendChild (el, childs) {\n  if (!Array.isArray(childs)) return\n\n  var nodeName = el.nodeName.toLowerCase()\n\n  var hadText = false\n  var value, leader\n\n  for (var i = 0, len = childs.length; i < len; i++) {\n    var node = childs[i]\n    if (Array.isArray(node)) {\n      appendChild(el, node)\n      continue\n    }\n\n    if (typeof node === 'number' ||\n      typeof node === 'boolean' ||\n      typeof node === 'function' ||\n      node instanceof Date ||\n      node instanceof RegExp) {\n      node = node.toString()\n    }\n\n    var lastChild = el.childNodes[el.childNodes.length - 1]\n\n    // Iterate over text nodes\n    if (typeof node === 'string') {\n      hadText = true\n\n      // If we already had text, append to the existing text\n      if (lastChild && lastChild.nodeName === '#text') {\n        lastChild.nodeValue += node\n\n      // We didn't have a text node yet, create one\n      } else {\n        node = el.ownerDocument.createTextNode(node)\n        el.appendChild(node)\n        lastChild = node\n      }\n\n      // If this is the last of the child nodes, make sure we close it out\n      // right\n      if (i === len - 1) {\n        hadText = false\n        // Trim the child text nodes if the current node isn't a\n        // node where whitespace matters.\n        if (TEXT_TAGS.indexOf(nodeName) === -1 &&\n          VERBATIM_TAGS.indexOf(nodeName) === -1) {\n          value = lastChild.nodeValue\n            .replace(leadingNewlineRegex, '')\n            .replace(trailingSpaceRegex, '')\n            .replace(trailingNewlineRegex, '')\n            .replace(multiSpaceRegex, ' ')\n          if (value === '') {\n            el.removeChild(lastChild)\n          } else {\n            lastChild.nodeValue = value\n          }\n        } else if (VERBATIM_TAGS.indexOf(nodeName) === -1) {\n          // The very first node in the list should not have leading\n          // whitespace. Sibling text nodes should have whitespace if there\n          // was any.\n          leader = i === 0 ? '' : ' '\n          value = lastChild.nodeValue\n            .replace(leadingNewlineRegex, leader)\n            .replace(leadingSpaceRegex, ' ')\n            .replace(trailingSpaceRegex, '')\n            .replace(trailingNewlineRegex, '')\n            .replace(multiSpaceRegex, ' ')\n          lastChild.nodeValue = value\n        }\n      }\n\n    // Iterate over DOM nodes\n    } else if (node && node.nodeType) {\n      // If the last node was a text node, make sure it is properly closed out\n      if (hadText) {\n        hadText = false\n\n        // Trim the child text nodes if the current node isn't a\n        // text node or a code node\n        if (TEXT_TAGS.indexOf(nodeName) === -1 &&\n          VERBATIM_TAGS.indexOf(nodeName) === -1) {\n          value = lastChild.nodeValue\n            .replace(leadingNewlineRegex, '')\n            .replace(trailingNewlineRegex, ' ')\n            .replace(multiSpaceRegex, ' ')\n\n          // Remove empty text nodes, append otherwise\n          if (value === '') {\n            el.removeChild(lastChild)\n          } else {\n            lastChild.nodeValue = value\n          }\n        // Trim the child nodes but preserve the appropriate whitespace\n        } else if (VERBATIM_TAGS.indexOf(nodeName) === -1) {\n          value = lastChild.nodeValue\n            .replace(leadingSpaceRegex, ' ')\n            .replace(leadingNewlineRegex, '')\n            .replace(trailingNewlineRegex, ' ')\n            .replace(multiSpaceRegex, ' ')\n          lastChild.nodeValue = value\n        }\n      }\n\n      // Store the last nodename\n      var _nodeName = node.nodeName\n      if (_nodeName) nodeName = _nodeName.toLowerCase()\n\n      // Append the node to the DOM\n      el.appendChild(node)\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = [\n  'svg', 'altGlyph', 'altGlyphDef', 'altGlyphItem', 'animate', 'animateColor',\n  'animateMotion', 'animateTransform', 'circle', 'clipPath', 'color-profile',\n  'cursor', 'defs', 'desc', 'ellipse', 'feBlend', 'feColorMatrix',\n  'feComponentTransfer', 'feComposite', 'feConvolveMatrix',\n  'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood',\n  'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage',\n  'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight',\n  'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence', 'filter',\n  'font', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src',\n  'font-face-uri', 'foreignObject', 'g', 'glyph', 'glyphRef', 'hkern', 'image',\n  'line', 'linearGradient', 'marker', 'mask', 'metadata', 'missing-glyph',\n  'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect',\n  'set', 'stop', 'switch', 'symbol', 'text', 'textPath', 'title', 'tref',\n  'tspan', 'use', 'view', 'vkern'\n]\n","'use strict'\n\nmodule.exports = [\n  'async', 'autofocus', 'autoplay', 'checked', 'controls', 'default',\n  'defaultchecked', 'defer', 'disabled', 'formnovalidate', 'hidden',\n  'ismap', 'loop', 'multiple', 'muted', 'novalidate', 'open', 'playsinline',\n  'readonly', 'required', 'reversed', 'selected'\n]\n","'use strict'\n\nmodule.exports = [\n  'indeterminate'\n]\n","require('./helpers/bundle-manifest').register(require('./helpers/bundle-url').getBundleURL('7o1Gz'),JSON.parse(\"[\\\"7o1Gz\\\",\\\"index.91434d53.js\\\",\\\"gLaMk\\\",\\\"sprite.f5ef0385.svg\\\",\\\"jm0TH\\\",\\\"index.949ca88e.css\\\"]\"));","import PostComment, {\n  type LikeEventDetail,\n  type IntentReplyEventDetail,\n  type DeleteEventDetail,\n} from './components/PostComment';\nimport { setElementDisabled } from './components/PostComment/utils';\nimport {\n  type CommentInputEventDetail,\n  COMMENT_INPUT_EVENT_NAME,\n} from './helpers/event_handlers/inputComment';\nimport {\n  type CommentPublishedEventDetail,\n  COMMENT_PUBLISHED_EVENT_NAME,\n} from './helpers/event_handlers/publishComment';\nimport {\n  buildCommentAddingForm,\n  deleteCommentEventHandler,\n  likeCommentEventHandler,\n  intentReplyEventHandler,\n  scroll2elem,\n} from './helpers';\nimport { dummyComments } from './helpers/mocks';\nimport '@picocss/pico';\nimport './global.scss';\n\ncustomElements.define(PostComment.COMPONENT_NAME, PostComment);\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const commentsThread = document.getElementById('post-comments-tread');\n  if (commentsThread) {\n    // build adding thread comment form UI\n    const addCommentForm = buildCommentAddingForm(\n      document.getElementById('add-comment-form') as HTMLFormElement,\n      commentsThread,\n    );\n    const resetButton = addCommentForm?.querySelector(\n      'button[type=\"reset\"]',\n    ) as HTMLElement | null;\n    if (resetButton) {\n      resetButton.hidden = true;\n      addCommentForm.addEventListener(COMMENT_INPUT_EVENT_NAME, (e) => {\n        const {\n          detail: { filled },\n        } = e as CustomEvent<CommentInputEventDetail>;\n        resetButton.hidden = !filled;\n      });\n      addCommentForm.addEventListener(\n        'reset',\n        () => (resetButton.hidden = true),\n      );\n      addCommentForm.addEventListener(COMMENT_PUBLISHED_EVENT_NAME, (e) => {\n        const {\n          detail: { comment },\n        } = e as CustomEvent<CommentPublishedEventDetail>;\n        scroll2elem(comment);\n      });\n    }\n\n    commentsThread.addEventListener(PostComment.LIKE_EVENT_NAME, (e) =>\n      likeCommentEventHandler(e as CustomEvent<LikeEventDetail>),\n    );\n    commentsThread.addEventListener(PostComment.INTENT_REPLY_EVENT_NAME, (e) =>\n      intentReplyEventHandler(e as CustomEvent<IntentReplyEventDetail>),\n    );\n    commentsThread.addEventListener(PostComment.DELETE_EVENT_NAME, (e) =>\n      deleteCommentEventHandler(e as CustomEvent<DeleteEventDetail>),\n    );\n\n    // build adding comments by component API UI\n    document\n      .getElementById('add-comment-by-api')\n      ?.addEventListener('click', (e) => {\n        let scrolled = false;\n        dummyComments.forEach((data) => {\n          const comment = new PostComment(data);\n          commentsThread.append(comment);\n          if (!scrolled) {\n            scroll2elem(comment);\n            scrolled = true;\n          }\n        });\n\n        setElementDisabled(e.target as HTMLButtonElement, true);\n      });\n  }\n});\n","import { Comment, User, SlotName, PartialBy } from './types';\nimport * as utils from './utils';\nimport { defaultTemplate } from './templates';\n\nexport type LikeEventDetail = {\n  likes: number;\n};\nexport type IntentReplyEventDetail = {\n  comment: PostComment;\n};\nexport type DeleteEventDetail = {\n  comment: PostComment;\n};\nexport type { Comment, User };\n\nclass PostComment extends HTMLElement {\n  static readonly COMPONENT_NAME = 'post-comment';\n  static readonly LIKE_EVENT_NAME = `${PostComment.COMPONENT_NAME}-like`;\n  static readonly INTENT_REPLY_EVENT_NAME = `${PostComment.COMPONENT_NAME}-intent-reply`;\n  static readonly DELETE_EVENT_NAME = `${PostComment.COMPONENT_NAME}-delete`;\n\n  static extTemplateId = `${PostComment.COMPONENT_NAME}-template`;\n  static avatarSize = 50;\n  static anonimusNickname = 'Анонимный пользователь';\n  static anonimusAvatar = `https://placehold.co/${PostComment.avatarSize}`;\n\n  protected static _sanitizer = new utils.HTMLSanitizer();\n\n  protected _shadow: ShadowRoot | null = null;\n  protected _liked = false;\n  protected _deleted = false;\n\n  protected _slotElemsWrappers = utils._buildSlotElemsWrappers();\n\n  constructor(\n    protected _initData?: PartialBy<Comment, 'timestamp'>,\n    public template = PostComment._obtainTemplate(),\n    protected _wrapper: HTMLElement | null = utils.defaultCommentWrapper(),\n  ) {\n    super();\n    if (this._initData) {\n      this.template ??= defaultTemplate;\n\n      this._prepareSlotElemsWrappers();\n\n      const {\n        id,\n        user: {\n          id: userId,\n          nickname = PostComment.anonimusNickname,\n          avatar = PostComment.anonimusAvatar,\n          current = false,\n        },\n        timestamp = Date.now(),\n        text,\n        likes = 0,\n        replies = [],\n        granted = false,\n        deleted = false,\n      } = this._initData;\n\n      if (!deleted) {\n        this._buildNicknameElement(nickname);\n        this._buildAvatarElement(avatar);\n        this._buildDatetimeElement(timestamp);\n        this._buildCommentTextElement(text);\n\n        this.likes = likes;\n\n        this.replies = replies.map((reply) => {\n          const wrapper = this._wrapper?.cloneNode(\n            false,\n          ) as typeof this._wrapper;\n          return new PostComment(reply, this.template, wrapper);\n        });\n\n        utils.setFlagAttrVal(this, 'granted', granted);\n        utils.setFlagAttrVal(this, 'by-current-user', current);\n\n        this.dataset.id = id.toString();\n        this.dataset.userId = userId.toString();\n      } else {\n        this.delete();\n      }\n    }\n  }\n\n  static get observedAttributes() {\n    return ['likes', 'deleted'];\n  }\n\n  static get allowedTextTags() {\n    return Array.from(PostComment._sanitizer.allowedTags);\n  }\n\n  static set allowedTextTags(allowedTags: string[]) {\n    PostComment._sanitizer.allowedTags = new Set(allowedTags);\n  }\n\n  get likes() {\n    return Number(this.getAttribute('likes') ?? 0);\n  }\n\n  set likes(count: number) {\n    this.setAttribute('likes', (count > 0 ? count : 0).toString());\n  }\n\n  get replies() {\n    const slotElements = this._getSlotElements(SlotName.replies);\n    return [\n      ...(slotElements?.filter((elem) => elem instanceof PostComment) ?? []),\n      ...((slotElements\n        ?.filter((elem) => !(elem instanceof PostComment))\n        ?.flatMap((elem) =>\n          Array.from(elem.querySelectorAll(PostComment.COMPONENT_NAME) ?? []),\n        ) ?? []) as PostComment[]),\n    ];\n  }\n\n  set replies(comments: PostComment[]) {\n    if (!comments.length) {\n      this._deleteSlotElements(SlotName.replies);\n      return;\n    }\n    const tmp = document.createElement('template');\n    tmp.content.append(...comments);\n    this._wrapElemAndInsert2slot(tmp.content, SlotName.replies);\n  }\n\n  get deleted() {\n    return this._deleted;\n  }\n\n  get initData() {\n    return this._initData;\n  }\n\n  connectedCallback() {\n    this.template ??= defaultTemplate;\n\n    if (this._wrapper && this.parentNode && this.parentNode !== this._wrapper) {\n      this.parentNode.insertBefore(this._wrapper, this);\n      this._wrapper.appendChild(this);\n    }\n\n    if (!this._shadow) {\n      this._shadow = this.attachShadow({ mode: 'open' });\n      this._shadow.appendChild(this.template.content.cloneNode(true));\n      this._attachEventListeners();\n    }\n\n    this._render();\n  }\n\n  attributeChangedCallback() {\n    if (this._deleted) return;\n    this._render();\n  }\n\n  addReply(comment: PostComment) {\n    if (!this.replies.length) {\n      this.replies = [comment];\n    } else {\n      if (this._slotElemsWrappers[SlotName.replies]) {\n        this._slotElemsWrappers[SlotName.replies].appendChild(comment);\n      } else {\n        utils.insertElem2slot(this, comment, SlotName.replies);\n      }\n    }\n  }\n\n  delete() {\n    utils.setFlagAttrVal(this, 'deleted', true);\n  }\n\n  protected _render() {\n    if (!this._shadow) return;\n\n    if (utils.getFlagAttrVal(this, 'deleted')) {\n      this._delete();\n      return;\n    }\n\n    utils.setElementHidden(\n      this._getElement('delete-btn'),\n      !utils.getFlagAttrVal(this, 'granted'),\n    );\n\n    this._getElement('likes')?.replaceChildren(\n      document.createTextNode(this.getAttribute('likes') ?? '0'),\n    );\n\n    const likeBtn = this._getElement('like-btn') as HTMLButtonElement | null;\n\n    this._getElement('nickname')?.classList.toggle(\n      PostComment._getElemModifCssCls('nickname', 'current'),\n      utils.getFlagAttrVal(this, 'by-current-user'),\n    );\n\n    const byCurrentUser = utils.getFlagAttrVal(this, 'by-current-user');\n    if (byCurrentUser) {\n      utils.setElementDisabled(likeBtn, true);\n    }\n  }\n\n  protected _attachEventListeners() {\n    this._getElement('like-btn')?.addEventListener('click', () =>\n      this._handleLike(),\n    );\n\n    this._getElement('reply-btn')?.addEventListener('click', () =>\n      this._handleReply(),\n    );\n\n    this._getElement('delete-btn')?.addEventListener('click', () =>\n      this._handleDelete(),\n    );\n  }\n\n  protected _handleLike() {\n    // const likeBtn = e.target as HTMLButtonElement | null;\n    const likeBtn = this._getElement('like-btn') as HTMLButtonElement | null;\n    if (!this._liked) {\n      const likes = Number(this.getAttribute('likes') ?? 0) + 1;\n      this.setAttribute('likes', String(likes));\n      this._getElement('likes')?.replaceChildren(\n        document.createTextNode(String(likes)),\n      );\n      this.dispatchEvent(\n        new CustomEvent<LikeEventDetail>(PostComment.LIKE_EVENT_NAME, {\n          bubbles: true,\n          composed: true,\n          detail: { likes },\n        }),\n      );\n      utils.setElementDisabled(likeBtn, true);\n    }\n  }\n\n  protected _handleReply() {\n    this.dispatchEvent(\n      new CustomEvent<IntentReplyEventDetail>(\n        PostComment.INTENT_REPLY_EVENT_NAME,\n        {\n          bubbles: true,\n          composed: true,\n          detail: { comment: this },\n        },\n      ),\n    );\n  }\n\n  protected _handleDelete() {\n    this.delete();\n    this.dispatchEvent(\n      new CustomEvent<DeleteEventDetail>(PostComment.DELETE_EVENT_NAME, {\n        bubbles: true,\n        composed: true,\n        detail: { comment: this },\n      }),\n    );\n  }\n\n  protected _delete() {\n    Object.entries(SlotName).forEach(([_, name]) => {\n      const slot = this._getSlot(name);\n      if (name === SlotName.default) {\n        slot?.replaceWith('Комментарий удален');\n        this._deleteSlotElements(name);\n      } else if (name !== SlotName.replies) {\n        slot?.remove();\n        this._deleteSlotElements(name);\n      }\n    });\n\n    this._getElement('meta')?.remove();\n    this._getElement('actions')?.remove();\n\n    Array.from(this.attributes).forEach(({ name }) => {\n      if (name !== 'deleted') {\n        this.removeAttribute(name);\n      }\n    });\n    this._deleted = true;\n  }\n\n  protected static _obtainTemplate() {\n    return document.querySelector(\n      `template#${PostComment.extTemplateId}`,\n    ) as HTMLTemplateElement | null;\n  }\n\n  protected _buildNicknameElement(value: string) {\n    this._wrapElemAndInsert2slot(value, SlotName.nickname);\n  }\n\n  protected _buildAvatarElement(src: string) {\n    let avatar: HTMLImageElement;\n    let wrapped = this._getSlotElemWrapper(SlotName.avatar);\n    if (wrapped instanceof HTMLImageElement) {\n      avatar = wrapped;\n    } else {\n      avatar = document.createElement('img');\n      if (wrapped) {\n        wrapped.replaceChildren(avatar);\n      } else {\n        wrapped = avatar;\n      }\n    }\n    avatar.src = src;\n    utils.insertElem2slot(this, wrapped, SlotName.avatar);\n  }\n\n  protected _buildDatetimeElement(timestamp: number) {\n    const { iso, humanized } = utils.processTimestamp(timestamp);\n    const elem = this._wrapElemAndInsert2slot(humanized, SlotName.datetime);\n    if (elem instanceof HTMLTimeElement) {\n      elem.setAttribute('datetime', iso);\n    }\n  }\n\n  protected _buildCommentTextElement(text: string) {\n    const tmp = document.createElement('template');\n    tmp.innerHTML = PostComment._sanitizer.clean(text);\n    this._wrapElemAndInsert2slot(tmp.content);\n  }\n\n  protected _wrapElemAndInsert2slot(\n    elem: Node | string,\n    name = SlotName.default,\n  ) {\n    const wrapped = this._wrapSlotElement(elem, name);\n    return utils.insertElem2slot(this, wrapped, name);\n  }\n\n  protected _wrapSlotElement(elem: Node | string, name = SlotName.default) {\n    let wrapper = this._getSlotElemWrapper(name);\n    if (wrapper) {\n      wrapper.replaceChildren(elem);\n    } else if (\n      elem instanceof HTMLElement ||\n      elem instanceof DocumentFragment\n    ) {\n      return elem;\n    } else {\n      wrapper = document.createElement('div');\n      wrapper.append(elem);\n      this._slotElemsWrappers[name] = wrapper;\n    }\n    return wrapper as Node;\n  }\n\n  protected _getSlotElemWrapper(name: SlotName) {\n    // return (this._wrappers[name]?.cloneNode() ?? null) as HTMLElement | null;\n    return this._slotElemsWrappers[name];\n  }\n\n  protected _prepareSlotElemsWrappers() {\n    if (!this.template) return;\n    let name: SlotName;\n    for (name in this._slotElemsWrappers) {\n      const slot = this._getSlotTemplate(name);\n      if (slot) {\n        this._slotElemsWrappers[name] = slot.children\n          .item(0)\n          ?.cloneNode(false) as HTMLElement | null;\n      }\n    }\n  }\n\n  protected _getSlot(name?: SlotName) {\n    return this._shadow ? utils.querySlot(this._shadow, name) : null;\n  }\n\n  protected _getSlotElements(name?: SlotName, flatten = false) {\n    return this._getSlot(name)?.assignedElements({ flatten }) ?? null;\n  }\n\n  protected _deleteSlotElements(name?: SlotName) {\n    return this._getSlotElements(name)?.forEach((elem) => elem.remove());\n  }\n\n  protected _getSlotTemplate(name?: SlotName) {\n    return this.template ? utils.querySlot(this.template.content, name) : null;\n  }\n\n  protected _getElement(name: string) {\n    return (this._shadow?.querySelector(\n      `.${PostComment._getElemCssCls(name)}`,\n    ) ?? null) as HTMLElement | null;\n  }\n\n  protected static _getElemCssCls(elemName: string) {\n    return `${PostComment.COMPONENT_NAME}__${elemName}`;\n  }\n\n  protected static _getElemModifCssCls(elemName: string, modificator: string) {\n    return `${PostComment._getElemCssCls(elemName)}_${modificator}`;\n  }\n}\nexport default PostComment;\n","export type User = {\n  id: string | number;\n  nickname: string;\n  avatar?: string;\n  current?: boolean;\n};\n\nexport type Comment = {\n  id: string | number;\n  user: User;\n  timestamp: number;\n  text: string;\n  likes?: number;\n  replies?: Comment[];\n  granted?: boolean;\n  deleted?: boolean;\n};\n\nexport type DateFormated = {\n  iso: 'string';\n  humanized: 'string';\n};\n\nexport enum SlotName {\n  nickname = 'nickname',\n  datetime = 'datetime',\n  avatar = 'avatar',\n  replies = 'replies',\n  default = 'default',\n}\n\nexport type SlotWrappers = { [key in SlotName]: HTMLElement | null };\n\nexport type PartialBy<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;\n","import { SlotName, SlotWrappers } from '../types';\n\nexport { default as HTMLSanitizer } from './HTMLSanitizer';\n\nexport const processTimestamp = (value: number) => {\n  const datetime = new Date(value);\n  return {\n    iso: datetime.toISOString(),\n    humanized: prettyDateTime(datetime),\n  };\n};\n\nexport const prettyDateTime = (date = new Date()) => {\n  const formattedDate = date.toLocaleDateString('ru-RU', {\n    day: 'numeric',\n    month: 'long',\n    year:\n      date.getFullYear() !== new Date().getFullYear() ? 'numeric' : undefined,\n  });\n  const formattedTime = date.toLocaleTimeString('ru-RU', {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n  });\n  return `${formattedTime}, ${formattedDate}`;\n};\n\nexport const setElementHidden = (elem: HTMLElement | null, flag: boolean) => {\n  if (elem) {\n    elem.hidden = flag;\n  }\n};\n\nexport const setElementDisabled = (\n  elem: HTMLButtonElement | HTMLInputElement | null,\n  flag: boolean,\n) => {\n  if (elem) {\n    elem.disabled = flag;\n  }\n};\n\nexport const getFlagAttrVal = (elem: HTMLElement, attrName: string) =>\n  elem.getAttribute(attrName) !== null;\n\nexport const setFlagAttrVal = (\n  elem: HTMLElement,\n  attrName: string,\n  val: boolean,\n) => (val ? elem.setAttribute(attrName, '') : elem.removeAttribute(attrName));\n\nexport const querySlot = (elem: ParentNode, name?: SlotName) =>\n  (elem.querySelector(\n    name && SlotName.default !== name\n      ? `slot[name=\"${name}\"]`\n      : 'slot:not([name])',\n  ) ?? null) as HTMLSlotElement | null;\n\nexport const insertElem2slot = (\n  component: HTMLElement,\n  elem: Node,\n  name = SlotName.default,\n) => {\n  if (elem instanceof HTMLElement && name != SlotName.default) {\n    elem.setAttribute('slot', name);\n  }\n  component.appendChild(elem);\n  return elem;\n};\n\nexport const defaultCommentWrapper = () => {\n  const elem = document.createElement('article');\n  elem.setAttribute('aria-label', 'Комментарий');\n  return elem;\n};\n\nexport const _buildSlotElemsWrappers = () =>\n  Object.fromEntries(\n    Object.entries(SlotName).map(([a]) => [a, null]),\n  ) as SlotWrappers;\n","export default class HTMLSanitizer {\n  public allowedTags: Set<string>;\n\n  constructor(\n    allowedTags: string[] = ['b', 'i', 'u', 's', 'small', 'mark', 'blockquote'],\n  ) {\n    this.allowedTags = new Set(allowedTags);\n  }\n\n  clean(input: string): string {\n    if (!/<[a-z][\\s\\S]*>/i.test(input)) {\n      return input;\n    }\n\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(`<div>${input}</div>`, 'text/html');\n\n    if (!doc.body) {\n      return input;\n    }\n\n    const wrapped = doc.body.firstElementChild as HTMLElement;\n    if (!wrapped) {\n      return input;\n    }\n\n    this._clean(wrapped, ['div']);\n\n    return wrapped.innerHTML;\n  }\n\n  protected _clean(node: Node, _extraAllowedTags?: string[]) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const element = node as HTMLElement;\n      const tag = element.tagName.toLowerCase();\n      if (\n        !this.allowedTags.has(tag) &&\n        (!_extraAllowedTags || !_extraAllowedTags.includes(tag))\n      ) {\n        const parent = element.parentNode!;\n        while (element.firstChild) {\n          parent.insertBefore(element.firstChild, element);\n        }\n        parent.removeChild(element);\n      } else {\n        Array.from(element.childNodes).forEach((child) => this._clean(child));\n      }\n    }\n  }\n}\n","export { default as defaultTemplate } from './default';\n","const template = document.createElement('template');\ntemplate.innerHTML = `\n<style>\n  :host {}\n\n  .post-comment {}\n\n  .post-comment__wrapper {}\n\n  .post-comment__meta {\n    font-size: 0.8rem;\n    color: gray;\n    display: flex;\n    gap: 1rem;\n  }\n\n  .post-comment__avatar {\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n    overflow: hidden;\n    flex: none;\n  }\n\n  .post-comment__avatar img {\n    object-fit: cover;\n    width: 100%;\n  }\n\n  .post-comment__nickname :not(small) {\n    font-weight: bold;\n  }\n\n  .post-comment__nickname+small {\n    display: none;\n  }\n\n  .post-comment__nickname_current+small {\n    display: initial;\n  }\n\n  .post-comment__content {\n    width: 100%;\n  }\n\n  .post-comment__actions {\n    margin-top: 0.5rem;\n  }\n\n  .post-comment__replies {\n    margin-top: 1.5rem;\n    margin-left: 2rem;\n  }\n</style>\n<div class=\"post-comment\">\n  <div class=\"post-comment__wrapper\">\n    <div class=\"post-comment__meta\">\n      <div class=\"post-comment__avatar\">\n        <slot name=\"avatar\">\n          <img name=\"avatar\" src=\"https://placehold.co/50\" alt=\"Аватар пользователя не задан\" />\n        </slot>\n      </div>\n      <div>\n        <div>\n          <span class=\"post-comment__nickname\">\n            <slot name=\"nickname\">\n              <strong aria-label=\"Никнейм пользователя\">Анонимный пользователь</strong>\n            </slot>\n          </span>\n          <small>(это вы)</small>\n        </div>\n        <div class=\"post-comment__datetime\">\n          <slot name=\"datetime\">\n            <time slot=\"datetime\">неизвестное время</time>\n          </slot>\n        </div>\n      </div>\n    </div>\n    <div class=\"post-comment__content\">\n      <slot>\n        <div aria-label=\"Текст комментария\"></div>\n      </slot>\n    </div>\n  </div>\n  <div class=\"post-comment__actions\">\n    <button class=\"post-comment__like-btn\" aria-label=\"Поставить лайк\">\n      ❤️ <span class=\"post-comment__likes\">0</span>\n    </button>\n    <button class=\"post-comment__reply-btn\" aria-label=\"Ответить на комментарий\">\n      Ответить\n    </button>\n    <button class=\"post-comment__delete-btn\" aria-label=\"Удалить комментарий\">\n      Удалить\n    </button>\n  </div>\n  <div class=\"post-comment__replies\">\n    <slot name=\"replies\">\n      <section aria-label=\"Ответы на комментарий\"></section>\n    </slot>\n  </div>\n</div>`;\nexport default template;\n","import { setElementDisabled } from '../../components/PostComment/utils';\n\nexport type CommentInputEventDetail = {\n  filled: boolean;\n};\n\nexport const COMMENT_INPUT_EVENT_NAME = 'comment-input';\n\nexport default function inputCommentEventHandler(\n  inputCommentEvent: InputEvent,\n) {\n  const inputCommentElement = inputCommentEvent.target as HTMLInputElement;\n  const addCommentForm = inputCommentElement.closest(\n    'form',\n  ) as HTMLFormElement | null;\n  if (addCommentForm) {\n    const commentButton = addCommentForm.querySelector(\n      'button:not([type=\"reset\"])',\n    ) as HTMLButtonElement | null;\n\n    if (inputCommentElement) {\n      const comment = inputCommentElement.value.trim();\n      const minLength = Number(\n        inputCommentElement.getAttribute('minlength') ?? 0,\n      );\n      const maxLength = Number(\n        inputCommentElement.getAttribute('maxlength') ?? Infinity,\n      );\n      addCommentForm.dispatchEvent(\n        new CustomEvent<CommentInputEventDetail>(COMMENT_INPUT_EVENT_NAME, {\n          detail: { filled: comment.length > 0 },\n        }),\n      );\n      setElementDisabled(\n        commentButton,\n        comment.length < minLength || comment.length > maxLength,\n      );\n    }\n  }\n}\n","import DOMPurify from 'dompurify';\nimport PostComment from '../../components/PostComment';\nimport buildComment from '../builders/comment';\nimport { getCurDummyUserCommentMeta } from '../mocks';\n\nexport type CommentPublishedEventDetail = {\n  comment: PostComment;\n};\n\nexport const COMMENT_PUBLISHED_EVENT_NAME = 'comment-published';\n\nexport default function publishCommentEventHandler(\n  publishCommentEvent: SubmitEvent,\n  commentsContainer: HTMLElement,\n) {\n  publishCommentEvent.preventDefault();\n\n  const addCommentForm = publishCommentEvent.target as HTMLFormElement;\n  const commentInput = addCommentForm?.querySelector('textarea');\n  if (commentInput) {\n    const commentText = commentInput.value.trim();\n    commentInput.value = '';\n    commentInput.dispatchEvent(new Event('input'));\n\n    const meta = getCurDummyUserCommentMeta();\n    const comment = buildComment(\n      {\n        id: Date.now(),\n        meta,\n        text: DOMPurify.sanitize(commentText, {\n          ALLOWED_TAGS: [\n            'b',\n            'i',\n            'u',\n            's',\n            'small',\n            'mark',\n            'blockquote',\n            'img',\n          ],\n          ALLOWED_ATTR: ['src', 'alt'],\n          FORBID_ATTR: ['onerror', 'onload'],\n        }),\n        granted: meta.userId !== undefined,\n      },\n      commentsContainer,\n    );\n    addCommentForm.dispatchEvent(\n      new CustomEvent<CommentPublishedEventDetail>(\n        COMMENT_PUBLISHED_EVENT_NAME,\n        {\n          bubbles: true,\n          composed: true,\n          detail: { comment },\n        },\n      ),\n    );\n  }\n}\n","/*! @license DOMPurify 3.2.4 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.4/LICENSE */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.DOMPurify = factory());\n})(this, (function () { 'use strict';\n\n  const {\n    entries,\n    setPrototypeOf,\n    isFrozen,\n    getPrototypeOf,\n    getOwnPropertyDescriptor\n  } = Object;\n  let {\n    freeze,\n    seal,\n    create\n  } = Object; // eslint-disable-line import/no-mutable-exports\n  let {\n    apply,\n    construct\n  } = typeof Reflect !== 'undefined' && Reflect;\n  if (!freeze) {\n    freeze = function freeze(x) {\n      return x;\n    };\n  }\n  if (!seal) {\n    seal = function seal(x) {\n      return x;\n    };\n  }\n  if (!apply) {\n    apply = function apply(fun, thisValue, args) {\n      return fun.apply(thisValue, args);\n    };\n  }\n  if (!construct) {\n    construct = function construct(Func, args) {\n      return new Func(...args);\n    };\n  }\n  const arrayForEach = unapply(Array.prototype.forEach);\n  const arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\n  const arrayPop = unapply(Array.prototype.pop);\n  const arrayPush = unapply(Array.prototype.push);\n  const arraySplice = unapply(Array.prototype.splice);\n  const stringToLowerCase = unapply(String.prototype.toLowerCase);\n  const stringToString = unapply(String.prototype.toString);\n  const stringMatch = unapply(String.prototype.match);\n  const stringReplace = unapply(String.prototype.replace);\n  const stringIndexOf = unapply(String.prototype.indexOf);\n  const stringTrim = unapply(String.prototype.trim);\n  const objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\n  const regExpTest = unapply(RegExp.prototype.test);\n  const typeErrorCreate = unconstruct(TypeError);\n  /**\n   * Creates a new function that calls the given function with a specified thisArg and arguments.\n   *\n   * @param func - The function to be wrapped and called.\n   * @returns A new function that calls the given function with a specified thisArg and arguments.\n   */\n  function unapply(func) {\n    return function (thisArg) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      return apply(func, thisArg, args);\n    };\n  }\n  /**\n   * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n   *\n   * @param func - The constructor function to be wrapped and called.\n   * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n   */\n  function unconstruct(func) {\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return construct(func, args);\n    };\n  }\n  /**\n   * Add properties to a lookup table\n   *\n   * @param set - The set to which elements will be added.\n   * @param array - The array containing elements to be added to the set.\n   * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n   * @returns The modified set with added elements.\n   */\n  function addToSet(set, array) {\n    let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n    if (setPrototypeOf) {\n      // Make 'in' and truthy checks like Boolean(set.constructor)\n      // independent of any properties defined on Object.prototype.\n      // Prevent prototype setters from intercepting set as a this value.\n      setPrototypeOf(set, null);\n    }\n    let l = array.length;\n    while (l--) {\n      let element = array[l];\n      if (typeof element === 'string') {\n        const lcElement = transformCaseFunc(element);\n        if (lcElement !== element) {\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\n          if (!isFrozen(array)) {\n            array[l] = lcElement;\n          }\n          element = lcElement;\n        }\n      }\n      set[element] = true;\n    }\n    return set;\n  }\n  /**\n   * Clean up an array to harden against CSPP\n   *\n   * @param array - The array to be cleaned.\n   * @returns The cleaned version of the array\n   */\n  function cleanArray(array) {\n    for (let index = 0; index < array.length; index++) {\n      const isPropertyExist = objectHasOwnProperty(array, index);\n      if (!isPropertyExist) {\n        array[index] = null;\n      }\n    }\n    return array;\n  }\n  /**\n   * Shallow clone an object\n   *\n   * @param object - The object to be cloned.\n   * @returns A new object that copies the original.\n   */\n  function clone(object) {\n    const newObject = create(null);\n    for (const [property, value] of entries(object)) {\n      const isPropertyExist = objectHasOwnProperty(object, property);\n      if (isPropertyExist) {\n        if (Array.isArray(value)) {\n          newObject[property] = cleanArray(value);\n        } else if (value && typeof value === 'object' && value.constructor === Object) {\n          newObject[property] = clone(value);\n        } else {\n          newObject[property] = value;\n        }\n      }\n    }\n    return newObject;\n  }\n  /**\n   * This method automatically checks if the prop is function or getter and behaves accordingly.\n   *\n   * @param object - The object to look up the getter function in its prototype chain.\n   * @param prop - The property name for which to find the getter function.\n   * @returns The getter function found in the prototype chain or a fallback function.\n   */\n  function lookupGetter(object, prop) {\n    while (object !== null) {\n      const desc = getOwnPropertyDescriptor(object, prop);\n      if (desc) {\n        if (desc.get) {\n          return unapply(desc.get);\n        }\n        if (typeof desc.value === 'function') {\n          return unapply(desc.value);\n        }\n      }\n      object = getPrototypeOf(object);\n    }\n    function fallbackValue() {\n      return null;\n    }\n    return fallbackValue;\n  }\n\n  const html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n  const svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\n  const svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n  // List of SVG elements that are disallowed by default.\n  // We still need to know them so that we can do namespace\n  // checks properly in case one wants to add them to\n  // allow-list.\n  const svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\n  const mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n  // Similarly to SVG, we want to know all MathML elements,\n  // even those that we disallow by default.\n  const mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\n  const text = freeze(['#text']);\n\n  const html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\n  const svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n  const mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n  const xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n  // eslint-disable-next-line unicorn/better-regex\n  const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n  const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\n  const TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\n  const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\n  const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n  const IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n  );\n  const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n  const ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n  );\n  const DOCTYPE_NAME = seal(/^html$/i);\n  const CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\n  var EXPRESSIONS = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ARIA_ATTR: ARIA_ATTR,\n    ATTR_WHITESPACE: ATTR_WHITESPACE,\n    CUSTOM_ELEMENT: CUSTOM_ELEMENT,\n    DATA_ATTR: DATA_ATTR,\n    DOCTYPE_NAME: DOCTYPE_NAME,\n    ERB_EXPR: ERB_EXPR,\n    IS_ALLOWED_URI: IS_ALLOWED_URI,\n    IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n    MUSTACHE_EXPR: MUSTACHE_EXPR,\n    TMPLIT_EXPR: TMPLIT_EXPR\n  });\n\n  /* eslint-disable @typescript-eslint/indent */\n  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n  const NODE_TYPE = {\n    element: 1,\n    attribute: 2,\n    text: 3,\n    cdataSection: 4,\n    entityReference: 5,\n    // Deprecated\n    entityNode: 6,\n    // Deprecated\n    progressingInstruction: 7,\n    comment: 8,\n    document: 9,\n    documentType: 10,\n    documentFragment: 11,\n    notation: 12 // Deprecated\n  };\n  const getGlobal = function getGlobal() {\n    return typeof window === 'undefined' ? null : window;\n  };\n  /**\n   * Creates a no-op policy for internal use only.\n   * Don't export this function outside this module!\n   * @param trustedTypes The policy factory.\n   * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n   * @return The policy created (or null, if Trusted Types\n   * are not supported or creating the policy failed).\n   */\n  const _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n    if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n      return null;\n    }\n    // Allow the callers to control the unique policy name\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n    // Policy creation with duplicate names throws in Trusted Types.\n    let suffix = null;\n    const ATTR_NAME = 'data-tt-policy-suffix';\n    if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n      suffix = purifyHostElement.getAttribute(ATTR_NAME);\n    }\n    const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n    try {\n      return trustedTypes.createPolicy(policyName, {\n        createHTML(html) {\n          return html;\n        },\n        createScriptURL(scriptUrl) {\n          return scriptUrl;\n        }\n      });\n    } catch (_) {\n      // Policy creation failed (most likely another DOMPurify script has\n      // already run). Skip creating the policy, as this will only cause errors\n      // if TT are enforced.\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n      return null;\n    }\n  };\n  const _createHooksMap = function _createHooksMap() {\n    return {\n      afterSanitizeAttributes: [],\n      afterSanitizeElements: [],\n      afterSanitizeShadowDOM: [],\n      beforeSanitizeAttributes: [],\n      beforeSanitizeElements: [],\n      beforeSanitizeShadowDOM: [],\n      uponSanitizeAttribute: [],\n      uponSanitizeElement: [],\n      uponSanitizeShadowNode: []\n    };\n  };\n  function createDOMPurify() {\n    let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n    const DOMPurify = root => createDOMPurify(root);\n    DOMPurify.version = '3.2.4';\n    DOMPurify.removed = [];\n    if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document || !window.Element) {\n      // Not running in a browser, provide a factory function\n      // so that you can pass your own Window\n      DOMPurify.isSupported = false;\n      return DOMPurify;\n    }\n    let {\n      document\n    } = window;\n    const originalDocument = document;\n    const currentScript = originalDocument.currentScript;\n    const {\n      DocumentFragment,\n      HTMLTemplateElement,\n      Node,\n      Element,\n      NodeFilter,\n      NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n      HTMLFormElement,\n      DOMParser,\n      trustedTypes\n    } = window;\n    const ElementPrototype = Element.prototype;\n    const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n    const remove = lookupGetter(ElementPrototype, 'remove');\n    const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n    const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n    const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n    // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n    if (typeof HTMLTemplateElement === 'function') {\n      const template = document.createElement('template');\n      if (template.content && template.content.ownerDocument) {\n        document = template.content.ownerDocument;\n      }\n    }\n    let trustedTypesPolicy;\n    let emptyHTML = '';\n    const {\n      implementation,\n      createNodeIterator,\n      createDocumentFragment,\n      getElementsByTagName\n    } = document;\n    const {\n      importNode\n    } = originalDocument;\n    let hooks = _createHooksMap();\n    /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */\n    DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n    const {\n      MUSTACHE_EXPR,\n      ERB_EXPR,\n      TMPLIT_EXPR,\n      DATA_ATTR,\n      ARIA_ATTR,\n      IS_SCRIPT_OR_DATA,\n      ATTR_WHITESPACE,\n      CUSTOM_ELEMENT\n    } = EXPRESSIONS;\n    let {\n      IS_ALLOWED_URI: IS_ALLOWED_URI$1\n    } = EXPRESSIONS;\n    /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */\n    /* allowed element names */\n    let ALLOWED_TAGS = null;\n    const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n    /* Allowed attribute names */\n    let ALLOWED_ATTR = null;\n    const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n    /*\n     * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n     * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n     * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n     * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n     */\n    let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false\n      }\n    }));\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n    let FORBID_TAGS = null;\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n    let FORBID_ATTR = null;\n    /* Decide if ARIA attributes are okay */\n    let ALLOW_ARIA_ATTR = true;\n    /* Decide if custom data attributes are okay */\n    let ALLOW_DATA_ATTR = true;\n    /* Decide if unknown protocols are okay */\n    let ALLOW_UNKNOWN_PROTOCOLS = false;\n    /* Decide if self-closing tags in attributes are allowed.\n     * Usually removed due to a mXSS issue in jQuery 3.0 */\n    let ALLOW_SELF_CLOSE_IN_ATTR = true;\n    /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */\n    let SAFE_FOR_TEMPLATES = false;\n    /* Output should be safe even for XML used within HTML and alike.\n     * This means, DOMPurify removes comments when containing risky content.\n     */\n    let SAFE_FOR_XML = true;\n    /* Decide if document with <html>... should be returned */\n    let WHOLE_DOCUMENT = false;\n    /* Track whether config is already set on this instance of DOMPurify. */\n    let SET_CONFIG = false;\n    /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */\n    let FORCE_BODY = false;\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n     * string (or a TrustedHTML object if Trusted Types are supported).\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */\n    let RETURN_DOM = false;\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\n    let RETURN_DOM_FRAGMENT = false;\n    /* Try to return a Trusted Type object instead of a string, return a string in\n     * case Trusted Types are not supported  */\n    let RETURN_TRUSTED_TYPE = false;\n    /* Output should be free from DOM clobbering attacks?\n     * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n     */\n    let SANITIZE_DOM = true;\n    /* Achieve full DOM Clobbering protection by isolating the namespace of named\n     * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n     *\n     * HTML/DOM spec rules that enable DOM Clobbering:\n     *   - Named Access on Window (§7.3.3)\n     *   - DOM Tree Accessors (§3.1.5)\n     *   - Form Element Parent-Child Relations (§4.10.3)\n     *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n     *   - HTMLCollection (§4.2.10.2)\n     *\n     * Namespace isolation is implemented by prefixing `id` and `name` attributes\n     * with a constant string, i.e., `user-content-`\n     */\n    let SANITIZE_NAMED_PROPS = false;\n    const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n    /* Keep element content when removing element? */\n    let KEEP_CONTENT = true;\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n     * of importing it into a new Document and returning a sanitized copy */\n    let IN_PLACE = false;\n    /* Allow usage of profiles like html, svg and mathMl */\n    let USE_PROFILES = {};\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n    let FORBID_CONTENTS = null;\n    const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n    /* Tags that are safe for data: URIs */\n    let DATA_URI_TAGS = null;\n    const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n    /* Attributes safe for values like \"javascript:\" */\n    let URI_SAFE_ATTRIBUTES = null;\n    const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n    const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n    const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n    const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n    /* Document namespace */\n    let NAMESPACE = HTML_NAMESPACE;\n    let IS_EMPTY_INPUT = false;\n    /* Allowed XHTML+XML namespaces */\n    let ALLOWED_NAMESPACES = null;\n    const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n    let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n    let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n    // Certain elements are allowed in both SVG and HTML\n    // namespace. We need to specify them explicitly\n    // so that they don't get erroneously deleted from\n    // HTML namespace.\n    const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n    /* Parsing of strict XHTML documents */\n    let PARSER_MEDIA_TYPE = null;\n    const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n    const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n    let transformCaseFunc = null;\n    /* Keep a reference to config to pass to hooks */\n    let CONFIG = null;\n    /* Ideally, do not touch anything below this line */\n    /* ______________________________________________ */\n    const formElement = document.createElement('form');\n    const isRegexOrFunction = function isRegexOrFunction(testValue) {\n      return testValue instanceof RegExp || testValue instanceof Function;\n    };\n    /**\n     * _parseConfig\n     *\n     * @param cfg optional config literal\n     */\n    // eslint-disable-next-line complexity\n    const _parseConfig = function _parseConfig() {\n      let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (CONFIG && CONFIG === cfg) {\n        return;\n      }\n      /* Shield configuration object from tampering */\n      if (!cfg || typeof cfg !== 'object') {\n        cfg = {};\n      }\n      /* Shield configuration object from prototype pollution */\n      cfg = clone(cfg);\n      PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n      // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n      transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n      /* Set configuration parameters */\n      ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n      ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n      ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n      URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;\n      DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;\n      FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n      FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n      FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n      USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n      ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n      SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n      SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\n      IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n      NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n      MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n      HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n      CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n      }\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n      }\n      if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n        CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n      }\n      if (SAFE_FOR_TEMPLATES) {\n        ALLOW_DATA_ATTR = false;\n      }\n      if (RETURN_DOM_FRAGMENT) {\n        RETURN_DOM = true;\n      }\n      /* Parse profile info */\n      if (USE_PROFILES) {\n        ALLOWED_TAGS = addToSet({}, text);\n        ALLOWED_ATTR = [];\n        if (USE_PROFILES.html === true) {\n          addToSet(ALLOWED_TAGS, html$1);\n          addToSet(ALLOWED_ATTR, html);\n        }\n        if (USE_PROFILES.svg === true) {\n          addToSet(ALLOWED_TAGS, svg$1);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n        if (USE_PROFILES.svgFilters === true) {\n          addToSet(ALLOWED_TAGS, svgFilters);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n        if (USE_PROFILES.mathMl === true) {\n          addToSet(ALLOWED_TAGS, mathMl$1);\n          addToSet(ALLOWED_ATTR, mathMl);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n      }\n      /* Merge configuration parameters */\n      if (cfg.ADD_TAGS) {\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\n        }\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n      }\n      if (cfg.ADD_ATTR) {\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\n        }\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n      }\n      if (cfg.ADD_URI_SAFE_ATTR) {\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n      }\n      if (cfg.FORBID_CONTENTS) {\n        if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n          FORBID_CONTENTS = clone(FORBID_CONTENTS);\n        }\n        addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n      }\n      /* Add #text in case KEEP_CONTENT is set to true */\n      if (KEEP_CONTENT) {\n        ALLOWED_TAGS['#text'] = true;\n      }\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n      if (WHOLE_DOCUMENT) {\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n      }\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n      if (ALLOWED_TAGS.table) {\n        addToSet(ALLOWED_TAGS, ['tbody']);\n        delete FORBID_TAGS.tbody;\n      }\n      if (cfg.TRUSTED_TYPES_POLICY) {\n        if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n          throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n        }\n        if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n          throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n        }\n        // Overwrite existing TrustedTypes policy.\n        trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n        // Sign local variables required by `sanitize`.\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      } else {\n        // Uninitialized policy, attempt to initialize the internal dompurify policy.\n        if (trustedTypesPolicy === undefined) {\n          trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n        }\n        // If creating the internal policy succeeded sign internal variables.\n        if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n          emptyHTML = trustedTypesPolicy.createHTML('');\n        }\n      }\n      // Prevent further manipulation of configuration.\n      // Not available in IE8, Safari 5, etc.\n      if (freeze) {\n        freeze(cfg);\n      }\n      CONFIG = cfg;\n    };\n    /* Keep track of all possible SVG and MathML tags\n     * so that we can perform the namespace checks\n     * correctly. */\n    const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n    const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n    /**\n     * @param element a DOM element whose namespace is being checked\n     * @returns Return false if the element has a\n     *  namespace that a spec-compliant parser would never\n     *  return. Return true otherwise.\n     */\n    const _checkValidNamespace = function _checkValidNamespace(element) {\n      let parent = getParentNode(element);\n      // In JSDOM, if we're inside shadow DOM, then parentNode\n      // can be null. We just simulate parent in this case.\n      if (!parent || !parent.tagName) {\n        parent = {\n          namespaceURI: NAMESPACE,\n          tagName: 'template'\n        };\n      }\n      const tagName = stringToLowerCase(element.tagName);\n      const parentTagName = stringToLowerCase(parent.tagName);\n      if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n        return false;\n      }\n      if (element.namespaceURI === SVG_NAMESPACE) {\n        // The only way to switch from HTML namespace to SVG\n        // is via <svg>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'svg';\n        }\n        // The only way to switch from MathML to SVG is via`\n        // svg if parent is either <annotation-xml> or MathML\n        // text integration points.\n        if (parent.namespaceURI === MATHML_NAMESPACE) {\n          return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n        }\n        // We only allow elements that are defined in SVG\n        // spec. All others are disallowed in SVG namespace.\n        return Boolean(ALL_SVG_TAGS[tagName]);\n      }\n      if (element.namespaceURI === MATHML_NAMESPACE) {\n        // The only way to switch from HTML namespace to MathML\n        // is via <math>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'math';\n        }\n        // The only way to switch from SVG to MathML is via\n        // <math> and HTML integration points\n        if (parent.namespaceURI === SVG_NAMESPACE) {\n          return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n        }\n        // We only allow elements that are defined in MathML\n        // spec. All others are disallowed in MathML namespace.\n        return Boolean(ALL_MATHML_TAGS[tagName]);\n      }\n      if (element.namespaceURI === HTML_NAMESPACE) {\n        // The only way to switch from SVG to HTML is via\n        // HTML integration points, and from MathML to HTML\n        // is via MathML text integration points\n        if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n        if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n        // We disallow tags that are specific for MathML\n        // or SVG and should never appear in HTML namespace\n        return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n      }\n      // For XHTML and XML documents that support custom namespaces\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n        return true;\n      }\n      // The code should never reach this place (this means\n      // that the element somehow got namespace that is not\n      // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n      // Return false just in case.\n      return false;\n    };\n    /**\n     * _forceRemove\n     *\n     * @param node a DOM node\n     */\n    const _forceRemove = function _forceRemove(node) {\n      arrayPush(DOMPurify.removed, {\n        element: node\n      });\n      try {\n        // eslint-disable-next-line unicorn/prefer-dom-node-remove\n        getParentNode(node).removeChild(node);\n      } catch (_) {\n        remove(node);\n      }\n    };\n    /**\n     * _removeAttribute\n     *\n     * @param name an Attribute name\n     * @param element a DOM node\n     */\n    const _removeAttribute = function _removeAttribute(name, element) {\n      try {\n        arrayPush(DOMPurify.removed, {\n          attribute: element.getAttributeNode(name),\n          from: element\n        });\n      } catch (_) {\n        arrayPush(DOMPurify.removed, {\n          attribute: null,\n          from: element\n        });\n      }\n      element.removeAttribute(name);\n      // We void attribute values for unremovable \"is\" attributes\n      if (name === 'is') {\n        if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n          try {\n            _forceRemove(element);\n          } catch (_) {}\n        } else {\n          try {\n            element.setAttribute(name, '');\n          } catch (_) {}\n        }\n      }\n    };\n    /**\n     * _initDocument\n     *\n     * @param dirty - a string of dirty markup\n     * @return a DOM, filled with the dirty markup\n     */\n    const _initDocument = function _initDocument(dirty) {\n      /* Create a HTML document */\n      let doc = null;\n      let leadingWhitespace = null;\n      if (FORCE_BODY) {\n        dirty = '<remove></remove>' + dirty;\n      } else {\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n        const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n        leadingWhitespace = matches && matches[0];\n      }\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n        // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n        dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n      }\n      const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      /*\n       * Use the DOMParser API by default, fallback later if needs be\n       * DOMParser not work for svg when has multiple root element.\n       */\n      if (NAMESPACE === HTML_NAMESPACE) {\n        try {\n          doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n        } catch (_) {}\n      }\n      /* Use createHTMLDocument in case DOMParser is not available */\n      if (!doc || !doc.documentElement) {\n        doc = implementation.createDocument(NAMESPACE, 'template', null);\n        try {\n          doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n        } catch (_) {\n          // Syntax error if dirtyPayload is invalid xml\n        }\n      }\n      const body = doc.body || doc.documentElement;\n      if (dirty && leadingWhitespace) {\n        body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n      }\n      /* Work on whole document or just its body */\n      if (NAMESPACE === HTML_NAMESPACE) {\n        return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n      }\n      return WHOLE_DOCUMENT ? doc.documentElement : body;\n    };\n    /**\n     * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n     *\n     * @param root The root element or node to start traversing on.\n     * @return The created NodeIterator\n     */\n    const _createNodeIterator = function _createNodeIterator(root) {\n      return createNodeIterator.call(root.ownerDocument || root, root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n    };\n    /**\n     * _isClobbered\n     *\n     * @param element element to check for clobbering attacks\n     * @return true if clobbered, false if safe\n     */\n    const _isClobbered = function _isClobbered(element) {\n      return element instanceof HTMLFormElement && (typeof element.nodeName !== 'string' || typeof element.textContent !== 'string' || typeof element.removeChild !== 'function' || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== 'function' || typeof element.setAttribute !== 'function' || typeof element.namespaceURI !== 'string' || typeof element.insertBefore !== 'function' || typeof element.hasChildNodes !== 'function');\n    };\n    /**\n     * Checks whether the given object is a DOM node.\n     *\n     * @param value object to check whether it's a DOM node\n     * @return true is object is a DOM node\n     */\n    const _isNode = function _isNode(value) {\n      return typeof Node === 'function' && value instanceof Node;\n    };\n    function _executeHooks(hooks, currentNode, data) {\n      arrayForEach(hooks, hook => {\n        hook.call(DOMPurify, currentNode, data, CONFIG);\n      });\n    }\n    /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     * @param currentNode to check for permission to exist\n     * @return true if node was killed, false if left alive\n     */\n    const _sanitizeElements = function _sanitizeElements(currentNode) {\n      let content = null;\n      /* Execute a hook if present */\n      _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n      /* Check if element is clobbered or can clobber */\n      if (_isClobbered(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n      /* Now let's check the element's type and name */\n      const tagName = transformCaseFunc(currentNode.nodeName);\n      /* Execute a hook if present */\n      _executeHooks(hooks.uponSanitizeElement, currentNode, {\n        tagName,\n        allowedTags: ALLOWED_TAGS\n      });\n      /* Detect mXSS attempts abusing namespace confusion */\n      if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n      /* Remove any occurrence of processing instructions */\n      if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n        _forceRemove(currentNode);\n        return true;\n      }\n      /* Remove any kind of possibly harmful comments */\n      if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n      /* Remove element if anything forbids its presence */\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n        /* Check if we have a custom element to handle */\n        if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n            return false;\n          }\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n            return false;\n          }\n        }\n        /* Keep content except for bad-listed elements */\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n          const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n          const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n          if (childNodes && parentNode) {\n            const childCount = childNodes.length;\n            for (let i = childCount - 1; i >= 0; --i) {\n              const childClone = cloneNode(childNodes[i], true);\n              childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n              parentNode.insertBefore(childClone, getNextSibling(currentNode));\n            }\n          }\n        }\n        _forceRemove(currentNode);\n        return true;\n      }\n      /* Check whether element has a valid namespace */\n      if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n      /* Make sure that older browsers don't get fallback-tag mXSS */\n      if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n      /* Sanitize element content to be template-safe */\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n        /* Get the element's text content */\n        content = currentNode.textContent;\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          content = stringReplace(content, expr, ' ');\n        });\n        if (currentNode.textContent !== content) {\n          arrayPush(DOMPurify.removed, {\n            element: currentNode.cloneNode()\n          });\n          currentNode.textContent = content;\n        }\n      }\n      /* Execute a hook if present */\n      _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n      return false;\n    };\n    /**\n     * _isValidAttribute\n     *\n     * @param lcTag Lowercase tag name of containing element.\n     * @param lcName Lowercase attribute name.\n     * @param value Attribute value.\n     * @return Returns true if `value` is valid, otherwise false.\n     */\n    // eslint-disable-next-line complexity\n    const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n      /* Make sure attribute cannot clobber */\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n        return false;\n      }\n      /* Allow valid data-* attributes: At least one character after \"-\"\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n          We don't need to check the value; it's always URI safe. */\n      if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n        if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n          return false;\n        }\n        /* Check value is safe. First, is attr inert? If so, is safe */\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n        return false;\n      } else ;\n      return true;\n    };\n    /**\n     * _isBasicCustomElement\n     * checks if at least one dash is included in tagName, and it's not the first char\n     * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n     *\n     * @param tagName name of the tag of the node to sanitize\n     * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n     */\n    const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n      return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n    };\n    /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param currentNode to sanitize\n     */\n    const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n      /* Execute a hook if present */\n      _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n      const {\n        attributes\n      } = currentNode;\n      /* Check if we have attributes; if not we might have a text node */\n      if (!attributes || _isClobbered(currentNode)) {\n        return;\n      }\n      const hookEvent = {\n        attrName: '',\n        attrValue: '',\n        keepAttr: true,\n        allowedAttributes: ALLOWED_ATTR,\n        forceKeepAttr: undefined\n      };\n      let l = attributes.length;\n      /* Go backwards over all attributes; safely remove bad ones */\n      while (l--) {\n        const attr = attributes[l];\n        const {\n          name,\n          namespaceURI,\n          value: attrValue\n        } = attr;\n        const lcName = transformCaseFunc(name);\n        let value = name === 'value' ? attrValue : stringTrim(attrValue);\n        /* Execute a hook if present */\n        hookEvent.attrName = lcName;\n        hookEvent.attrValue = value;\n        hookEvent.keepAttr = true;\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n        _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n        value = hookEvent.attrValue;\n        /* Full DOM Clobbering protection via namespace isolation,\n         * Prefix id and name attributes with `user-content-`\n         */\n        if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n          // Remove the attribute with this value\n          _removeAttribute(name, currentNode);\n          // Prefix the value and later re-create the attribute with the sanitized value\n          value = SANITIZE_NAMED_PROPS_PREFIX + value;\n        }\n        /* Work around a security issue with comments inside attributes */\n        if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n          _removeAttribute(name, currentNode);\n          continue;\n        }\n        /* Did the hooks approve of the attribute? */\n        if (hookEvent.forceKeepAttr) {\n          continue;\n        }\n        /* Remove attribute */\n        _removeAttribute(name, currentNode);\n        /* Did the hooks approve of the attribute? */\n        if (!hookEvent.keepAttr) {\n          continue;\n        }\n        /* Work around a security issue in jQuery 3.0 */\n        if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n          _removeAttribute(name, currentNode);\n          continue;\n        }\n        /* Sanitize attribute content to be template-safe */\n        if (SAFE_FOR_TEMPLATES) {\n          arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n            value = stringReplace(value, expr, ' ');\n          });\n        }\n        /* Is `value` valid for this attribute? */\n        const lcTag = transformCaseFunc(currentNode.nodeName);\n        if (!_isValidAttribute(lcTag, lcName, value)) {\n          continue;\n        }\n        /* Handle attributes that require Trusted Types */\n        if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n          if (namespaceURI) ; else {\n            switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n              case 'TrustedHTML':\n                {\n                  value = trustedTypesPolicy.createHTML(value);\n                  break;\n                }\n              case 'TrustedScriptURL':\n                {\n                  value = trustedTypesPolicy.createScriptURL(value);\n                  break;\n                }\n            }\n          }\n        }\n        /* Handle invalid data-* attribute set by try-catching it */\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n          if (_isClobbered(currentNode)) {\n            _forceRemove(currentNode);\n          } else {\n            arrayPop(DOMPurify.removed);\n          }\n        } catch (_) {}\n      }\n      /* Execute a hook if present */\n      _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n    };\n    /**\n     * _sanitizeShadowDOM\n     *\n     * @param fragment to iterate over recursively\n     */\n    const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n      let shadowNode = null;\n      const shadowIterator = _createNodeIterator(fragment);\n      /* Execute a hook if present */\n      _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n      while (shadowNode = shadowIterator.nextNode()) {\n        /* Execute a hook if present */\n        _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n        /* Sanitize tags and elements */\n        _sanitizeElements(shadowNode);\n        /* Check attributes next */\n        _sanitizeAttributes(shadowNode);\n        /* Deep shadow DOM detected */\n        if (shadowNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(shadowNode.content);\n        }\n      }\n      /* Execute a hook if present */\n      _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n    };\n    // eslint-disable-next-line complexity\n    DOMPurify.sanitize = function (dirty) {\n      let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      let body = null;\n      let importedNode = null;\n      let currentNode = null;\n      let returnNode = null;\n      /* Make sure we have a string to sanitize.\n        DO NOT return early, as this will return the wrong type if\n        the user has requested a DOM object rather than a string */\n      IS_EMPTY_INPUT = !dirty;\n      if (IS_EMPTY_INPUT) {\n        dirty = '<!-->';\n      }\n      /* Stringify, in case dirty is an object */\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\n        if (typeof dirty.toString === 'function') {\n          dirty = dirty.toString();\n          if (typeof dirty !== 'string') {\n            throw typeErrorCreate('dirty is not a string, aborting');\n          }\n        } else {\n          throw typeErrorCreate('toString is not a function');\n        }\n      }\n      /* Return dirty HTML if DOMPurify cannot run */\n      if (!DOMPurify.isSupported) {\n        return dirty;\n      }\n      /* Assign config vars */\n      if (!SET_CONFIG) {\n        _parseConfig(cfg);\n      }\n      /* Clean up removed elements */\n      DOMPurify.removed = [];\n      /* Check if dirty is correctly typed for IN_PLACE */\n      if (typeof dirty === 'string') {\n        IN_PLACE = false;\n      }\n      if (IN_PLACE) {\n        /* Do some early pre-sanitization to avoid unsafe root nodes */\n        if (dirty.nodeName) {\n          const tagName = transformCaseFunc(dirty.nodeName);\n          if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n            throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n          }\n        }\n      } else if (dirty instanceof Node) {\n        /* If dirty is a DOM element, append to an empty document to avoid\n           elements being stripped by the parser */\n        body = _initDocument('<!---->');\n        importedNode = body.ownerDocument.importNode(dirty, true);\n        if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n          /* Node is already a body, use as is */\n          body = importedNode;\n        } else if (importedNode.nodeName === 'HTML') {\n          body = importedNode;\n        } else {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          body.appendChild(importedNode);\n        }\n      } else {\n        /* Exit directly if we have nothing to do */\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1) {\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        }\n        /* Initialize the document to work on */\n        body = _initDocument(dirty);\n        /* Check we have a DOM node from the data */\n        if (!body) {\n          return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n        }\n      }\n      /* Remove first element node (ours) if FORCE_BODY is set */\n      if (body && FORCE_BODY) {\n        _forceRemove(body.firstChild);\n      }\n      /* Get node iterator */\n      const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n      /* Now start iterating over the created document */\n      while (currentNode = nodeIterator.nextNode()) {\n        /* Sanitize tags and elements */\n        _sanitizeElements(currentNode);\n        /* Check attributes next */\n        _sanitizeAttributes(currentNode);\n        /* Shadow DOM detected, sanitize it */\n        if (currentNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(currentNode.content);\n        }\n      }\n      /* If we sanitized `dirty` in-place, return it. */\n      if (IN_PLACE) {\n        return dirty;\n      }\n      /* Return sanitized string or DOM */\n      if (RETURN_DOM) {\n        if (RETURN_DOM_FRAGMENT) {\n          returnNode = createDocumentFragment.call(body.ownerDocument);\n          while (body.firstChild) {\n            // eslint-disable-next-line unicorn/prefer-dom-node-append\n            returnNode.appendChild(body.firstChild);\n          }\n        } else {\n          returnNode = body;\n        }\n        if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n          /*\n            AdoptNode() is not used because internal state is not reset\n            (e.g. the past names map of a HTMLFormElement), this is safe\n            in theory but we would rather not risk another attack vector.\n            The state that is cloned by importNode() is explicitly defined\n            by the specs.\n          */\n          returnNode = importNode.call(originalDocument, returnNode, true);\n        }\n        return returnNode;\n      }\n      let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n      /* Serialize doctype if allowed */\n      if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n        serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n      }\n      /* Sanitize final string template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          serializedHTML = stringReplace(serializedHTML, expr, ' ');\n        });\n      }\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n    };\n    DOMPurify.setConfig = function () {\n      let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _parseConfig(cfg);\n      SET_CONFIG = true;\n    };\n    DOMPurify.clearConfig = function () {\n      CONFIG = null;\n      SET_CONFIG = false;\n    };\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\n      /* Initialize shared config vars if necessary. */\n      if (!CONFIG) {\n        _parseConfig({});\n      }\n      const lcTag = transformCaseFunc(tag);\n      const lcName = transformCaseFunc(attr);\n      return _isValidAttribute(lcTag, lcName, value);\n    };\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\n      if (typeof hookFunction !== 'function') {\n        return;\n      }\n      arrayPush(hooks[entryPoint], hookFunction);\n    };\n    DOMPurify.removeHook = function (entryPoint, hookFunction) {\n      if (hookFunction !== undefined) {\n        const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n        return index === -1 ? undefined : arraySplice(hooks[entryPoint], index, 1)[0];\n      }\n      return arrayPop(hooks[entryPoint]);\n    };\n    DOMPurify.removeHooks = function (entryPoint) {\n      hooks[entryPoint] = [];\n    };\n    DOMPurify.removeAllHooks = function () {\n      hooks = _createHooksMap();\n    };\n    return DOMPurify;\n  }\n  var purify = createDOMPurify();\n\n  return purify;\n\n}));\n//# sourceMappingURL=purify.js.map\n","import html from 'nanohtml';\nimport raw from 'nanohtml/raw';\nimport { CommentData } from '../types';\nimport PostComment from '../../components/PostComment';\n\nexport default function buildComment(\n  {\n    meta: { nickname, avatar, datetime, current },\n    text,\n    likes,\n    granted,\n    deleted,\n  }: CommentData,\n  container: HTMLElement,\n) {\n  const { humanized: humanDatetime, iso: isoDatetime } =\n    typeof datetime == 'string' ? { humanized: datetime } : datetime;\n\n  const comment = html` <post-comment\n    ${likes ? { likes } : {}}\n    ${granted ? { granted: '' } : {}}\n    ${deleted ? { deleted: '' } : {}}\n    ${current ? { 'by-current-user': '' } : {}}\n  >\n    <time slot=\"datetime\" ${isoDatetime ? { datetime: isoDatetime } : {}}>\n      ${humanDatetime}\n    </time>\n    <strong slot=\"nickname\" aria-label=\"Никнейм пользователя\"\n      >${nickname}</strong\n    >\n    <img slot=\"avatar\" src=\"${avatar}\" alt=\"Аватар пользователя ${nickname}\" />\n    <div aria-label=\"Текст комментария\">${raw(text)}</div>\n  </post-comment>`;\n  container.appendChild(comment);\n\n  return comment as PostComment;\n}\n","module.exports = require('./dom')(document)\n","'use strict'\n\nfunction nanohtmlRawBrowser (tag) {\n  var el = document.createElement('div')\n  el.innerHTML = tag\n  return toArray(el.childNodes)\n}\n\nfunction toArray (arr) {\n  return Array.isArray(arr) ? arr : [].slice.call(arr)\n}\n\nmodule.exports = nanohtmlRawBrowser\n","import { CommentMeta } from './types';\nimport { Comment, User } from '../components/PostComment/types';\nimport { processTimestamp } from '../components/PostComment/utils';\nimport PostComment from '../components/PostComment';\nimport users from '../assets/dummy/users.json';\nimport comments from '../assets/dummy/comments.json';\n\ntype DummyUser = User;\ntype DummyComment = Omit<Comment, 'user' | 'replies'> & {\n  user: User['id'];\n  replies: DummyComment[];\n};\n\nconst DUMMY_AVATAR_BASE_URL = 'https://api.dicebear.com/9.x';\nconst DUMMY_AVATAR_STYLE = 'avataaars';\nconst DUMMY_AVATAR_FORMAT = 'png';\nconst DUMMY_AVATAR_BG_COLOR = '0172ad';\n\nlet curDummuUserId: DummyUser['id'];\nconst dummyUsers: DummyUser[] = (users as User[]).map(\n  ({ id, nickname, avatar, current }) => ({\n    id,\n    nickname,\n    avatar: avatar ?? getDummyAvatarSrc(nickname),\n    current: Boolean(current && !curDummuUserId && (curDummuUserId = id)),\n  }),\n);\nconst curDummyUser: DummyUser | undefined = dummyUsers.filter(\n  ({ current }) => current,\n)?.[0];\n\nexport const dummyComments: Comment[] = getDummyComments(\n  comments as DummyComment[],\n);\n\nfunction getDummyComments(dummyComments: DummyComment[]): Comment[] {\n  return dummyComments.map(\n    ({ id, user, timestamp, text, likes, replies, granted, deleted }) => ({\n      id,\n      user:\n        dummyUsers.find(({ id }) => id.toString() === user.toString()) ??\n        genAnonimus(),\n      timestamp,\n      text,\n      likes,\n      replies: replies ? getDummyComments(replies) : undefined,\n      granted: granted || curDummyUser?.id.toString() === String(user),\n      deleted,\n    }),\n  );\n}\n\nexport function getDummyAvatarSrc(\n  nickname: string,\n  size = PostComment.avatarSize,\n) {\n  const url = new URL(\n    `${DUMMY_AVATAR_BASE_URL}/${DUMMY_AVATAR_STYLE}/${DUMMY_AVATAR_FORMAT}`,\n  );\n  const params = new URLSearchParams({\n    seed: nickname,\n    backgroundColor: DUMMY_AVATAR_BG_COLOR,\n    size: size.toString(),\n  });\n  url.search = params.toString();\n  return url.toString();\n}\n\nexport function getCurDummyUserCommentMeta(): CommentMeta {\n  const {\n    nickname = PostComment.anonimusNickname,\n    avatar = PostComment.anonimusAvatar,\n  } = curDummyUser || genAnonimus();\n  return {\n    userId: curDummyUser?.id,\n    nickname,\n    avatar,\n    datetime: processTimestamp(Date.now()),\n    current: true,\n  };\n}\n\nexport function genAnonimus() {\n  return {\n    id: genId(),\n    nickname: PostComment.anonimusNickname,\n    avatar: PostComment.anonimusAvatar,\n    current: false,\n  };\n}\n\nexport function genId() {\n  return Date.now();\n}\n","[\n  {\n    \"id\": 101,\n    \"nickname\": \"BluePill\",\n    \"current\": true\n  },\n  {\n    \"id\": 102,\n    \"nickname\": \"~юный~скуф~\"\n  },\n  {\n    \"id\": 103,\n    \"nickname\": \"P0w3r\"\n  },\n  {\n    \"id\": 104,\n    \"nickname\": \"Симулякр\"\n  }\n]\n","[\n  {\n    \"id\": 1001,\n    \"user\": 101,\n    \"timestamp\": 1740563333000,\n    \"text\": \"Тетрис?\",\n    \"likes\": 0,\n    \"replies\": [\n      {\n        \"id\": 1002,\n        \"user\": 102,\n        \"timestamp\": 1740563550000,\n        \"text\": \"Нееее\",\n        \"likes\": 0,\n        \"replies\": []\n      },\n      {\n        \"id\": 1003,\n        \"user\": 104,\n        \"timestamp\": 1740563598000,\n        \"text\": \"Хм, ну нет... <small>(а похоже)</small>\",\n        \"likes\": 1,\n        \"replies\": []\n      },\n      {\n        \"id\": 1004,\n        \"user\": 101,\n        \"timestamp\": 1740563625000,\n        \"text\": \"Удаленный комментарий\",\n        \"deleted\": true\n      }\n    ]\n  },\n  {\n    \"id\": 1005,\n    \"user\": 101,\n    \"timestamp\": 1740563672000,\n    \"text\": \"A Quiet Place: The Road Ahead?\",\n    \"likes\": 4,\n    \"replies\": [\n      {\n        \"id\": 1006,\n        \"user\": 102,\n        \"timestamp\": 1740563714000,\n        \"text\": \"Да!\",\n        \"likes\": 2,\n        \"replies\": [\n          {\n            \"id\": 1007,\n            \"user\": 103,\n            \"timestamp\": 1740563823000,\n            \"text\": \"Был уверен что <u>The Quarry</u>(\",\n            \"likes\": 1\n          }\n        ]\n      }\n    ]\n  }\n]\n","import { LikeEventDetail } from '../components/PostComment';\n\nimport buildCommentAddingForm from './builders/commentAddingForm';\nimport intentReplyEventHandler from './event_handlers/intentReply';\nimport deleteCommentEventHandler from './event_handlers/deleteComment';\n\nexport {\n  buildCommentAddingForm,\n  intentReplyEventHandler,\n  deleteCommentEventHandler,\n};\n\nexport const likeCommentEventHandler = (e: CustomEvent<LikeEventDetail>) =>\n  // eslint-disable-next-line no-console\n  console.log('comment likes count', e.detail.likes);\n\nexport const scroll2elem = (elem: HTMLElement) =>\n  elem.scrollIntoView({\n    behavior: 'smooth',\n    block: 'start',\n  });\n","import html from 'nanohtml';\nimport raw from 'nanohtml/raw';\nimport publishCommentEventHandler from '../event_handlers/publishComment';\nimport inputCommentEventHandler from '../event_handlers/inputComment';\nimport { setElementDisabled } from '../../components/PostComment/utils';\nimport iconSprite from '../../assets/icons/sprite.svg?url';\n\nexport default function buildCommentAddingForm(\n  form?: HTMLFormElement | null,\n  commentsContainer = document.body,\n  formContainer?: HTMLElement | null,\n) {\n  if (!form) {\n    form = html` <form>\n      <textarea\n        placeholder=\"Написать комментарий...\"\n        required\n        minlength=\"1\"\n        maxlength=\"1024\"\n      ></textarea>\n      <button disabled>\n        <svg>\n          <use href=\"${iconSprite}#airplane\" />\n        </svg>\n        <span>Отправить</span>\n      </button>\n      ${raw(' ')}\n      <button type=\"reset\">\n        <svg>\n          <use href=\"${iconSprite}#cross\" />\n        </svg>\n        <span>Отменить</span>\n      </button>\n    </form>` as HTMLFormElement;\n\n    (formContainer ?? commentsContainer).prepend(form);\n  }\n\n  if (!form._addCommentOnSubmit) {\n    form._addCommentOnSubmit = (e: SubmitEvent) =>\n      publishCommentEventHandler(e, commentsContainer);\n  }\n\n  if (!form._onReset) {\n    const button = form.querySelector(\n      'button:not([type=\"reset\"])',\n    ) as HTMLButtonElement | null;\n    form._onReset = () => setElementDisabled(button, true);\n  }\n\n  form.addEventListener('submit', form._addCommentOnSubmit);\n  form.addEventListener('reset', form._onReset);\n  form\n    .querySelector('textarea')\n    ?.addEventListener('input', inputCommentEventHandler as EventListener);\n\n  return form;\n}\n","module.exports = require('./helpers/bundle-url').getBundleURL('7o1Gz') + \"sprite.f5ef0385.svg\";","import html from 'nanohtml';\nimport { IntentReplyEventDetail } from '../../components/PostComment';\nimport buildCommentAddingForm from '../builders/commentAddingForm';\n\nexport default function intentReplyEventHandler({\n  detail,\n}: CustomEvent<IntentReplyEventDetail>) {\n  const { comment } = detail;\n  // eslint-disable-next-line no-console\n  console.log('intent to reply on comment', comment);\n\n  let commentReplyes = comment.querySelector('[slot=\"replies\"]') as HTMLElement;\n  if (!commentReplyes) {\n    commentReplyes = html`<section\n      slot=\"replies\"\n      aria-label=\"Ответы на комментарий\"\n    />` as HTMLElement;\n    comment.appendChild(commentReplyes);\n  }\n\n  let addCommentForm = comment.querySelector('form') as HTMLFormElement | null;\n  addCommentForm = buildCommentAddingForm(addCommentForm, commentReplyes);\n\n  addCommentForm.hidden = false;\n  if (!addCommentForm._resetFormHandler) {\n    addCommentForm._hideForm = () => (addCommentForm.hidden = true);\n  }\n  addCommentForm.addEventListener('reset', addCommentForm._hideForm);\n  addCommentForm.addEventListener('submit', addCommentForm._hideForm);\n}\n","import { DeleteEventDetail } from '../../components/PostComment';\n\nexport default function deleteCommentEventHandler({\n  detail,\n}: CustomEvent<DeleteEventDetail>) {\n  const { comment } = detail;\n  // eslint-disable-next-line no-console\n  console.log('deleted comment', comment);\n\n  const addCommentForm = comment.querySelector(\n    ':scope > [slot=\"replies\"] > form',\n  ) as HTMLFormElement | null;\n  addCommentForm?.remove();\n}\n"],"names":["$65de6e4b920662fb$var$curDummuUserId","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$interopDefault","a","__esModule","default","SlotName","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$0380ce8f1f064ccc$export$6503ec6e8aabbaf","$0380ce8f1f064ccc$var$mapping","Map","baseUrl","manifest","i","length","path","$7dd1ddf6834435ca$export$bdfd709ae4826697","$7dd1ddf6834435ca$var$bundleURL","value","$7dd1ddf6834435ca$var$getBundleURL","matches","stack","match","replace","$bNZ83","$fa4bq","$6P1MF","$bmjQA","$9sIMV","document","nanoHtmlCreateElement","tag","props","children","indexOf","namespace","el","ns","isCustomElement","is","createElementNS","createComment","comment","createElement","p","hasOwnProperty","key","toLowerCase","val","String","slice","setAttributeNS","test","setAttribute","comments","createFragment","nodes","fragment","createDocumentFragment","Array","isArray","appendChild","createTextNode","$cfQOB","h","opts","concat","b","attrToProp","strings","state","reg","arglen","arguments","parts","arg","parse","xstate","push","apply","tree","cur","ix","pop","undefined","c","copyKey","j","strfn","$8983b03873d31767$var$selfClosing","$8983b03873d31767$var$closeRE","shift","str","res","charAt","substr","x","RegExp","tagName","attrs","attr","$8ebfdabf033804f1$var$transform","$b09b08eb07bf1b39$var$trailingNewlineRegex","$b09b08eb07bf1b39$var$leadingNewlineRegex","$b09b08eb07bf1b39$var$trailingSpaceRegex","$b09b08eb07bf1b39$var$leadingSpaceRegex","$b09b08eb07bf1b39$var$multiSpaceRegex","$b09b08eb07bf1b39$var$TEXT_TAGS","$b09b08eb07bf1b39$var$VERBATIM_TAGS","childs","leader","nodeName","hadText","len","node","Date","toString","lastChild","childNodes","nodeValue","ownerDocument","removeChild","nodeType","_nodeName","getBundleURL","JSON","$7a9522764e05cda2$export$114e10060e7457c","$7e0f747abf4b0146$export$2e2bcd8739ae039","allowedTags","constructor","Set","clean","input","doc","parser","DOMParser","parseFromString","body","wrapped","firstElementChild","_clean","innerHTML","_extraAllowedTags","Node","ELEMENT_NODE","element","has","includes","from","forEach","child","parent","parentNode","firstChild","insertBefore","$5e5fa34344a1714f$export$5b5aedec9076f4c6","datetime","iso","toISOString","humanized","$5e5fa34344a1714f$export$6bc7a21efe788521","date","formattedDate","toLocaleDateString","day","month","year","getFullYear","formattedTime","toLocaleTimeString","hour","minute","second","$5e5fa34344a1714f$export$c3d29b5df8a250da","elem","flag","hidden","$5e5fa34344a1714f$export$22bd32654b194b3f","disabled","$5e5fa34344a1714f$export$3647eb90f6c46771","attrName","getAttribute","$5e5fa34344a1714f$export$e64d42a353cd7a44","removeAttribute","$5e5fa34344a1714f$export$e8e56581baf7cf43","name","querySelector","$5e5fa34344a1714f$export$de7b072049c48af5","component","HTMLElement","$5e5fa34344a1714f$export$139e6f4077062a47","$5e5fa34344a1714f$export$60a7c802e3339d7d","fromEntries","entries","map","$f5b370cd49675592$var$template","$8144c85a2570f11c$var$PostComment","_initData","template","_wrapper","COMPONENT_NAME","LIKE_EVENT_NAME","INTENT_REPLY_EVENT_NAME","DELETE_EVENT_NAME","extTemplateId","avatarSize","anonimusNickname","anonimusAvatar","_sanitizer","_shadow","_liked","_deleted","_slotElemsWrappers","_obtainTemplate","_prepareSlotElemsWrappers","user","userId","nickname","avatar","current","timestamp","now","text","likes","replies","granted","deleted","delete","_buildNicknameElement","_buildAvatarElement","_buildDatetimeElement","_buildCommentTextElement","reply","wrapper","cloneNode","dataset","observedAttributes","allowedTextTags","Number","count","slotElements","_getSlotElements","filter","flatMap","querySelectorAll","_deleteSlotElements","tmp","content","append","_wrapElemAndInsert2slot","initData","connectedCallback","attachShadow","mode","_attachEventListeners","_render","attributeChangedCallback","addReply","_delete","_getElement","replaceChildren","likeBtn","classList","toggle","_getElemModifCssCls","addEventListener","_handleLike","_handleReply","_handleDelete","dispatchEvent","CustomEvent","bubbles","composed","detail","_","slot","_getSlot","replaceWith","remove","attributes","src","_getSlotElemWrapper","HTMLImageElement","HTMLTimeElement","_wrapSlotElement","DocumentFragment","_getSlotTemplate","item","flatten","assignedElements","_getElemCssCls","elemName","modificator","$2ab559d76dc5c458$export$6bcf52c5616b02ac","$2ab559d76dc5c458$export$2e2bcd8739ae039","inputCommentEvent","inputCommentElement","target","addCommentForm","closest","commentButton","trim","minLength","maxLength","Infinity","filled","$a891510b26e6e0ec$exports","factory","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","construct","Reflect","fun","thisValue","args","Func","arrayForEach","unapply","prototype","arrayLastIndexOf","lastIndexOf","arrayPop","arrayPush","arraySplice","splice","stringToLowerCase","stringToString","stringMatch","stringReplace","stringIndexOf","stringTrim","objectHasOwnProperty","regExpTest","typeErrorCreate","func","TypeError","_len2","_key2","thisArg","_len","_key","addToSet","array","transformCaseFunc","l","lcElement","clone","object","newObject","property","cleanArray","index","lookupGetter","prop","desc","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","html","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","EXPRESSIONS","__proto__","CUSTOM_ELEMENT","NODE_TYPE","progressingInstruction","_createTrustedTypesPolicy","trustedTypes","purifyHostElement","createPolicy","suffix","ATTR_NAME","hasAttribute","policyName","createHTML","createScriptURL","scriptUrl","console","warn","_createHooksMap","afterSanitizeAttributes","afterSanitizeElements","afterSanitizeShadowDOM","beforeSanitizeAttributes","beforeSanitizeElements","beforeSanitizeShadowDOM","uponSanitizeAttribute","uponSanitizeElement","uponSanitizeShadowNode","createDOMPurify","trustedTypesPolicy","window1","DOMPurify","root","version","removed","Element","isSupported","originalDocument","currentScript","HTMLTemplateElement","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","ElementPrototype","getNextSibling","getChildNodes","getParentNode","emptyHTML","implementation","createNodeIterator","getElementsByTagName","importNode","hooks","createHTMLDocument","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","TRUSTED_TYPES_POLICY","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","namespaceURI","parentTagName","Boolean","_forceRemove","_removeAttribute","attribute","getAttributeNode","_initDocument","dirty","leadingWhitespace","dirtyPayload","documentElement","createDocument","_createNodeIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","SHOW_PROCESSING_INSTRUCTION","SHOW_CDATA_SECTION","_isClobbered","textContent","hasChildNodes","_isNode","_executeHooks","currentNode","data","hook","_sanitizeElements","_isBasicCustomElement","childCount","childClone","__removalCount","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","attrValue","keepAttr","allowedAttributes","forceKeepAttr","SANITIZE_NAMED_PROPS_PREFIX","getAttributeType","_sanitizeShadowDOM","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","nodeIterator","shadowroot","shadowrootmode","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","addHook","entryPoint","hookFunction","removeHook","removeHooks","removeAllHooks","$2fe77e3211220ea2$exports","$af68d26e6254a194$exports","arr","$0c2ae4ee50ae19c7$exports","$9e2c3a2fa881e26e$exports","$65de6e4b920662fb$var$dummyUsers","$65de6e4b920662fb$export$6b4d17951d525800","size","url","URL","params","URLSearchParams","seed","backgroundColor","search","$65de6e4b920662fb$var$curDummyUser","$65de6e4b920662fb$export$eb9786ca839077d7","$65de6e4b920662fb$var$getDummyComments","dummyComments","find","$65de6e4b920662fb$export$436db612211f10c0","$cf1346a02618cd5c$export$3ef38108298ac5d2","$6bae9757046c9c20$exports","$217b24953a9b81c8$export$2e2bcd8739ae039","form","commentsContainer","formContainer","prepend","_addCommentOnSubmit","publishCommentEvent","preventDefault","commentInput","commentText","Event","meta","container","humanDatetime","isoDatetime","_onReset","button","$be0190612a7a6fe4$export$85951da1d4c8a506","log","$be0190612a7a6fe4$export$23f86e05da2c496","scrollIntoView","behavior","block","customElements","define","commentsThread","getElementById","resetButton","commentReplyes","_resetFormHandler","_hideForm","scrolled"],"version":3,"file":"index.91434d53.js.map"}